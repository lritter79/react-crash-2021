package.json has scripts put there by create react app

react dom renders the app to the browser
react dom is interchangable with react native
react icons is a set of react components

start runs development
build runs the stuff for deploying "building"
 
"npm start" runs development server

jsx componentets can only have on parent element
classname compiles to class 

jsx classes need to import react, jsx functions dont
pass in numbers with curly brackets

use double curly braces from inline styling, and in camel case

.map() loops through a list and outputs something based on each item in the array it's targeting
.map() takes a function

we went tasks to be a part of our states
stae gets passed down, tasks get passed up

how to build static assets for deploying
"npm run build" creates your static assets in a folder  called "build"
build is what gets deployed

to serve on your computer locally run "npm i serve", then "serve - s build -p {port number}"

json server is a tool that creates a mock rest api to make a fake backend
to get run "npm i json-server"
add "server" : "json-server --watch db.json --port {port number}" to package.json
creates "db.json
json server creates real ids like a server would

"useEffect" is a hook that deals with doing stuff on page load
headers are for sending data

npm i react-router -dom is for installing routing for react apps
import { BrowserRouter as Router, Route } from 'react-router-dom' to use routing
import the link tag from react for routing
<Link to='/'>example</Link>

How to run this program cause of CORS probably:
1. Open a powershell terminal in vs code:
2. Run "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass" (this lets you run the powershell script for building the dummy "Server")
3. Run "json-server --watch db.json --port 5000"
4. Open another powershell terminal for node
5. Run npm start