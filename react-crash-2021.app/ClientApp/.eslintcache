[{"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js":"1","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js":"2","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js":"3","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js":"4","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js":"5","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js":"6","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js":"7","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js":"8","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js":"9","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js":"10","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js":"11","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AppNavbar.js":"12","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js":"13","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js":"14","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js":"15","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js":"16","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js":"17","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js":"18","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js":"19","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js":"20","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Calendar.js":"21","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js":"22","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Button.js":"23","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js":"24","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js":"25","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js":"26","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js":"27","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js":"28","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js":"29","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js":"30","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js":"31","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js":"32","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\Helpers.js":"33","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Login.js":"34","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\EditTask.js":"35","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\CoolColor.js":"36"},{"size":1019,"mtime":1616710682383,"results":"37","hashOfConfig":"38"},{"size":232,"mtime":1614736916073,"results":"39","hashOfConfig":"38"},{"size":280,"mtime":1614736916063,"results":"40","hashOfConfig":"38"},{"size":198,"mtime":1614736916166,"results":"41","hashOfConfig":"38"},{"size":1558,"mtime":1616710682283,"results":"42","hashOfConfig":"38"},{"size":942,"mtime":1616537402522,"results":"43","hashOfConfig":"38"},{"size":235,"mtime":1616002415422,"results":"44","hashOfConfig":"38"},{"size":1731,"mtime":1617115894441,"results":"45","hashOfConfig":"38"},{"size":375,"mtime":1614736916191,"results":"46","hashOfConfig":"38"},{"size":7475,"mtime":1616710682340,"results":"47","hashOfConfig":"38"},{"size":1702,"mtime":1616710682333,"results":"48","hashOfConfig":"38"},{"size":1687,"mtime":1617139376982,"results":"49","hashOfConfig":"38"},{"size":2966,"mtime":1616002415447,"results":"50","hashOfConfig":"38"},{"size":8388,"mtime":1617040216712,"results":"51","hashOfConfig":"38"},{"size":1104,"mtime":1616710682324,"results":"52","hashOfConfig":"38"},{"size":351,"mtime":1615654121240,"results":"53","hashOfConfig":"38"},{"size":5332,"mtime":1617126228051,"results":"54","hashOfConfig":"38"},{"size":363,"mtime":1616002415431,"results":"55","hashOfConfig":"38"},{"size":699,"mtime":1616002415575,"results":"56","hashOfConfig":"38"},{"size":4485,"mtime":1617116457781,"results":"57","hashOfConfig":"38"},{"size":3932,"mtime":1617140483151,"results":"58","hashOfConfig":"38"},{"size":1678,"mtime":1616710682348,"results":"59","hashOfConfig":"38"},{"size":614,"mtime":1617126168417,"results":"60","hashOfConfig":"38"},{"size":531,"mtime":1616710682362,"results":"61","hashOfConfig":"38"},{"size":371,"mtime":1616002415429,"results":"62","hashOfConfig":"38"},{"size":359,"mtime":1615654121229,"results":"63","hashOfConfig":"38"},{"size":925,"mtime":1617057220456,"results":"64","hashOfConfig":"38"},{"size":4837,"mtime":1617138187744,"results":"65","hashOfConfig":"38"},{"size":1364,"mtime":1617138305769,"results":"66","hashOfConfig":"38"},{"size":535,"mtime":1616710682354,"results":"67","hashOfConfig":"38"},{"size":2936,"mtime":1616002415445,"results":"68","hashOfConfig":"38"},{"size":290,"mtime":1616710682294,"results":"69","hashOfConfig":"38"},{"size":159,"mtime":1616710682279,"results":"70","hashOfConfig":"38"},{"size":3082,"mtime":1616710682306,"results":"71","hashOfConfig":"38"},{"size":3975,"mtime":1617118966063,"results":"72","hashOfConfig":"38"},{"size":307,"mtime":1617138256052,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"ea2nox",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"122","usedDeprecatedRules":"117"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"156","usedDeprecatedRules":"153"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js",[],["163","164"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js",[],["165","166"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js",[],["167","168"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js",[],["169","170"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js",["171","172","173","174"],"import { useState, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport userFunctions from './UserFunctions'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport { useToken } from './UserContext'\r\nimport Helpers from '../../Helpers'\r\n\r\n\r\nconst UserManager = ({ handleLogout }) => {\r\n    //console.log(`id: ${id}`)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [user, setUser] = useState()\r\n    const [showDeleteForm, setShowDeleteForm] = useState(false)\r\n    const [deleteDisabled, setDeleteDisabled] = useState(false)\r\n    const [submitDisabled, setSubmitDisabled] = useState(false)\r\n    const { token } = useToken()\r\n\r\n    const onSave = useShowToast()\r\n    //https://stackoverflow.com/questions/53120972/how-to-call-loading-function-with-react-useeffect-only-once\r\n\r\n    useEffect(() => {\r\n\r\n        const getUser = async () => {\r\n            try {\r\n                //\r\n                //(CrudOperations)                               \r\n                console.log('getting user')\r\n                //console.log(`user = ${userId}`)\r\n                if (token != undefined) {\r\n                    const userData = await userFunctions.getUser(token?.id, token?.token)\r\n                    setUser(userData)\r\n                    setIsLoading(false)\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n                onSave('error', error)\r\n            }\r\n        }\r\n\r\n        getUser()\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        return function cleanup() {\r\n            //console.log('clean up')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //console.log('user use effect')\r\n        //if (isChecked != undefined) {\r\n        //    //const updatedUser = await userFunctions.saveUser({ user, id, token })        \r\n        //}\r\n        //else {\r\n        //    console.log('first time')\r\n        //}\r\n        //console.log('set')\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        console.log('isLoading use effect')\r\n    }, [isLoading])\r\n\r\n    \r\n\r\n\r\n    async function updateUser(appUser) {\r\n        \r\n        return fetch(`${Constant()}/api/users/${token?.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token?.token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(appUser),\r\n        })\r\n            .then(function (data) {\r\n               onSave('success', 'Your changes have been saved')\r\n               return data.json()\r\n            })\r\n            .catch((error) => {\r\n               onSave('error', error)\r\n            })\r\n    }\r\n\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        setSubmitDisabled(true)\r\n        let res = await updateUser(user)  \r\n        await sleep(1000)\r\n        setSubmitDisabled(false)\r\n    }\r\n\r\n    const onSubmitDelete = async e => {\r\n        e.preventDefault()\r\n        setDeleteDisabled(true)\r\n        setShowDeleteForm(true)\r\n        //handleLogout(e)\r\n        //let res = await deleteAccount(id)\r\n    }\r\n\r\n    const onDelete = async e => {\r\n        e.preventDefault()\r\n        handleLogout(e)\r\n        let res = await deleteAccount()\r\n    }\r\n\r\n    async function deleteAccount() {\r\n        return fetch(`${Constant()}/api/users/${token?.id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token?.token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ userId: token?.id }),\r\n        })\r\n        .then(data => data.json())\r\n        .catch((error) => {\r\n            console.error('Fetch Error:', error);\r\n        });\r\n    }  \r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <p>Loading...</p>\r\n            ):\r\n                (<div>\r\n                    {showDeleteForm && (\r\n                        <div className='popup'>\r\n                            <div className='popupForm'>\r\n                                <form>\r\n                                    <label for=\"\">Are you sure?</label>\r\n                                    <br />\r\n                                    <button\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'green' }}\r\n                                        onClick={onDelete}\r\n                                    >\r\n                                        Yes\r\n                                    </button>\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'red' }}\r\n                                        onClick={function () {\r\n                                            setDeleteDisabled(false)\r\n                                            setShowDeleteForm(false)\r\n                                        }}\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n\r\n                                </form>\r\n                            </div>                          \r\n                        </div>\r\n                    )}\r\n                    <Form onSubmit={onSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Open To Collaboration?: \"\r\n                                checked={user.isOpenToCollaboration}\r\n                                onChange={(e) => setUser({ ...user, isOpenToCollaboration: e.currentTarget.checked })} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Bio: \r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=''\r\n                                value={Helpers.replaceNullWithEmptyString(user?.bio)}\r\n                                onChange={(e) => setUser({ ...user, bio: e.target.value })}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <button\r\n                            type='submit'\r\n                            className='btn btn-block'\r\n                            style={{ backgroundColor: 'green' }}\r\n                            disabled={submitDisabled}\r\n                        >\r\n                            Save Changes\r\n                        </button>\r\n                    </Form>\r\n\r\n                    <form onSubmit={onSubmitDelete}>\r\n                        <button\r\n                            type='submit'\r\n                            className='btn'\r\n                            style={{ backgroundColor: 'red' }}\r\n                            disabled={deleteDisabled}\r\n                        >\r\n                            Delete Account\r\n                        </button>\r\n                    </form >                 \r\n                    \r\n                </div>)}\r\n            \r\n        </>\r\n   )\r\n}\r\n\r\nexport default UserManager","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AppNavbar.js",["175"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js",["176"],"import React, { useContext, useState } from 'react'\r\nimport checkIcon from '../../assets/check.svg';\r\nimport errorIcon from '../../assets/error.svg';\r\nimport infoIcon from '../../assets/info.svg';\r\nimport warningIcon from '../../assets/warning.svg';\r\n\r\n\r\nconst ToastListContext = React.createContext()\r\nconst ShowToastContext = React.createContext()\r\n\r\nexport function useToast() {\r\n    return useContext(ToastListContext)\r\n}\r\n\r\nexport function useShowToast() {\r\n    return useContext(ShowToastContext)\r\n}\r\n\r\nexport function ToastProvider({ children }) {\r\n    const [list, setList] = useState([])\r\n\r\n    const showToast = (type, text) => {\r\n        let toastProperties = null\r\n        const id = Math.floor((Math.random() * 100) + 1)\r\n        //console.log('type: ' + type)\r\n        switch (type) {\r\n            case 'error':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Error!',\r\n                    description: `${text}`,\r\n                    backgroundColor: 'salmon',\r\n                    icon: errorIcon\r\n                }\r\n                break\r\n            case 'success':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Success!',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5cb85c',\r\n                    icon: checkIcon\r\n                }\r\n                break\r\n            case 'info':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Info',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5bc0de',\r\n                    icon: infoIcon\r\n                }\r\n                break\r\n\r\n            default:\r\n                setList([])\r\n        }\r\n        setList([...list, toastProperties])\r\n    }\r\n    //const testList = [\r\n    //    {\r\n    //        id: 1,\r\n    //        title: 'Success',\r\n    //        description: 'This is a success toast component',\r\n    //        backgroundColor: '#5cb85c',\r\n    //        icon: checkIcon\r\n    //    },\r\n    //    {\r\n    //        id: 2,\r\n    //        title: 'Danger',\r\n    //        description: 'This is an error toast component',\r\n    //        backgroundColor: '#d9534f',\r\n    //        icon: errorIcon\r\n    //    },\r\n    //    {\r\n    //        id: 3,\r\n    //        title: 'Info',\r\n    //        description: 'This is an info toast component',\r\n    //        backgroundColor: '#5bc0de',\r\n    //        icon: infoIcon\r\n    //    },\r\n    //    {\r\n    //        id: 4,\r\n    //        title: 'Warning',\r\n    //        description: 'This is a warning toast component',\r\n    //        backgroundColor: '#f0ad4e',\r\n    //        icon: warningIcon\r\n    //    }\r\n    //]\r\n    return (\r\n        <ToastListContext.Provider value={list}>\r\n            <ShowToastContext.Provider value={showToast}>\r\n                {children}\r\n            </ShowToastContext.Provider>\r\n        </ToastListContext.Provider>\r\n    )\r\n}",["177","178"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js",["179","180","181","182","183","184"],"import { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\r\n//for authorization\r\n//import authService from './api-authorization/AuthorizeService'\r\nimport Footer from './components/Footer'\r\nimport Constant from './components/Constant'\r\nimport * as signalR from '@microsoft/signalr'\r\nimport AlertCenter from './components/AlertCenter'\r\nimport About from './components/About'\r\nimport UserManager from './components/api-authorization/UserManager'\r\nimport UserFunctions from './components/api-authorization/UserFunctions'\r\nimport RegisterAndLoginRoutes from './components/api-authorization/RegisterAndLoginRoutes'\r\nimport Logout from './components/api-authorization/Logout'\r\nimport Toast from './components/toast/Toast'\r\nimport { useShowToast } from './components/toast/ToastContext'\r\nimport TaskDetails from './components/TaskDetails'\r\nimport TaskTracker from './components/task-tracker/TaskTracker'\r\nimport { useToken } from './components/api-authorization/UserContext'\r\nimport AppNavbar from './components/AppNavbar'\r\n\r\n\r\n//import UpdateTask from './components/UpdateTask'\r\n//function setToken(userToken) {\r\n//    sessionStorage.setItem('token', JSON.stringify(userToken));\r\n\r\n//}\r\n\r\n//function getToken() {\r\n\r\n//    const tokenString = sessionStorage.getItem('token');\r\n//    const userToken = JSON.parse(tokenString);\r\n//    //.? is the optional chain operator: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\r\n//    /*\r\n//     You need to use the optional chaining operator�?.�when accessing the token property because when you \r\n//     first access the application, the value of sessionStorage.getItem('token') will \r\n//     be undefined. If you try to access a property, you will generate an error.\r\n//     */\r\n//    return userToken?.token\r\n//}\r\n//import header and use it like an xml tag\r\n//keeps tasks at the highest level (state)\r\n//changes the state of tasks\r\n//calls fetch tasks whihc returns a promise\r\n//sets tasks as the state\r\nconst App = () => {\r\n    \r\n    const { token, setToken } = useToken()\r\n    //console.log(token)\r\n    const [alerts, setAlerts] = useState([])\r\n    const [checkValue, setCheckValue] = useState(true)\r\n    const [autoDeleteTime, setAutoDeleteTime] = useState(5000)\r\n    const showToast = useShowToast()\r\n    const connection = new signalR.HubConnectionBuilder()\r\n        .withUrl(Constant() + \"/api/alerts\")\r\n        .withAutomaticReconnect()\r\n        .build()\r\n\r\n    const getConnectionId = () => {\r\n        this.hubConnection.invoke('getconnectionid').then(\r\n            (data) => {\r\n                console.log(data);\r\n                this.connectionId = data;\r\n            }\r\n        )\r\n    }\r\n\r\n    const setAlertsOnLogin = async () => {\r\n        let userAlerts = await UserFunctions.getAlertsByUser(token?.id, token?.token)\r\n        setAlerts(userAlerts)\r\n    }\r\n    \r\n\r\n    const removeToken = () => {\r\n        localStorage.removeItem('token');\r\n        setToken(null)\r\n    }\r\n\r\n\r\n    function handleLogoutClick(e) {\r\n        e.preventDefault()       \r\n        removeToken()\r\n    }\r\n\r\n    // Fetch Tasks\r\n    //gets the tasks we have on the server with async java\\\\\r\n    //useEffect(() => {\r\n    //    console.log('changed alerts state')\r\n    //    console.log(alerts)\r\n    //}, [alerts])\r\n\r\n    //useEffect(() => {\r\n    //    console.log('changed check Value')\r\n    //    console.log(checkValue)\r\n    //}, [checkValue])\r\n\r\n    //useEffect(() => {\r\n    //    console.log('changed auto Delete Time state')\r\n    //    console.log(autoDeleteTime)\r\n    //}, [autoDeleteTime])\r\n\r\n    useEffect(() => {\r\n        console.log('using effect in app component')\r\n        // const fetchAlerts = async (id) => {\r\n        //     const res = await fetch(Constant() + `/api/Users/${id}/alerts`, {\r\n        //         method: 'GET',\r\n        //         headers: {\r\n        //             'Authorization': 'Bearer ' + token\r\n        //         }\r\n        //     })\r\n\r\n        //     const data = await res.json()\r\n\r\n        //     return data\r\n        // }\r\n\r\n        // const getAlerts = async () => {\r\n        //     try {\r\n        //         //const tasksFromServer = await fetchAlerts(userId)\r\n        //         //setAlerts(tasksFromServer)\r\n        //     } catch (error) {\r\n        //         showToast('error', error)\r\n        //     }\r\n        // }\r\n\r\n        if (token != undefined) {\r\n            setAlertsOnLogin()\r\n            \r\n            connection.start()\r\n                //.then(async function () {\r\n                //    try {\r\n                //        let res = await connection.invoke('GetUserAlerts', userId)\r\n                //        console.log(res)\r\n                //    }\r\n                //    catch (error) {\r\n                //        console.log(error)\r\n                //    }\r\n                //})\r\n                .then(result => {\r\n                    console.log('building connenction')\r\n                    //console.log(showToast);\r\n                    //showToast('info', 'Connected!')\r\n                    connection.on('sendToReact', alert => {\r\n                        //console.log(alert.message)\r\n                        showToast('info', alert.message)\r\n                        setAlerts(prev => [...prev, alert])\r\n                        //console.log(alerts)\r\n                    })\r\n                })\r\n            .catch(e => console.log('Connection failed: ', e))\r\n            \r\n\r\n            //console.log(userId)\r\n            //getAlerts()\r\n        }\r\n   \r\n        return () => {\r\n            console.log('clean up in app.js')\r\n            if (token != undefined) {\r\n                setAlerts([])\r\n                connection.stop()\r\n            }\r\n\r\n        }\r\n    }, [token])\r\n\r\n    //if there are no tasks, it shows  'No Tasks To Show'\r\n    //short ternary in jsx:\r\n    // {x === y ? (<Thing />) : ('String')}\r\n    //wrap everything in <Router> to use routes\r\n    //exact menas match path exactly\r\n    return (\r\n        \r\n        <Router>        \r\n                <>\r\n                    <div id=\"backdrop\">\r\n\r\n                    </div>\r\n\r\n                    <AppNavbar onLogoutClick={handleLogoutClick} alerts={alerts} />\r\n\r\n                    <div className='container'>\r\n                        <Toast\r\n                            position=\"bottom-right\"\r\n                            autoDelete={checkValue}\r\n                            dismissTime={autoDeleteTime}\r\n                        />\r\n                        <Route path='/about' exact component={About} />\r\n                        <Route path='/logout' exact component={Logout} />\r\n                        {token?.token ? (\r\n                            <>\r\n                                <Route path='/alerts' exact\r\n                                    render={(props) => (\r\n                                        <AlertCenter alerts={alerts} setAlerts={setAlerts} />\r\n                                    )}\r\n                                />\r\n                                <Redirect from='/login' to=\"/\" />\r\n                                <Route path='/userManager' exact\r\n                                render={(props) => (\r\n                                    <UserManager handleLogout={handleLogoutClick} />\r\n                                    )}\r\n                                />\r\n                                <Route path='/' exact\r\n                                    render={(props) => (\r\n                                        <>\r\n                                            <TaskTracker />\r\n                                        </>\r\n\r\n                                    )} />\r\n\r\n                                <Route path='/task/:id' exact\r\n                                    render={(props) => (\r\n                                        <TaskDetails/>\r\n                                    )}\r\n                                />                                                        \r\n                            </>\r\n                        ) : (\r\n                                <>\r\n                                    <RegisterAndLoginRoutes />\r\n                                </>\r\n\r\n                        )}\r\n                        <Footer isLoggedIn={token?.token} />\r\n                    </div>\r\n\r\n                </>\r\n        </Router>\r\n            \r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n",["185","186"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js",[],["187","188"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js",["189"],"﻿import Constant from '../Constant'\r\n\r\nconst FetchTasks = async (id, token) => {\r\n    const res = await fetch(Constant() + `/api/Users/${id}/tasks`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    })\r\n    const data = await res.json()\r\n\r\n    return data\r\n}\r\n\r\nexport default FetchTasks\r\n",["190","191"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js",["192"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js",["193"],"﻿import CreateTask from './CreateTask'\r\nimport DeleteTask from './DeleteTask'\r\nimport FetchTask from './FetchTask'\r\nimport FetchTasks from './FetchTasks'\r\nimport UpdateTask from './UpdateTask'\r\n\r\nconst CrudOperations = {\r\n        CreateTask,\r\n        DeleteTask,\r\n        FetchTask,\r\n        FetchTasks,\r\n        UpdateTask\r\n}\r\n\r\n\r\nexport default CrudOperations","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js",["194","195","196"],"import Constant from '../Constant'\r\nimport CrudOperations from '../task-crud-operations/CrudOperations'\r\nimport Header from '../task-tracker/Header'\r\nimport AddTask from '../task-tracker/AddTask'\r\nimport Tasks from '../task-tracker/Tasks'\r\nimport { useState, useEffect } from 'react'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport { useToken} from '../api-authorization/UserContext'\r\nimport Calendar from './Calendar'\r\nimport Button from '../Button'\r\n\r\nconst TaskTracker = () => {\r\n        //showAddTask = current state\r\n    //setShowAddTask = function that aloows you to update the current state\r\n    //when you update state, the component rerenders\r\n    const { token } = useToken()\r\n    const [showAddTask, setShowAddTask] = useState(false)\r\n    const [tasks, setTasks] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const showToast = useShowToast()\r\n    const [showCalendarView, setShowCalendarView] = useState(false)\r\n   \r\n    useEffect(() => {\r\n        //console.log('task tracker use effect')\r\n        const getTasks = async () => {\r\n            try {\r\n                //console.log(CrudOperations)                               \r\n                //console.log(`token = ${token}`)\r\n                //console.log(`user = ${userId}`)\r\n                if (token != undefined) {\r\n                    const tasksFromServer = await CrudOperations.FetchTasks(token?.id, token?.token)\r\n                    setIsLoading(false)\r\n                    setTasks(tasksFromServer)\r\n                }\r\n                \r\n            } catch (error) {\r\n                showToast('error', error)\r\n            }\r\n        }\r\n\r\n        getTasks()\r\n\r\n        return function cleanup() {\r\n            setTasks([])\r\n        }\r\n    }, [])\r\n\r\n    const onDelete = async (id) => {\r\n        await CrudOperations.DeleteTask(id, token?.token)\r\n        //.filter removes the task with the same id as the id passed up\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n\r\n    // Toggle Reminder\r\n    //takes id so it knows which on to toggle\r\n    const toggleReminder = async (taskToToggle) => {\r\n        try {\r\n            //const taskToToggle = await CrudOperations.FetchTask(id, token)\r\n            const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n            //console.log(updTask)\r\n            const res = await fetch(`${Constant()}/api/tasks/${taskToToggle.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token?.token\r\n                },\r\n                body: JSON.stringify(updTask)\r\n            })\r\n\r\n            const data = await res.json()\r\n\r\n            setTasks(\r\n                tasks.map((task) =>\r\n                    task.id === taskToToggle.id ? { ...task, reminder: data.reminder } : task\r\n                )\r\n            )\r\n        } catch (error) {\r\n            showToast('error', 'error')\r\n        }\r\n\r\n    }\r\n\r\n    const updateTask = async (task) => {\r\n        //console.log(task)\r\n        setTasks(\r\n            tasks.map((oldTask) => task.id === oldTask.id ? task : oldTask)\r\n        )\r\n    }\r\n\r\n    function calendarBtnClick(e) {\r\n        e.currentTarget.blur()\r\n        setShowCalendarView(!showCalendarView)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                onAdd={() => setShowAddTask(!showAddTask)}\r\n                showAdd={showAddTask} />\r\n            <AddTask isToggled={showAddTask}\r\n                tasks={tasks} setTasks={setTasks}\r\n                setShowAddTask={setShowAddTask} />\r\n            <div id='divBtnContainer'>\r\n                <Button text={showCalendarView ? ('Show List View') : ('Show Calendar View')}\r\n                    textColor='white'\r\n                    onClick={calendarBtnClick}\r\n                />\r\n            </div>\r\n            {!isLoading ? (\r\n                (tasks.length > 0) ? (\r\n                    (showCalendarView) ?\r\n                        (<Calendar tasks={tasks} setTasks={setTasks} />) :\r\n                        (<Tasks\r\n                            tasks={tasks}\r\n                            onDelete={onDelete}\r\n                            onToggle={toggleReminder}\r\n                            onGoToDetail={() => { setShowAddTask(false) }} />)\r\n                    ) :\r\n                    ('No Tasks To Show')\r\n            ) : ('Loading ...')}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskTracker","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Calendar.js",["197","198","199"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js",["200"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Button.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js",["201"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js",["202","203"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js",["204"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js",["205","206","207","208","209"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js",["210","211","212"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js",["213"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useToast } from './ToastContext'\r\n\r\nimport './Toast.css';\r\n//source:     transition: max-height 0.5s, opacity 0.5s;\r\nconst Toast = ({ position, autoDelete, dismissTime }) => {\r\n    const toastList = useToast()\r\n    const [list, setList] = useState(toastList)\r\n\r\n    //function sleep(ms) {\r\n    //    console.log('sleeping')\r\n    //    return new Promise(resolve => setTimeout(resolve, ms));\r\n    //  }\r\n\r\n    useEffect(() => {\r\n        //console.log('toastlist side effect')\r\n        //console.log(toastList)\r\n        setList([...toastList]);\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            if (autoDelete && toastList.length && list.length) {            \r\n                deleteToast(toastList[0].id);\r\n            }\r\n        }, dismissTime);\r\n\r\n        return async () => {                     \r\n            clearInterval(interval);\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList, autoDelete, dismissTime, list]);\r\n\r\n    const deleteToast = id => {\r\n        const listItemIndex = list.findIndex(e => e.id === id);\r\n        const toastListItem = toastList.findIndex(e => e.id === id);\r\n        list.splice(listItemIndex, 1);\r\n        toastList.splice(toastListItem, 1);\r\n        setList([...list]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`notification-container ${position}`}>\r\n                {\r\n                    list.map((toast, i) =>\r\n                        <div\r\n                            key={i}\r\n                            className={`notification toast ${('hidden' in toast) ? ('hidden') : ('show')} ${position}`}\r\n                            style={{ backgroundColor: toast.backgroundColor }}\r\n                        >\r\n                            <button onClick={() => deleteToast(toast.id)}>\r\n                                X\r\n                            </button>\r\n                            <div className=\"notification-image\">\r\n                                <img src={toast.icon} alt=\"\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"notification-title\">{toast.title}</p>\r\n                                <p className=\"notification-message\">\r\n                                    {toast.description}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    Toast.defaultProps = {\r\n        position: 'bottom-right'\r\n    }\r\n\r\n    Toast.propTypes = {\r\n        toastList: PropTypes.array.isRequired,\r\n        position: PropTypes.string,\r\n        autoDelete: PropTypes.bool,\r\n        autoDeleteTime: PropTypes.number\r\n    }\r\n}\r\n\r\nexport default Toast\r\n\r\n","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js",[],["214","215"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\Helpers.js",["216"],"﻿const Helpers = {\r\n    'replaceNullWithEmptyString': (str) => {\r\n        if (str === null) return ''\r\n        return str\r\n    }\r\n}\r\n\r\nexport default Helpers","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Login.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\EditTask.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\CoolColor.js",[],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"217","replacedBy":"221"},{"ruleId":"219","replacedBy":"222"},{"ruleId":"217","replacedBy":"223"},{"ruleId":"219","replacedBy":"224"},{"ruleId":"217","replacedBy":"225"},{"ruleId":"219","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":30,"column":27,"nodeType":"229","messageId":"230","endLine":30,"endColumn":29},{"ruleId":"231","severity":1,"message":"232","line":44,"column":8,"nodeType":"233","endLine":44,"endColumn":10,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":96,"column":13,"nodeType":"237","messageId":"238","endLine":96,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":112,"column":13,"nodeType":"237","messageId":"238","endLine":112,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":1,"column":1,"nodeType":"241","messageId":"230","fix":"242"},{"ruleId":"235","severity":1,"message":"243","line":5,"column":8,"nodeType":"237","messageId":"238","endLine":5,"endColumn":19},{"ruleId":"217","replacedBy":"244"},{"ruleId":"219","replacedBy":"245"},{"ruleId":"235","severity":1,"message":"246","line":50,"column":24,"nodeType":"237","messageId":"238","endLine":50,"endColumn":37},{"ruleId":"235","severity":1,"message":"247","line":51,"column":28,"nodeType":"237","messageId":"238","endLine":51,"endColumn":45},{"ruleId":"235","severity":1,"message":"248","line":58,"column":11,"nodeType":"237","messageId":"238","endLine":58,"endColumn":26},{"ruleId":"227","severity":1,"message":"228","line":125,"column":19,"nodeType":"229","messageId":"230","endLine":125,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":158,"column":23,"nodeType":"229","messageId":"230","endLine":158,"endColumn":25},{"ruleId":"231","severity":1,"message":"249","line":164,"column":8,"nodeType":"233","endLine":164,"endColumn":15,"suggestions":"250"},{"ruleId":"217","replacedBy":"251"},{"ruleId":"219","replacedBy":"252"},{"ruleId":"217","replacedBy":"253"},{"ruleId":"219","replacedBy":"254"},{"ruleId":"239","severity":1,"message":"240","line":1,"column":1,"nodeType":"241","messageId":"230","fix":"255"},{"ruleId":"217","replacedBy":"256"},{"ruleId":"219","replacedBy":"257"},{"ruleId":"235","severity":1,"message":"258","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":1,"column":1,"nodeType":"241","messageId":"230","fix":"259"},{"ruleId":"227","severity":1,"message":"228","line":30,"column":27,"nodeType":"229","messageId":"230","endLine":30,"endColumn":29},{"ruleId":"231","severity":1,"message":"260","line":46,"column":8,"nodeType":"233","endLine":46,"endColumn":10,"suggestions":"261"},{"ruleId":"235","severity":1,"message":"262","line":83,"column":11,"nodeType":"237","messageId":"238","endLine":83,"endColumn":21},{"ruleId":"239","severity":1,"message":"240","line":1,"column":1,"nodeType":"241","messageId":"230","fix":"263"},{"ruleId":"231","severity":1,"message":"264","line":54,"column":8,"nodeType":"233","endLine":54,"endColumn":10,"suggestions":"265"},{"ruleId":"231","severity":1,"message":"266","line":61,"column":8,"nodeType":"233","endLine":61,"endColumn":15,"suggestions":"267"},{"ruleId":"235","severity":1,"message":"268","line":8,"column":20,"nodeType":"237","messageId":"238","endLine":8,"endColumn":28},{"ruleId":"239","severity":1,"message":"240","line":1,"column":1,"nodeType":"241","messageId":"230","fix":"269"},{"ruleId":"235","severity":1,"message":"270","line":1,"column":8,"nodeType":"237","messageId":"238","endLine":1,"endColumn":13},{"ruleId":"235","severity":1,"message":"271","line":2,"column":10,"nodeType":"237","messageId":"238","endLine":2,"endColumn":18},{"ruleId":"239","severity":1,"message":"240","line":1,"column":1,"nodeType":"241","messageId":"230","fix":"272"},{"ruleId":"235","severity":1,"message":"273","line":22,"column":22,"nodeType":"237","messageId":"238","endLine":22,"endColumn":33},{"ruleId":"235","severity":1,"message":"274","line":26,"column":11,"nodeType":"237","messageId":"238","endLine":26,"endColumn":20},{"ruleId":"235","severity":1,"message":"275","line":45,"column":15,"nodeType":"237","messageId":"238","endLine":45,"endColumn":24},{"ruleId":"231","severity":1,"message":"276","line":62,"column":8,"nodeType":"233","endLine":62,"endColumn":10,"suggestions":"277"},{"ruleId":"227","severity":1,"message":"228","line":120,"column":40,"nodeType":"229","messageId":"230","endLine":120,"endColumn":42},{"ruleId":"239","severity":1,"message":"240","line":1,"column":1,"nodeType":"241","messageId":"230","fix":"278"},{"ruleId":"235","severity":1,"message":"271","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":18},{"ruleId":"235","severity":1,"message":"279","line":3,"column":20,"nodeType":"237","messageId":"238","endLine":3,"endColumn":29},{"ruleId":"280","severity":1,"message":"281","line":75,"column":5,"nodeType":"282","messageId":"283","endLine":84,"endColumn":6},{"ruleId":"217","replacedBy":"284"},{"ruleId":"219","replacedBy":"285"},{"ruleId":"239","severity":1,"message":"240","line":1,"column":1,"nodeType":"241","messageId":"230","fix":"286"},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],["287"],["288"],["287"],["288"],["287"],["288"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onSave' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["289"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"290","text":"291"},"'warningIcon' is defined but never used.",["287"],["288"],"'setCheckValue' is assigned a value but never used.","'setAutoDeleteTime' is assigned a value but never used.","'getConnectionId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'connection', 'setAlertsOnLogin', and 'showToast'. Either include them or remove the dependency array.",["292"],["287"],["288"],["287"],["288"],{"range":"293","text":"291"},["287"],["288"],"'Constant' is defined but never used.",{"range":"294","text":"291"},"React Hook useEffect has missing dependencies: 'showToast' and 'token'. Either include them or remove the dependency array.",["295"],"'updateTask' is assigned a value but never used.",{"range":"296","text":"291"},"React Hook useEffect has missing dependencies: 'filterAndMap' and 'tasks'. Either include them or remove the dependency array. If 'setEvents' needs the current value of 'tasks', you can also switch to useReducer instead of useState and read 'tasks' in the reducer.",["297"],"React Hook useEffect has a missing dependency: 'filterAndMap'. Either include it or remove the dependency array.",["298"],"'setToken' is assigned a value but never used.",{"range":"299","text":"291"},"'Table' is defined but never used.","'useState' is defined but never used.",{"range":"300","text":"291"},"'setComments' is assigned a value but never used.","'coolColor' is assigned a value but never used.","'fetchTask' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'token?.token'. Either include them or remove the dependency array.",["301"],{"range":"302","text":"291"},"'useEffect' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode",["287"],["288"],{"range":"303","text":"291"},"no-global-assign","no-unsafe-negation",{"desc":"304","fix":"305"},[-1,0],"",{"desc":"306","fix":"307"},[-1,0],[-1,0],{"desc":"308","fix":"309"},[-1,0],{"desc":"310","fix":"311"},{"desc":"310","fix":"312"},[-1,0],[-1,0],{"desc":"313","fix":"314"},[-1,0],[-1,0],"Update the dependencies array to be: [onSave, token]",{"range":"315","text":"316"},"Update the dependencies array to be: [connection, setAlertsOnLogin, showToast, token]",{"range":"317","text":"318"},"Update the dependencies array to be: [showToast, token]",{"range":"319","text":"320"},"Update the dependencies array to be: [filterAndMap, tasks]",{"range":"321","text":"322"},{"range":"323","text":"322"},"Update the dependencies array to be: [id, token?.token]",{"range":"324","text":"325"},[1527,1529],"[onSave, token]",[5757,5764],"[connection, setAlertsOnLogin, showToast, token]",[1757,1759],"[showToast, token]",[1913,1915],"[filterAndMap, tasks]",[2004,2011],[2004,2006],"[id, token?.token]"]