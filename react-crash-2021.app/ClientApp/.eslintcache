[{"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js":"1","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js":"2","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js":"3","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UseToken.js":"4","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js":"5","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js":"6","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js":"7","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js":"8","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js":"9","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js":"10","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js":"11","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js":"12","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js":"13","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js":"14","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js":"15","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js":"16","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js":"17","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js":"18","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js":"19","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Button.js":"20","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js":"21","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js":"22","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Login.js":"23","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js":"24","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js":"25","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js":"26","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Header.js":"27","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js":"28","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Register.js":"29","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\EditTask.js":"30","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTask.js":"31","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js":"32","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js":"33","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js":"34","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js":"35","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js":"36"},{"size":4416,"mtime":1615775151215,"results":"37","hashOfConfig":"38"},{"size":3803,"mtime":1615778716277,"results":"39","hashOfConfig":"38"},{"size":876,"mtime":1615756503277,"results":"40","hashOfConfig":"38"},{"size":1046,"mtime":1615746820766,"results":"41","hashOfConfig":"38"},{"size":280,"mtime":1614736916063,"results":"42","hashOfConfig":"38"},{"size":2969,"mtime":1615686968768,"results":"43","hashOfConfig":"38"},{"size":232,"mtime":1614736916073,"results":"44","hashOfConfig":"38"},{"size":699,"mtime":1615750050543,"results":"45","hashOfConfig":"38"},{"size":858,"mtime":1615775745386,"results":"46","hashOfConfig":"38"},{"size":2936,"mtime":1615694816246,"results":"47","hashOfConfig":"38"},{"size":1447,"mtime":1615694383203,"results":"48","hashOfConfig":"38"},{"size":4000,"mtime":1615775202855,"results":"49","hashOfConfig":"38"},{"size":351,"mtime":1615654121240,"results":"50","hashOfConfig":"38"},{"size":363,"mtime":1615689722022,"results":"51","hashOfConfig":"38"},{"size":7471,"mtime":1615774919384,"results":"52","hashOfConfig":"38"},{"size":6967,"mtime":1615775106706,"results":"53","hashOfConfig":"38"},{"size":375,"mtime":1614736916191,"results":"54","hashOfConfig":"38"},{"size":198,"mtime":1614736916166,"results":"55","hashOfConfig":"38"},{"size":281,"mtime":1614736916102,"results":"56","hashOfConfig":"38"},{"size":533,"mtime":1615654121045,"results":"57","hashOfConfig":"38"},{"size":235,"mtime":1615694758664,"results":"58","hashOfConfig":"38"},{"size":359,"mtime":1615654121229,"results":"59","hashOfConfig":"38"},{"size":3160,"mtime":1615776668580,"results":"60","hashOfConfig":"38"},{"size":1263,"mtime":1615775003997,"results":"61","hashOfConfig":"38"},{"size":371,"mtime":1615774943163,"results":"62","hashOfConfig":"38"},{"size":1968,"mtime":1615775052396,"results":"63","hashOfConfig":"38"},{"size":901,"mtime":1615685924828,"results":"64","hashOfConfig":"38"},{"size":1714,"mtime":1615751683309,"results":"65","hashOfConfig":"38"},{"size":4008,"mtime":1615775191224,"results":"66","hashOfConfig":"38"},{"size":3196,"mtime":1615754659315,"results":"67","hashOfConfig":"38"},{"size":338,"mtime":1615654121234,"results":"68","hashOfConfig":"38"},{"size":495,"mtime":1615654121222,"results":"69","hashOfConfig":"38"},{"size":533,"mtime":1615749523768,"results":"70","hashOfConfig":"38"},{"size":1664,"mtime":1615682253355,"results":"71","hashOfConfig":"38"},{"size":662,"mtime":1614736916137,"results":"72","hashOfConfig":"38"},{"size":926,"mtime":1615779071609,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ea2nox",{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js",["167"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js",["168","169","170"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js",[],["171","172"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UseToken.js",[],["173","174"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js",["175","176"],"﻿import React, { useContext, useState } from 'react'\r\nimport checkIcon from '../../assets/check.svg';\r\nimport errorIcon from '../../assets/error.svg';\r\nimport infoIcon from '../../assets/info.svg';\r\nimport warningIcon from '../../assets/warning.svg';\r\n\r\n\r\nconst ToastListContext = React.createContext()\r\nconst ShowToastContext = React.createContext()\r\n\r\nexport function useToast() {\r\n    return useContext(ToastListContext)\r\n}\r\n\r\nexport function useShowToast() {\r\n    return useContext(ShowToastContext)\r\n}\r\n\r\nexport function ToastProvider({ children }) {\r\n    const [list, setList] = useState([])\r\n\r\n    const showToast = (type, text) => {\r\n        let toastProperties = null\r\n        const id = Math.floor((Math.random() * 100) + 1)\r\n        //console.log('type: ' + type)\r\n        switch (type) {\r\n            case 'error':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Error!',\r\n                    description: `${text}`,\r\n                    backgroundColor: 'salmon',\r\n                    icon: errorIcon\r\n                }\r\n                break\r\n            case 'success':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Success!',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5cb85c',\r\n                    icon: checkIcon\r\n                }\r\n                break\r\n            case 'info':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Info',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5bc0de',\r\n                    icon: infoIcon\r\n                }\r\n                break\r\n\r\n            default:\r\n                setList([])\r\n        }\r\n        setList([...list, toastProperties])\r\n    }\r\n    //const testList = [\r\n    //    {\r\n    //        id: 1,\r\n    //        title: 'Success',\r\n    //        description: 'This is a success toast component',\r\n    //        backgroundColor: '#5cb85c',\r\n    //        icon: checkIcon\r\n    //    },\r\n    //    {\r\n    //        id: 2,\r\n    //        title: 'Danger',\r\n    //        description: 'This is an error toast component',\r\n    //        backgroundColor: '#d9534f',\r\n    //        icon: errorIcon\r\n    //    },\r\n    //    {\r\n    //        id: 3,\r\n    //        title: 'Info',\r\n    //        description: 'This is an info toast component',\r\n    //        backgroundColor: '#5bc0de',\r\n    //        icon: infoIcon\r\n    //    },\r\n    //    {\r\n    //        id: 4,\r\n    //        title: 'Warning',\r\n    //        description: 'This is a warning toast component',\r\n    //        backgroundColor: '#f0ad4e',\r\n    //        icon: warningIcon\r\n    //    }\r\n    //]\r\n    return (\r\n        <ToastListContext.Provider value={list}>\r\n            <ShowToastContext.Provider value={showToast}>\r\n                {children}\r\n            </ShowToastContext.Provider>\r\n        </ToastListContext.Provider>\r\n    )\r\n}",["177","178"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js",[],["179","180"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js",["181"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useToast } from './ToastContext'\r\n\r\nimport './Toast.css';\r\n//source:     transition: max-height 0.5s, opacity 0.5s;\r\nconst Toast = ({ position, autoDelete, dismissTime }) => {\r\n    const toastList = useToast()\r\n    const [list, setList] = useState(toastList)\r\n\r\n    //function sleep(ms) {\r\n    //    console.log('sleeping')\r\n    //    return new Promise(resolve => setTimeout(resolve, ms));\r\n    //  }\r\n\r\n    useEffect(() => {\r\n        //console.log('toastlist side effect')\r\n        //console.log(toastList)\r\n        setList([...toastList]);\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            if (autoDelete && toastList.length && list.length) {            \r\n                deleteToast(toastList[0].id);\r\n            }\r\n        }, dismissTime);\r\n\r\n        return async () => {                     \r\n            clearInterval(interval);\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList, autoDelete, dismissTime, list]);\r\n\r\n    const deleteToast = id => {\r\n        const listItemIndex = list.findIndex(e => e.id === id);\r\n        const toastListItem = toastList.findIndex(e => e.id === id);\r\n        list.splice(listItemIndex, 1);\r\n        toastList.splice(toastListItem, 1);\r\n        setList([...list]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`notification-container ${position}`}>\r\n                {\r\n                    list.map((toast, i) =>\r\n                        <div\r\n                            key={i}\r\n                            className={`notification toast ${('hidden' in toast) ? ('hidden') : ('show')} ${position}`}\r\n                            style={{ backgroundColor: toast.backgroundColor }}\r\n                        >\r\n                            <button onClick={() => deleteToast(toast.id)}>\r\n                                X\r\n                            </button>\r\n                            <div className=\"notification-image\">\r\n                                <img src={toast.icon} alt=\"\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"notification-title\">{toast.title}</p>\r\n                                <p className=\"notification-message\">\r\n                                    {toast.description}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    Toast.defaultProps = {\r\n        position: 'bottom-right'\r\n    }\r\n\r\n    Toast.propTypes = {\r\n        toastList: PropTypes.array.isRequired,\r\n        position: PropTypes.string,\r\n        autoDelete: PropTypes.bool,\r\n        autoDeleteTime: PropTypes.number\r\n    }\r\n}\r\n\r\nexport default Toast\r\n\r\n",["182","183"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js",[],["184","185"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js",["186","187","188","189","190"],"import { useParams } from 'react-router-dom'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport Button from './Button'\r\nimport EditTask from './EditTask'\r\nimport FormatDateString from './FormatDateString'\r\nimport FetchTask from './task-crud-operations/FetchTask'\r\nimport UpdateTask from './task-crud-operations/UpdateTask'\r\nimport CommentSection from './comment-components/CommentSection'\r\nimport { useShowToast } from './toast/ToastContext'\r\nimport { useToken, useUserId } from './api-authorization/UserContext'\r\n\r\nconst TaskDetails = () => {\r\n\r\n    //gets the params passed in from the router\r\n    //is a react hook\r\n    const { id } = useParams()\r\n    const { token, setToken } = useToken()\r\n    const { userId, setUserId } = useUserId()\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [task, setTask] = useState(null)\r\n    const [showEditTask, setShowEditTask] = useState(false)\r\n    const [comments, setComments] = useState()\r\n    const showToast = useShowToast() \r\n\r\n    useEffect(() => {\r\n        //console.log(\"using effect: task details\")\r\n        // Fetch Task\r\n        const fetchTask = FetchTask\r\n\r\n        const getTask = async () => {          \r\n            try {       \r\n                const taskFromServer = await fetchTask(id, token)         \r\n                setTask(taskFromServer)\r\n                //console.log(taskFromServer)\r\n                setComments(taskFromServer.comments)\r\n                setIsLoading(false)\r\n            } catch (error) {\r\n                console.log(\"failed\") \r\n                console.log(error);\r\n            }   \r\n        }\r\n      \r\n        getTask()\r\n\r\n    }, []) \r\n\r\n    const onCancel = () => {\r\n        setShowEditTask(!showEditTask)\r\n    }\r\n\r\n    const update = async (task) => {\r\n        setIsLoading(true)\r\n        try {\r\n            task.userId = userId\r\n            setShowEditTask(!showEditTask)\r\n            const updTask = await UpdateTask(task, token)\r\n            setTask(updTask)\r\n            setIsLoading(false)\r\n            showToast('success', `Updated \"${task.text}\"`)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div>    \r\n                    {!showEditTask && (\r\n                        <div className=\"taskDetail\">\r\n                            <h3>\r\n                                {task.text}\r\n                            </h3>\r\n                            <hr></hr>\r\n                            <p>\r\n                                Location: {task.location}\r\n                            </p>\r\n                            <p>\r\n                                Day: {FormatDateString(task.day)}\r\n                            </p>\r\n                            <p>\r\n                                Details: {task.details !== undefined ? task.details : \"None\"}\r\n                            </p>    \r\n                            { task.isCompleted && (\r\n                                <p>Completed On: {FormatDateString(task.dateCompleted)}</p>\r\n                            )}\r\n                            <Button\r\n                                color='green'\r\n                                text='Edit Task'\r\n                                onClick={() => setShowEditTask(!showEditTask)}\r\n                            />\r\n                            {(comments != undefined) && (\r\n                                <CommentSection comments={comments} taskId={id} /> \r\n                            )}                         \r\n                        </div>\r\n                    )}                               \r\n\r\n                    {showEditTask && (\r\n                        <EditTask task={task} onUpdate={update} onCancel={onCancel} token={token}/>\r\n                    )}        \r\n                </div>) : (\r\n                <div>\r\n                    <h1>Loading ...</h1>\r\n                </div>\r\n            )}           \r\n        </>        \r\n    )\r\n}\r\n\r\nexport default TaskDetails","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js",["191"],"﻿import Constant from '../Constant'\r\n\r\nconst FetchTasks = async (id, token) => {\r\n    const res = await fetch(Constant() + `/api/Users/${id}/tasks`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    })\r\n    const data = await res.json()\r\n\r\n    return data\r\n}\r\n\r\nexport default FetchTasks\r\n",["192","193"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js",["194"],"﻿import CreateTask from './CreateTask'\r\nimport DeleteTask from './DeleteTask'\r\nimport FetchTask from './FetchTask'\r\nimport FetchTasks from './FetchTasks'\r\nimport UpdateTask from './UpdateTask'\r\n\r\nconst CrudOperations = {\r\n        CreateTask,\r\n        DeleteTask,\r\n        FetchTask,\r\n        FetchTasks,\r\n        UpdateTask\r\n}\r\n\r\n\r\nexport default CrudOperations",["195","196"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js",["197","198","199","200"],"import { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, NavLink, Redirect } from 'react-router-dom'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\n//for authorization\r\n//import authService from './api-authorization/AuthorizeService'\r\nimport Footer from './components/Footer'\r\nimport Constant from './components/Constant'\r\nimport AlertCenter from './components/AlertCenter'\r\nimport About from './components/About'\r\nimport UserManager from './components/api-authorization/UserManager'\r\nimport RegisterAndLoginRoutes from './components/api-authorization/RegisterAndLoginRoutes'\r\nimport Logout from './components/api-authorization/Logout'\r\nimport Toast from './components/toast/Toast'\r\nimport { ToastProvider, useShowToast } from './components/toast/ToastContext'\r\nimport TaskDetails from './components/TaskDetails'\r\nimport TaskTracker from './components/task-tracker/TaskTracker'\r\nimport { useToken, useUserId } from './components/api-authorization/UserContext'\r\n\r\n//import UpdateTask from './components/UpdateTask'\r\n//function setToken(userToken) {\r\n//    sessionStorage.setItem('token', JSON.stringify(userToken));\r\n\r\n//}\r\n\r\n//function getToken() {\r\n\r\n//    const tokenString = sessionStorage.getItem('token');\r\n//    const userToken = JSON.parse(tokenString);\r\n//    //.? is the optional chain operator: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\r\n//    /*\r\n//     You need to use the optional chaining operator�?.�when accessing the token property because when you \r\n//     first access the application, the value of sessionStorage.getItem('token') will \r\n//     be undefined. If you try to access a property, you will generate an error.\r\n//     */\r\n//    return userToken?.token\r\n//}\r\n//import header and use it like an xml tag\r\n//keeps tasks at the highest level (state)\r\n//changes the state of tasks\r\n//calls fetch tasks whihc returns a promise\r\n//sets tasks as the state\r\nconst App = () => {\r\n    \r\n    const { userId, setUserId } = useUserId()\r\n    const { token, setToken } = useToken()\r\n    const [alerts, setAlerts] = useState([])\r\n    const [checkValue, setCheckValue] = useState(true)\r\n    const [autoDeleteTime, setAutoDeleteTime] = useState(5000)\r\n\r\n    const showToast = useShowToast()\r\n\r\n    const removeToken = () => {\r\n        localStorage.removeItem('token');\r\n        setToken(null)\r\n        setUserId(null)\r\n    }\r\n\r\n\r\n    function handleLogoutClick(e) {\r\n        e.preventDefault()       \r\n        removeToken()\r\n    }\r\n\r\n    // Fetch Tasks\r\n    //gets the tasks we have on the server with async java\r\n    useEffect(() => {\r\n     \r\n\r\n        const fetchAlerts = async (id) => {\r\n            const res = await fetch(Constant() + `/api/Users/${id}/alerts`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token\r\n                }\r\n            })\r\n\r\n            const data = await res.json()\r\n\r\n            return data\r\n        }\r\n\r\n        const getAlerts = async () => {\r\n            try {\r\n                const tasksFromServer = await fetchAlerts(userId)\r\n                setAlerts(tasksFromServer)\r\n            } catch (error) {\r\n                showToast('error', error)\r\n            }\r\n        }\r\n\r\n        if (userId != undefined) {\r\n            //console.log(userId)\r\n            getAlerts()\r\n        }\r\n   \r\n\r\n    }, [token, userId])\r\n\r\n    //if there are no tasks, it shows  'No Tasks To Show'\r\n    //short ternary in jsx:\r\n    // {x === y ? (<Thing />) : ('String')}\r\n    //wrap everything in <Router> to use routes\r\n    //exact menas match path exactly\r\n    return (\r\n        \r\n        <Router>        \r\n                <ToastProvider>\r\n                    <div id=\"backdrop\">\r\n\r\n                    </div>\r\n                    <Navbar bg=\"light\" expand=\"lg\">\r\n                        <Navbar.Brand>Task Tracker</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                                <Nav.Link as={NavLink} to=\"/\" exact>Home</Nav.Link>\r\n                                <Nav.Link as={NavLink} to=\"/about\" exact>About</Nav.Link>\r\n                                {token ? (\r\n                                    <>\r\n                                        <Nav.Link as={NavLink} to=\"/userManager\" exact>Manage Account</Nav.Link>\r\n                                        <Nav.Link as={NavLink} to=\"/alerts\" exact>Alerts\r\n                                        {(alerts.length > 0) ? (<span id='alertCounter'>{alerts.length}</span>) : (<></>)}\r\n                                        </Nav.Link>\r\n                                        <Nav.Link as={NavLink} to=\"/logout\" exact onClick={handleLogoutClick}>Logout</Nav.Link>\r\n                                    </>) : (<>\r\n                                        <Nav.Link as={NavLink} to=\"/login\" exact>Login</Nav.Link>\r\n                                        <Nav.Link as={NavLink} to=\"/register\" exact>Register</Nav.Link>\r\n                                    </>)}\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n\r\n                    <div className='container'>\r\n                        <Toast\r\n                            position=\"bottom-right\"\r\n                            autoDelete={checkValue}\r\n                            dismissTime={autoDeleteTime}\r\n                        />\r\n                        <Route path='/about' exact component={About} />\r\n                        <Route path='/logout' exact component={Logout} />\r\n                        {token ? (\r\n                            <>\r\n                                <Route path='/alerts' exact\r\n                                    render={(props) => (\r\n                                        <AlertCenter alerts={alerts} setAlerts={setAlerts} />\r\n                                    )}\r\n                                />\r\n                                <Redirect from='/login' to=\"/\" />\r\n                                <Route path='/userManager' exact\r\n                                    render={(props) => (\r\n                                        <UserManager handleLogout={handleLogoutClick} token={token} id={userId} />\r\n                                    )}\r\n                                />\r\n                                <Route path='/' exact\r\n                                    render={(props) => (\r\n                                        <>\r\n                                            <TaskTracker />\r\n                                        </>\r\n\r\n                                    )} />\r\n\r\n                                <Route path='/task/:id' exact\r\n                                    render={(props) => (\r\n                                        <TaskDetails/>\r\n                                    )}\r\n                                />\r\n                                <Footer isLoggedIn={token} />\r\n                            </>\r\n                        ) : (\r\n                                <>\r\n                                    <RegisterAndLoginRoutes setToken={setToken} token={token} />\r\n                                </>\r\n\r\n                            )}\r\n                    </div>\r\n\r\n                </ToastProvider>\r\n        </Router>\r\n            \r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n",["201","202"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js",["203","204","205","206","207"],"import { useState, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport userFunctions from './UserFunctions'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport { useToken, useUserId }  from './UserContext'\r\n\r\nconst UserManager = ({ handleLogout }) => {\r\n    //console.log(`id: ${id}`)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [user, setUser] = useState('')\r\n    const [showDeleteForm, setShowDeleteForm] = useState(false)\r\n    const [deleteDisabled, setDeleteDisabled] = useState(false)\r\n    const [submitDisabled, setSubmitDisabled] = useState(false)\r\n    const onSave = useShowToast()\r\n    const { token, setToken } = useToken()\r\n    const { userId, setUserId } = useUserId()\r\n    //https://stackoverflow.com/questions/53120972/how-to-call-loading-function-with-react-useeffect-only-once\r\n    useEffect(() => {\r\n\r\n        setIsLoading(false)\r\n        const userData = async () => await userFunctions.getUser(userId, token)\r\n        setUser(userData) \r\n        userData()     \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        return function cleanup() {\r\n            //console.log('clean up')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //console.log('user use effect')\r\n        //if (isChecked != undefined) {\r\n        //    //const updatedUser = await userFunctions.saveUser({ user, id, token })        \r\n        //}\r\n        //else {\r\n        //    console.log('first time')\r\n        //}\r\n        //console.log('set')\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        console.log('isLoading use effect')\r\n    }, [isLoading])\r\n\r\n    \r\n\r\n\r\n    async function updateUser(appUser) {\r\n        \r\n        return fetch(`${Constant()}/api/users/toggleCollab`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(appUser),\r\n        })\r\n            .then(function (data) {\r\n               onSave('success', 'Your changes have been saved')\r\n               return data.json()\r\n            })\r\n            .catch((error) => {\r\n               onSave('error', error)\r\n            })\r\n    }\r\n\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        setSubmitDisabled(true)\r\n        let res = await updateUser(user)  \r\n        await sleep(1000)\r\n        setSubmitDisabled(false)\r\n    }\r\n\r\n    const onSubmitDelete = async e => {\r\n        e.preventDefault()\r\n        setDeleteDisabled(true)\r\n        setShowDeleteForm(true)\r\n        //handleLogout(e)\r\n        //let res = await deleteAccount(id)\r\n    }\r\n\r\n    const onDelete = async e => {\r\n        e.preventDefault()\r\n        handleLogout(e)\r\n        let res = await deleteAccount(userId)\r\n    }\r\n\r\n    async function deleteAccount(id) {\r\n        return fetch(`${Constant()}/api/users/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify({userId: id}),\r\n        })\r\n        .then(data => data.json())\r\n        .catch((error) => {\r\n            console.error('Fetch Error:', error);\r\n        });\r\n    }  \r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <p>Loading...</p>\r\n            ):\r\n                (<div>\r\n                    {showDeleteForm && (\r\n                        <div className='popup'>\r\n                            <div className='popupForm'>\r\n                                <form>\r\n                                    <label for=\"\">Are you sure?</label>\r\n                                    <br />\r\n                                    <button\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'green' }}\r\n                                        onClick={onDelete}\r\n                                    >\r\n                                        Yes\r\n                                    </button>\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'red' }}\r\n                                        onClick={function () {\r\n                                            setDeleteDisabled(false)\r\n                                            setShowDeleteForm(false)\r\n                                        }}\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n\r\n                                </form>\r\n                            </div>                          \r\n                        </div>\r\n                    )}\r\n                    <Form onSubmit={onSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Open To Collaboration?: \"\r\n                                checked={user.isOpenToCollaboration}\r\n                                onChange={(e) => setUser({ ...user, isOpenToCollaboration: e.currentTarget.checked })} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Bio: \r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=''\r\n                                value={user.bio}\r\n                                onChange={(e) => setUser({ ...user, bio: e.target.value })}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <button\r\n                            type='submit'\r\n                            className='btn btn-block'\r\n                            style={{ backgroundColor: 'green' }}\r\n                            disabled={submitDisabled}\r\n                        >\r\n                            Save Changes\r\n                        </button>\r\n                    </Form>\r\n\r\n                    <form onSubmit={onSubmitDelete}>\r\n                        <button\r\n                            type='submit'\r\n                            className='btn'\r\n                            style={{ backgroundColor: 'red' }}\r\n                            disabled={deleteDisabled}\r\n                        >\r\n                            Delete Account\r\n                        </button>\r\n                    </form >                 \r\n                    \r\n                </div>)}\r\n            \r\n        </>\r\n   )\r\n}\r\n\r\nexport default UserManager","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Button.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js",["208"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Login.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js",["209","210"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Header.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js",["211","212"],"import { useState } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport { useToken, useUserId } from '../api-authorization/UserContext'\r\n\r\nconst CommentForm = ({ taskId }) => {\r\n    const [text, setText] = useState('')\r\n    const { token, setToken } = useToken\r\n    const { userId, setUserId } = useUserId\r\n\r\n    const onSubmit = async (e) => {\r\n        //e.preventDefault() is so it doesnt actually submit to the page\r\n        e.preventDefault()\r\n        setText('')\r\n        await fetch(Constant() + '/api/comments', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            body: JSON.stringify({ userId, taskId, text })\r\n        })\r\n            .then(data => data.json())\r\n            .catch((error) => {\r\n                console.error('Fetch Error:', error);\r\n            })\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='commentForm'>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Group>\r\n                    <Form.Control\r\n                        type='text'\r\n                        maxLength='200'\r\n                        placeholder='Add Reply'\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-block'\r\n                    style={{ backgroundColor: 'skyblue' }}\r\n                >\r\n                    Reply\r\n                </button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentForm","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Register.js",["213","214"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\EditTask.js",["215"],"import { useState } from 'react'\r\nimport Button from './Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useToken } from './api-authorization/UserContext'\r\n\r\nconst EditTask = ({task, onCancel, onUpdate }) => {\r\n    const [id, setId] = useState(task.id)\r\n    const [text, setText] = useState(task.text)\r\n    const [day, setDay] = useState(task.day)\r\n    const [details, setDetails] = useState(task.details)\r\n    const [location, setLocation] = useState(task.location)\r\n    const [reminder, setReminder] = useState(task.reminder)\r\n    const [isCompleted, setIsCompleted] = useState(task.isCompleted)\r\n    const { token, setToken } = useToken()\r\n\r\n    const onSubmit = (e) => {\r\n        //e.preventDefault() is so it doesnt actually submit to the page\r\n        e.preventDefault()\r\n    \r\n        //filters if text is blank\r\n        if (!text) {\r\n          alert('Please add a task')\r\n          return\r\n        }\r\n    \r\n        if (!day) {\r\n            alert('Please add a datetime')\r\n            return\r\n        }\r\n\r\n        onUpdate({ id, text, details, location, day, reminder, isCompleted }, token)\r\n    \r\n        //clears the form\r\n        setId('')\r\n        setText('')\r\n        setDay('')\r\n        setLocation('')\r\n        setDetails('')\r\n        setReminder(false)\r\n      }\r\n    \r\n    return (\r\n<Form onSubmit={onSubmit} className=\"taskName\">\r\n  <Form.Group>\r\n    <Form.Label>Task</Form.Label>\r\n    <Form.Control \r\n                type='text'\r\n                maxLength='30'\r\n                placeholder=''\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)} />\r\n  </Form.Group>\r\n\r\n  <Form.Group>\r\n    <Form.Label>Location: </Form.Label>\r\n    <Form.Control \r\n            type='text'\r\n            placeholder=''\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            />\r\n  </Form.Group>\r\n  <Form.Group>\r\n    <Form.Label>Details: </Form.Label>\r\n    <Form.Control \r\n            as=\"textarea\"\r\n            rows={3}\r\n            placeholder=''\r\n            value={details}\r\n            onChange={(e) => setDetails(e.target.value)}\r\n             />\r\n  </Form.Group>\r\n  <Form.Group>\r\n    <Form.Label>Day & Time</Form.Label>\r\n    <Form.Control \r\n            type='datetime-local'\r\n            placeholder='Add Day & Time'\r\n            value={day}\r\n            onChange={(e) => setDay(e.target.value)}/>\r\n  </Form.Group>\r\n  <Form.Group>\r\n    <Form.Check \r\n    type=\"checkbox\" \r\n    label=\"Set Reminder\"\r\n    checked={reminder}\r\n            value={reminder}\r\n            onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n </Form.Group>\r\n <Form.Group>\r\n    <Form.Check \r\n    type=\"checkbox\" \r\n                    label=\"Completed?\"\r\n                    checked={isCompleted}\r\n                    value={isCompleted}\r\n            onChange={(e) => setIsCompleted(e.currentTarget.checked)} />\r\n  </Form.Group>\r\n  \r\n  <button\r\n      type='submit'\r\n      className='btn'\r\n      style={{ backgroundColor: 'skyblue' }}\r\n    >\r\n      Save Task\r\n  </button>\r\n  <Button\r\n            color='red'\r\n            text='Cancel'\r\n            onClick={onCancel}\r\n        />\r\n</Form>\r\n)\r\n    \r\n}\r\nexport default EditTask",["216","217"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTask.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js",["218"],"﻿import Constant from '../Constant'\r\n\r\nconst CreateTask = async (task, token) => {\r\n\r\n\r\n    return fetch(Constant() + '/api/tasks', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n        body: JSON.stringify(task)\r\n    })\r\n        .then(data => data.json())\r\n        .catch((error) => {\r\n            console.error('Fetch Error:', error);\r\n        })\r\n}\r\n\r\n\r\nexport default CreateTask",["219","220"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js",["221","222","223"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js",[],{"ruleId":"224","severity":1,"message":"225","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":28,"column":28,"nodeType":"230","messageId":"231","endLine":28,"endColumn":30},{"ruleId":"232","severity":1,"message":"233","line":44,"column":8,"nodeType":"234","endLine":44,"endColumn":23,"suggestions":"235"},{"ruleId":"224","severity":1,"message":"236","line":83,"column":11,"nodeType":"226","messageId":"227","endLine":83,"endColumn":21},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"237","replacedBy":"241"},{"ruleId":"239","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":1,"column":1,"nodeType":"245","messageId":"231","fix":"246"},{"ruleId":"224","severity":1,"message":"247","line":5,"column":8,"nodeType":"226","messageId":"227","endLine":5,"endColumn":19},{"ruleId":"237","replacedBy":"248"},{"ruleId":"239","replacedBy":"249"},{"ruleId":"237","replacedBy":"250"},{"ruleId":"239","replacedBy":"251"},{"ruleId":"252","severity":1,"message":"253","line":75,"column":5,"nodeType":"254","messageId":"255","endLine":84,"endColumn":6},{"ruleId":"237","replacedBy":"256"},{"ruleId":"239","replacedBy":"257"},{"ruleId":"237","replacedBy":"258"},{"ruleId":"239","replacedBy":"259"},{"ruleId":"224","severity":1,"message":"260","line":2,"column":31,"nodeType":"226","messageId":"227","endLine":2,"endColumn":41},{"ruleId":"224","severity":1,"message":"261","line":17,"column":20,"nodeType":"226","messageId":"227","endLine":17,"endColumn":28},{"ruleId":"224","severity":1,"message":"262","line":18,"column":21,"nodeType":"226","messageId":"227","endLine":18,"endColumn":30},{"ruleId":"232","severity":1,"message":"263","line":45,"column":8,"nodeType":"234","endLine":45,"endColumn":10,"suggestions":"264"},{"ruleId":"228","severity":1,"message":"229","line":92,"column":40,"nodeType":"230","messageId":"231","endLine":92,"endColumn":42},{"ruleId":"243","severity":1,"message":"244","line":1,"column":1,"nodeType":"245","messageId":"231","fix":"265"},{"ruleId":"237","replacedBy":"266"},{"ruleId":"239","replacedBy":"267"},{"ruleId":"243","severity":1,"message":"244","line":1,"column":1,"nodeType":"245","messageId":"231","fix":"268"},{"ruleId":"237","replacedBy":"269"},{"ruleId":"239","replacedBy":"270"},{"ruleId":"224","severity":1,"message":"271","line":47,"column":24,"nodeType":"226","messageId":"227","endLine":47,"endColumn":37},{"ruleId":"224","severity":1,"message":"272","line":48,"column":28,"nodeType":"226","messageId":"227","endLine":48,"endColumn":45},{"ruleId":"228","severity":1,"message":"229","line":91,"column":20,"nodeType":"230","messageId":"231","endLine":91,"endColumn":22},{"ruleId":"232","severity":1,"message":"233","line":97,"column":8,"nodeType":"234","endLine":97,"endColumn":23,"suggestions":"273"},{"ruleId":"237","replacedBy":"274"},{"ruleId":"239","replacedBy":"275"},{"ruleId":"224","severity":1,"message":"261","line":16,"column":20,"nodeType":"226","messageId":"227","endLine":16,"endColumn":28},{"ruleId":"224","severity":1,"message":"262","line":17,"column":21,"nodeType":"226","messageId":"227","endLine":17,"endColumn":30},{"ruleId":"232","severity":1,"message":"276","line":25,"column":8,"nodeType":"234","endLine":25,"endColumn":10,"suggestions":"277"},{"ruleId":"224","severity":1,"message":"278","line":77,"column":13,"nodeType":"226","messageId":"227","endLine":77,"endColumn":16},{"ruleId":"224","severity":1,"message":"278","line":93,"column":13,"nodeType":"226","messageId":"227","endLine":93,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":1,"column":1,"nodeType":"245","messageId":"231","fix":"279"},{"ruleId":"224","severity":1,"message":"280","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"281","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":18},{"ruleId":"224","severity":1,"message":"261","line":8,"column":20,"nodeType":"226","messageId":"227","endLine":8,"endColumn":28},{"ruleId":"224","severity":1,"message":"262","line":9,"column":21,"nodeType":"226","messageId":"227","endLine":9,"endColumn":30},{"ruleId":"224","severity":1,"message":"282","line":15,"column":13,"nodeType":"226","messageId":"227","endLine":15,"endColumn":18},{"ruleId":"224","severity":1,"message":"283","line":16,"column":13,"nodeType":"226","messageId":"227","endLine":16,"endColumn":19},{"ruleId":"224","severity":1,"message":"261","line":14,"column":20,"nodeType":"226","messageId":"227","endLine":14,"endColumn":28},{"ruleId":"237","replacedBy":"284"},{"ruleId":"239","replacedBy":"285"},{"ruleId":"243","severity":1,"message":"244","line":1,"column":1,"nodeType":"245","messageId":"231","fix":"286"},{"ruleId":"237","replacedBy":"287"},{"ruleId":"239","replacedBy":"288"},{"ruleId":"243","severity":1,"message":"244","line":1,"column":1,"nodeType":"245","messageId":"231","fix":"289"},{"ruleId":"224","severity":1,"message":"281","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":18},{"ruleId":"224","severity":1,"message":"290","line":3,"column":20,"nodeType":"226","messageId":"227","endLine":3,"endColumn":29},"no-unused-vars","'Constant' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'showToast'. Either include it or remove the dependency array.","ArrayExpression",["291"],"'updateTask' is assigned a value but never used.","no-native-reassign",["292"],"no-negated-in-lhs",["293"],["292"],["293"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"294","text":"295"},"'warningIcon' is defined but never used.",["292"],["293"],["292"],["293"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode",["292"],["293"],["292"],["293"],"'useContext' is defined but never used.","'setToken' is assigned a value but never used.","'setUserId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.",["296"],{"range":"297","text":"295"},["292"],["293"],{"range":"298","text":"295"},["292"],["293"],"'setCheckValue' is assigned a value but never used.","'setAutoDeleteTime' is assigned a value but never used.",["299"],["292"],["293"],"React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["300"],"'res' is assigned a value but never used.",{"range":"301","text":"295"},"'Table' is defined but never used.","'useState' is defined but never used.","'token' is assigned a value but never used.","'userId' is assigned a value but never used.",["292"],["293"],{"range":"302","text":"295"},["292"],["293"],{"range":"303","text":"295"},"'useEffect' is defined but never used.",{"desc":"304","fix":"305"},"no-global-assign","no-unsafe-negation",[-1,0],"",{"desc":"306","fix":"307"},[-1,0],[-1,0],{"desc":"304","fix":"308"},{"desc":"309","fix":"310"},[-1,0],[-1,0],[-1,0],"Update the dependencies array to be: [showToast, token, userId]",{"range":"311","text":"312"},"Update the dependencies array to be: [id, token]",{"range":"313","text":"314"},{"range":"315","text":"312"},"Update the dependencies array to be: [token, userId]",{"range":"316","text":"317"},[1616,1631],"[showToast, token, userId]",[1646,1648],"[id, token]",[3391,3406],[1078,1080],"[token, userId]"]