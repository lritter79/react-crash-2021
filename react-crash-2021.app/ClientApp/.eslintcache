[{"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js":"1","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Downloader.js":"2","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js":"3","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js":"4","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js":"5","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js":"6","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js":"7","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js":"8","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js":"9","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js":"10","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js":"11","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js":"12","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js":"13","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\CoolColor.js":"14","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js":"15","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryCrudOperations.js":"16","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js":"17","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\Colors.js":"18","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\AddCategory.js":"19","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js":"20","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js":"21","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js":"22","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js":"23","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryContainer.js":"24","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryTable.js":"25","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js":"26","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Calendar.js":"27","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js":"28"},{"size":942,"mtime":1621200205191,"results":"29","hashOfConfig":"30"},{"size":1789,"mtime":1618592233098,"results":"31","hashOfConfig":"32"},{"size":1019,"mtime":1621200205361,"results":"33","hashOfConfig":"30"},{"size":1558,"mtime":1621200205131,"results":"34","hashOfConfig":"30"},{"size":280,"mtime":1614736916063,"results":"35","hashOfConfig":"30"},{"size":1672,"mtime":1621200205252,"results":"36","hashOfConfig":"30"},{"size":699,"mtime":1616002415575,"results":"37","hashOfConfig":"30"},{"size":232,"mtime":1614736916073,"results":"38","hashOfConfig":"30"},{"size":371,"mtime":1616002415429,"results":"39","hashOfConfig":"30"},{"size":2966,"mtime":1616002415447,"results":"40","hashOfConfig":"30"},{"size":378,"mtime":1621200205270,"results":"41","hashOfConfig":"30"},{"size":3533,"mtime":1621286288316,"results":"42","hashOfConfig":"30"},{"size":1826,"mtime":1621222534647,"results":"43","hashOfConfig":"30"},{"size":307,"mtime":1621200205325,"results":"44","hashOfConfig":"30"},{"size":7479,"mtime":1621200205264,"results":"45","hashOfConfig":"30"},{"size":1449,"mtime":1621288849198,"results":"46","hashOfConfig":"30"},{"size":1106,"mtime":1621200205243,"results":"47","hashOfConfig":"30"},{"size":379,"mtime":1621289838135,"results":"48","hashOfConfig":"30"},{"size":1917,"mtime":1621289477660,"results":"49","hashOfConfig":"30"},{"size":375,"mtime":1614736916191,"results":"50","hashOfConfig":"30"},{"size":359,"mtime":1615654121229,"results":"51","hashOfConfig":"30"},{"size":531,"mtime":1621200205299,"results":"52","hashOfConfig":"30"},{"size":2884,"mtime":1621268643630,"results":"53","hashOfConfig":"30"},{"size":1906,"mtime":1621289381274,"results":"54","hashOfConfig":"30"},{"size":1464,"mtime":1621289959204,"results":"55","hashOfConfig":"30"},{"size":8733,"mtime":1621270201910,"results":"56","hashOfConfig":"30"},{"size":4348,"mtime":1621200205318,"results":"57","hashOfConfig":"30"},{"size":6511,"mtime":1621290540732,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1esi5ev",{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"ea2nox",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js",[],["129","130"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Downloader.js",["131","132","133","134"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js",[],["135","136"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js",[],["137","138"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js",[],["139","140"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js",["141","142"],"import Table from 'react-bootstrap/Table'\r\nimport { useState } from 'react'\r\nimport Comment from \"./Comment\"\r\n\r\nconst Comments = ({ comments }) => {\r\n    //console.log(comments)\r\n   \r\n    return (\r\n        <>\r\n            {comments.map((c, index) => (\r\n                <Comment key={index} comment={c} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comments",["143","144"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js",["145"],"import React, { useContext, useState } from 'react'\r\nimport checkIcon from '../../assets/check.svg';\r\nimport errorIcon from '../../assets/error.svg';\r\nimport infoIcon from '../../assets/info.svg';\r\nimport warningIcon from '../../assets/warning.svg';\r\n\r\n\r\nconst ToastListContext = React.createContext()\r\nconst ShowToastContext = React.createContext()\r\n\r\nexport function useToast() {\r\n    return useContext(ToastListContext)\r\n}\r\n\r\nexport function useShowToast() {\r\n    return useContext(ShowToastContext)\r\n}\r\n\r\nexport function ToastProvider({ children }) {\r\n    const [list, setList] = useState([])\r\n\r\n    const showToast = (type, text) => {\r\n        let toastProperties = null\r\n        const id = Math.floor((Math.random() * 100) + 1)\r\n        //console.log('type: ' + type)\r\n        switch (type) {\r\n            case 'error':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Error!',\r\n                    description: `${text}`,\r\n                    backgroundColor: 'salmon',\r\n                    icon: errorIcon\r\n                }\r\n                break\r\n            case 'success':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Success!',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5cb85c',\r\n                    icon: checkIcon\r\n                }\r\n                break\r\n            case 'info':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Info',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5bc0de',\r\n                    icon: infoIcon\r\n                }\r\n                break\r\n\r\n            default:\r\n                setList([])\r\n        }\r\n        setList([...list, toastProperties])\r\n    }\r\n    //const testList = [\r\n    //    {\r\n    //        id: 1,\r\n    //        title: 'Success',\r\n    //        description: 'This is a success toast component',\r\n    //        backgroundColor: '#5cb85c',\r\n    //        icon: checkIcon\r\n    //    },\r\n    //    {\r\n    //        id: 2,\r\n    //        title: 'Danger',\r\n    //        description: 'This is an error toast component',\r\n    //        backgroundColor: '#d9534f',\r\n    //        icon: errorIcon\r\n    //    },\r\n    //    {\r\n    //        id: 3,\r\n    //        title: 'Info',\r\n    //        description: 'This is an info toast component',\r\n    //        backgroundColor: '#5bc0de',\r\n    //        icon: infoIcon\r\n    //    },\r\n    //    {\r\n    //        id: 4,\r\n    //        title: 'Warning',\r\n    //        description: 'This is a warning toast component',\r\n    //        backgroundColor: '#f0ad4e',\r\n    //        icon: warningIcon\r\n    //    }\r\n    //]\r\n    return (\r\n        <ToastListContext.Provider value={list}>\r\n            <ShowToastContext.Provider value={showToast}>\r\n                {children}\r\n            </ShowToastContext.Provider>\r\n        </ToastListContext.Provider>\r\n    )\r\n}",["146","147"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js",["148"],"import Task from './Task'\r\nimport { useState, useRef, useCallback, useEffect } from 'react'\r\nimport Toggle from 'react-toggle'\r\nimport \"react-toggle/style.css\"\r\n//import CoolColor from './CoolColor'\r\n//import ReactCSSTransitionGroup from 'react-addons-css-transition-group'\r\n\r\n//.map() takes in  a function\r\nconst Tasks = ({ tasks, onDelete, onToggle, onGoToDetail }) => {\r\n    const [showCompleted, setShowCompleted] = useState(true)\r\n    //whether or not there are more tasks to render\r\n    const [hasMore, setHasMore] = useState(true)\r\n    //the way inifitinte scroll works is it will query the rest of the tasks and append them\r\n    //to the list of tasks to show\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    //the gets set by the callback of last task ref\r\n    const observer = useRef()\r\n    //node is the element with lastTaskRef as the ref\r\n    const lastTaskRef = useCallback(node => {\r\n        if (observer.current) observer.current.disconnect()\r\n        //https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\r\n        //gist is it finds if the node is in the view of the window\r\n        observer.current = new IntersectionObserver(entries => {\r\n            //check if has more is true so we dont paginate forever\r\n            if (entries[0].isIntersecting && hasMore) {\r\n                setPageNumber(prev => prev + 1)\r\n            }\r\n        })\r\n        if(node) observer.current.observe(node)\r\n    }, [hasMore, pageNumber])\r\n\r\n    useEffect(() => {\r\n        //console.log('tasks has rendered')\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!showCompleted) {\r\n            if (tasks.filter(t => !t.isCompleted).length <= pageNumber * 5) setHasMore(false)\r\n            else setHasMore(true)\r\n        }\r\n        else {\r\n\r\n            if (tasks.length <= pageNumber * 5) setHasMore(false)\r\n            else setHasMore(true)\r\n        }\r\n\r\n    }, [pageNumber, tasks, showCompleted])\r\n\r\n  function toggleShowCompleted(e) {\r\n    e.currentTarget.blur()\r\n    setShowCompleted(!showCompleted)  \r\n  }\r\n\r\n    const getSlicedTasks = () => {\r\n      let arr = showCompleted ? tasks.slice(0, (pageNumber * 5)) : tasks.filter(t => !t.isCompleted).slice(0, (pageNumber * 5))\r\n\r\n        let tasksToDisplay = arr.map((task, index) => {\r\n            return (arr.length === index + 1) ?\r\n                (<div key={task.id} ref={lastTaskRef}>\r\n                    <Task\r\n                        key={index}\r\n                        task={task}\r\n                        onDelete={onDelete}\r\n                        onToggle={onToggle}\r\n                        onGoToDetail={onGoToDetail}\r\n                    />\r\n                </div>) :\r\n                (<div key={task.id}>\r\n                    <Task\r\n                        key={index}\r\n                        task={task}\r\n                        onDelete={onDelete}\r\n                        onToggle={onToggle}\r\n                        onGoToDetail={onGoToDetail}\r\n                    />\r\n                </div>)\r\n        })\r\n\r\n        return tasksToDisplay\r\n    }\r\n      \r\n    return (\r\n        <>\r\n            <label>\r\n                <Toggle\r\n                    id='toggleShowCompleted'\r\n                    defaultChecked={showCompleted}\r\n                    onChange={toggleShowCompleted}\r\n                />\r\n                <span>Show Completed Tasks?</span>\r\n            </label>                \r\n            <>\r\n                {getSlicedTasks()}\r\n            </>                              \r\n        </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\CoolColor.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js",["149","150","151","152"],"import { useState, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport userFunctions from './UserFunctions'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport { useToken } from './UserContext'\r\nimport Helpers from '../../Helpers'\r\n\r\n\r\nconst UserManager = ({ handleLogout }) => {\r\n    //console.log(`id: ${id}`)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [user, setUser] = useState()\r\n    const [showDeleteForm, setShowDeleteForm] = useState(false)\r\n    const [deleteDisabled, setDeleteDisabled] = useState(false)\r\n    const [submitDisabled, setSubmitDisabled] = useState(false)\r\n    const { token } = useToken()\r\n\r\n    const onSave = useShowToast()\r\n    //https://stackoverflow.com/questions/53120972/how-to-call-loading-function-with-react-useeffect-only-once\r\n\r\n    useEffect(() => {\r\n\r\n        const getUser = async () => {\r\n            try {\r\n                //\r\n                //(CrudOperations)                               \r\n\r\n                //console.log('getting user')\r\n                //console.log(`user = ${userId}`)\r\n                if (token != undefined) {\r\n                    const userData = await userFunctions.getUser(token?.id, token?.token)\r\n                    setUser(userData)\r\n                    setIsLoading(false)\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n                onSave('error', error)\r\n            }\r\n        }\r\n\r\n        getUser()\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        return function cleanup() {\r\n            //console.log('clean up')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //console.log('user use effect')\r\n        //if (isChecked != undefined) {\r\n        //    //const updatedUser = await userFunctions.saveUser({ user, id, token })        \r\n        //}\r\n        //else {\r\n        //    console.log('first time')\r\n        //}\r\n        //console.log('set')\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        console.log('isLoading use effect')\r\n    }, [isLoading])\r\n\r\n    \r\n\r\n\r\n    async function updateUser(appUser) {\r\n        \r\n        return fetch(`${Constant()}/api/users/${token?.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token?.token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(appUser),\r\n        })\r\n            .then(function (data) {\r\n               onSave('success', 'Your changes have been saved')\r\n               return data.json()\r\n            })\r\n            .catch((error) => {\r\n               onSave('error', error)\r\n            })\r\n    }\r\n\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        setSubmitDisabled(true)\r\n        let res = await updateUser(user)  \r\n        await sleep(1000)\r\n        setSubmitDisabled(false)\r\n    }\r\n\r\n    const onSubmitDelete = async e => {\r\n        e.preventDefault()\r\n        setDeleteDisabled(true)\r\n        setShowDeleteForm(true)\r\n        //handleLogout(e)\r\n        //let res = await deleteAccount(id)\r\n    }\r\n\r\n    const onDelete = async e => {\r\n        e.preventDefault()\r\n        handleLogout(e)\r\n        let res = await deleteAccount()\r\n    }\r\n\r\n    async function deleteAccount() {\r\n        return fetch(`${Constant()}/api/users/${token?.id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token?.token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ userId: token?.id }),\r\n        })\r\n        .then(data => data.json())\r\n        .catch((error) => {\r\n            console.error('Fetch Error:', error);\r\n        });\r\n    }  \r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <p>Loading...</p>\r\n            ):\r\n                (<div>\r\n                    {showDeleteForm && (\r\n                        <div className='popup'>\r\n                            <div className='popupForm'>\r\n                                <form>\r\n                                    <label for=\"\">Are you sure?</label>\r\n                                    <br />\r\n                                    <button\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'green' }}\r\n                                        onClick={onDelete}\r\n                                    >\r\n                                        Yes\r\n                                    </button>\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'red' }}\r\n                                        onClick={function () {\r\n                                            setDeleteDisabled(false)\r\n                                            setShowDeleteForm(false)\r\n                                        }}\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n\r\n                                </form>\r\n                            </div>                          \r\n                        </div>\r\n                    )}\r\n                    <Form onSubmit={onSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Open To Collaboration?: \"\r\n                                checked={user.isOpenToCollaboration}\r\n                                onChange={(e) => setUser({ ...user, isOpenToCollaboration: e.currentTarget.checked })} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Bio: \r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=''\r\n                                value={Helpers.replaceNullWithEmptyString(user?.bio)}\r\n                                onChange={(e) => setUser({ ...user, bio: e.target.value })}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <button\r\n                            type='submit'\r\n                            className='btn btn-block'\r\n                            style={{ backgroundColor: 'green' }}\r\n                            disabled={submitDisabled}\r\n                        >\r\n                            Save Changes\r\n                        </button>\r\n                    </Form>\r\n\r\n                    <form onSubmit={onSubmitDelete}>\r\n                        <button\r\n                            type='submit'\r\n                            className='btn'\r\n                            style={{ backgroundColor: 'red' }}\r\n                            disabled={deleteDisabled}\r\n                        >\r\n                            Delete Account\r\n                        </button>\r\n                    </form >                 \r\n                    \r\n                </div>)}\r\n            \r\n        </>\r\n   )\r\n}\r\n\r\nexport default UserManager","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryCrudOperations.js",["153"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js",[],["154","155"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\Colors.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\AddCategory.js",["156"],"import Form from 'react-bootstrap/Form'\r\nimport Colors from './Colors'\r\nimport { useState } from 'react'\r\nimport CategoryCrudOperations from './CategoryCrudOperations'\r\nimport { useToken } from '../api-authorization/UserContext'\r\n\r\nconst AddCategory = ({ token, categories, setCategories }) => {\r\n    const [name, setName] = useState('')\r\n    const [color, setColor] = useState('')\r\n    \r\n    \r\n    const onSubmit = async (e) => {\r\n      e.preventDefault()\r\n      setName('')\r\n      setColor('')\r\n\r\n      let category = await CategoryCrudOperations.postCategory(token.token, {name, color, userId: token?.id})\r\n      console.log(category)\r\n      if (!('error' in category)) {\r\n        setCategories([...categories, category])\r\n      }\r\n      \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Add a category</h1>\r\n        <Form onSubmit={onSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Name:</Form.Label>\r\n            <Form.Control \r\n                        type='text'\r\n                        maxLength='40'\r\n                        placeholder=''\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Color:</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={color}\r\n              onChange={(e) => setColor(e.target.value)}\r\n            >\r\n              {Colors.map((color, index) => \r\n                <option key={index} value={color}>{color}</option>\r\n              )}\r\n              \r\n            </Form.Control>\r\n          </Form.Group>\r\n          \r\n          <button\r\n              type='submit'\r\n              className='btn btn-block'\r\n              style={{ backgroundColor: 'skyblue', color: 'white' }}\r\n            >\r\n              Save\r\n          </button>\r\n        </Form>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCategory","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js",[],["157","158"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js",["159"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js",["160"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js",["161","162","163"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryContainer.js",["164","165","166"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryTable.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js",["167","168","169","170","171","172"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Calendar.js",["173","174","175"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js",["176","177","178"],"\r\nimport { useState, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport CreateTask from '../task-crud-operations/CreateTask'\r\nimport { useToken } from '../api-authorization/UserContext'\r\nimport CategoryCrudOperations from '../categories/CategoryCrudOperations'\r\n\r\n//take in the function onAdd\r\nconst AddTask = ({ isToggled, tasks, setTasks, setShowAddTask }) => {\r\n  //more info on what the \"useSate\" hook does here: https://reactjs.org/docs/hooks-state.html\r\n    //in a nutshell useState  is what we use to deal with properties in a function because functions cant have properties\r\n    const { token } = useToken()\r\n  const [text, setText] = useState('')\r\n  const [details, setDetails] = useState('')\r\n  const [location, setLocation] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [categories, setCategories] = useState([])\r\n  const [reminder, setReminder] = useState(false)\r\n  const [includeDay, setIncludeDay] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n    const showToast = useShowToast()\r\n    // Add Task\r\n    //post because we're adding tasks\r\n    //turns it from js object into json string\r\n    //async function addTask(task) {\r\n        \r\n    //    return fetch(Constant() + '/api/tasks', {\r\n    //        method: 'POST',\r\n    //        headers: {\r\n    //            'Content-type': 'application/json',\r\n    //            'Authorization': 'Bearer ' + token\r\n    //        },\r\n    //        body: JSON.stringify(task)\r\n    //    })\r\n    //       .then(data => data.json())\r\n    //       .catch((error) => {\r\n    //           console.error('Fetch Error:', error);\r\n    //       });\r\n\r\n        \r\n    //}\r\n\r\n    useEffect(() => {\r\n      console.log('use effect in cat container')\r\n      \r\n      const getCategories = async () => {\r\n          try {\r\n              //console.log(CrudOperations)                               \r\n              //console.log(`token = ${token}`)\r\n              //console.log(`user = ${userId}`)\r\n              if (token !== undefined) {\r\n                  const catsFromServer = await CategoryCrudOperations.getCategoriesByUser(token?.id, token?.token)\r\n                  console.log(catsFromServer)\r\n                  setIsLoading(false)\r\n                  setCategories(catsFromServer)\r\n              }\r\n              \r\n          } catch (error) {\r\n              //showToast('error', error)\r\n          }\r\n      }\r\n\r\n      getCategories()\r\n\r\n      return function cleanup() {\r\n          setCategories([])\r\n      }\r\n\r\n  }, [])\r\n\r\n  const onSubmit = async (e) => {\r\n    //e.preventDefault() is so it doesnt actually submit to the page\r\n    e.preventDefault()\r\n\r\n    //filters if text is blank\r\n      if (!(text.trim())) {\r\n      alert('Please add a task')\r\n      return\r\n    }\r\n\r\n    if (includeDay && !day) {\r\n      alert('Please add a datetime')\r\n      return\r\n    }\r\n      let dayVal = includeDay ? day : null\r\n      const didAdd = await CreateTask({ text, details, location, day: dayVal, reminder, userId: token?.id, isCompleted: false }, token?.token)\r\n      //console.log(didAdd)\r\n      //data returned is the new task\r\n      //const data = await res.json()\r\n      //take existings takes and add data on\r\n      if (!('error' in didAdd)) {\r\n          setTasks([...tasks, didAdd])\r\n          showToast('success', `Added \"${text}\"`)\r\n          setShowAddTask(false)\r\n          //clears the form\r\n          setText('')\r\n          setDay('')\r\n          setLocation('')\r\n          setDetails('')\r\n          setReminder(false)\r\n      }\r\n      else {\r\n          //console.log('added')\r\n          showToast('error', didAdd.error)\r\n      }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={isToggled ? 'taskForm' : 'taskForm hidden'}>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group>\r\n          <Form.Label>Task</Form.Label>\r\n          <Form.Control \r\n                      type='text'\r\n                      maxLength='30'\r\n                      placeholder=''\r\n                      value={text}\r\n                      onChange={(e) => setText(e.target.value)} />\r\n        </Form.Group>\r\n        <Form.Group>\r\n            <Form.Label>Category:</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n            >\r\n              {categories\r\n              .map((cat, index) => \r\n                <option key={index} value={cat.id}>{cat.name}</option>\r\n              )}\r\n              \r\n            </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Location: </Form.Label>\r\n          <Form.Control \r\n                  type='text'\r\n                  placeholder=''\r\n                  value={location}\r\n                  onChange={(e) => setLocation(e.target.value)}\r\n                  />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Details: </Form.Label>\r\n          <Form.Control \r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  placeholder=''\r\n                  value={details}                  \r\n                  onChange={(e) => setDetails(e.target.value)}\r\n                  />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Check \r\n            type=\"checkbox\" \r\n            label=\"Set Due Date?\"\r\n            checked={includeDay}\r\n            value={includeDay}\r\n            onChange={(e) => setIncludeDay(e.currentTarget.checked)} \r\n          />\r\n        </Form.Group>\r\n        {includeDay && \r\n          <Form.Group>\r\n            <Form.Label>Day & Time: </Form.Label>\r\n            <Form.Control \r\n              type='datetime-local'\r\n              placeholder='Add Day & Time'\r\n              value={day}\r\n              onChange={(e) => setDay(e.target.value)}/>\r\n          </Form.Group>\r\n        }\r\n        <Form.Group>\r\n          <Form.Check \r\n            type=\"checkbox\" \r\n            label=\"Set Reminder\"\r\n            checked={reminder}\r\n            value={reminder}\r\n            onChange={(e) => setReminder(e.currentTarget.checked)} \r\n          />\r\n        </Form.Group>\r\n        \r\n        <button\r\n            type='submit'\r\n            className='btn btn-block'\r\n            style={{ backgroundColor: 'skyblue', color: 'white' }}\r\n          >\r\n            Save Task\r\n        </button>\r\n\r\n      </Form>\r\n    </div>\r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default AddTask\r\n",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":1,"nodeType":"185","messageId":"186","fix":"187"},{"ruleId":"188","severity":1,"message":"189","line":19,"column":5,"nodeType":"190","endLine":19,"endColumn":7,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":51,"column":13,"nodeType":"194","endLine":51,"endColumn":41},{"ruleId":"195","severity":1,"message":"196","line":51,"column":13,"nodeType":"194","endLine":51,"endColumn":41},{"ruleId":"179","replacedBy":"197"},{"ruleId":"181","replacedBy":"198"},{"ruleId":"179","replacedBy":"199"},{"ruleId":"181","replacedBy":"200"},{"ruleId":"179","replacedBy":"201"},{"ruleId":"181","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":1,"column":8,"nodeType":"205","messageId":"206","endLine":1,"endColumn":13},{"ruleId":"203","severity":1,"message":"207","line":2,"column":10,"nodeType":"205","messageId":"206","endLine":2,"endColumn":18},{"ruleId":"179","replacedBy":"208"},{"ruleId":"181","replacedBy":"209"},{"ruleId":"203","severity":1,"message":"210","line":5,"column":8,"nodeType":"205","messageId":"206","endLine":5,"endColumn":19},{"ruleId":"179","replacedBy":"211"},{"ruleId":"181","replacedBy":"212"},{"ruleId":"188","severity":1,"message":"213","line":30,"column":8,"nodeType":"190","endLine":30,"endColumn":29,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":31,"column":27,"nodeType":"217","messageId":"186","endLine":31,"endColumn":29},{"ruleId":"188","severity":1,"message":"218","line":45,"column":8,"nodeType":"190","endLine":45,"endColumn":10,"suggestions":"219"},{"ruleId":"203","severity":1,"message":"220","line":97,"column":13,"nodeType":"205","messageId":"206","endLine":97,"endColumn":16},{"ruleId":"203","severity":1,"message":"220","line":113,"column":13,"nodeType":"205","messageId":"206","endLine":113,"endColumn":16},{"ruleId":"183","severity":1,"message":"184","line":1,"column":1,"nodeType":"185","messageId":"186","fix":"221"},{"ruleId":"179","replacedBy":"222"},{"ruleId":"181","replacedBy":"223"},{"ruleId":"203","severity":1,"message":"224","line":5,"column":10,"nodeType":"205","messageId":"206","endLine":5,"endColumn":18},{"ruleId":"179","replacedBy":"225"},{"ruleId":"181","replacedBy":"226"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":1,"nodeType":"185","messageId":"186","fix":"227"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":1,"nodeType":"185","messageId":"186","fix":"228"},{"ruleId":"203","severity":1,"message":"229","line":9,"column":20,"nodeType":"205","messageId":"206","endLine":9,"endColumn":28},{"ruleId":"215","severity":1,"message":"216","line":21,"column":27,"nodeType":"217","messageId":"186","endLine":21,"endColumn":29},{"ruleId":"188","severity":1,"message":"230","line":34,"column":8,"nodeType":"190","endLine":34,"endColumn":10,"suggestions":"231"},{"ruleId":"203","severity":1,"message":"232","line":11,"column":12,"nodeType":"205","messageId":"206","endLine":11,"endColumn":22},{"ruleId":"203","severity":1,"message":"233","line":11,"column":24,"nodeType":"205","messageId":"206","endLine":11,"endColumn":37},{"ruleId":"188","severity":1,"message":"230","line":41,"column":8,"nodeType":"190","endLine":41,"endColumn":10,"suggestions":"234"},{"ruleId":"203","severity":1,"message":"235","line":51,"column":24,"nodeType":"205","messageId":"206","endLine":51,"endColumn":37},{"ruleId":"203","severity":1,"message":"236","line":52,"column":28,"nodeType":"205","messageId":"206","endLine":52,"endColumn":45},{"ruleId":"203","severity":1,"message":"237","line":59,"column":11,"nodeType":"205","messageId":"206","endLine":59,"endColumn":26},{"ruleId":"215","severity":1,"message":"216","line":126,"column":19,"nodeType":"217","messageId":"186","endLine":126,"endColumn":21},{"ruleId":"215","severity":1,"message":"216","line":159,"column":23,"nodeType":"217","messageId":"186","endLine":159,"endColumn":25},{"ruleId":"188","severity":1,"message":"238","line":165,"column":8,"nodeType":"190","endLine":165,"endColumn":15,"suggestions":"239"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":1,"nodeType":"185","messageId":"186","fix":"240"},{"ruleId":"188","severity":1,"message":"241","line":61,"column":8,"nodeType":"190","endLine":61,"endColumn":10,"suggestions":"242"},{"ruleId":"188","severity":1,"message":"243","line":68,"column":8,"nodeType":"190","endLine":68,"endColumn":15,"suggestions":"244"},{"ruleId":"203","severity":1,"message":"245","line":4,"column":8,"nodeType":"205","messageId":"206","endLine":4,"endColumn":16},{"ruleId":"203","severity":1,"message":"246","line":23,"column":10,"nodeType":"205","messageId":"206","endLine":23,"endColumn":19},{"ruleId":"188","severity":1,"message":"230","line":72,"column":6,"nodeType":"190","endLine":72,"endColumn":8,"suggestions":"247"},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"250","text":"251"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'exportTaskToiCal' and 'task.day'. Either include them or remove the dependency array.","ArrayExpression",["252"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["248"],["249"],["248"],["249"],["248"],["249"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["248"],["249"],"'warningIcon' is defined but never used.",["248"],["249"],"React Hook useCallback has an unnecessary dependency: 'pageNumber'. Either exclude it or remove the dependency array.",["253"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","React Hook useEffect has missing dependencies: 'onSave' and 'token'. Either include them or remove the dependency array.",["254"],"'res' is assigned a value but never used.",{"range":"255","text":"251"},["248"],["249"],"'useToken' is defined but never used.",["248"],["249"],{"range":"256","text":"251"},{"range":"257","text":"251"},"'setToken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["258"],"'showAddCat' is assigned a value but never used.","'setShowAddCat' is assigned a value but never used.",["259"],"'setCheckValue' is assigned a value but never used.","'setAutoDeleteTime' is assigned a value but never used.","'getConnectionId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'connection', 'setAlertsOnLogin', and 'showToast'. Either include them or remove the dependency array.",["260"],{"range":"261","text":"251"},"React Hook useEffect has missing dependencies: 'filterAndMap' and 'tasks'. Either include them or remove the dependency array. If 'setEvents' needs the current value of 'tasks', you can also switch to useReducer instead of useState and read 'tasks' in the reducer.",["262"],"React Hook useEffect has a missing dependency: 'filterAndMap'. Either include it or remove the dependency array.",["263"],"'Constant' is defined but never used.","'isLoading' is assigned a value but never used.",["264"],"no-global-assign","no-unsafe-negation",[-1,0],"",{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},[-1,0],[-1,0],[-1,0],{"desc":"271","fix":"272"},{"desc":"271","fix":"273"},{"desc":"274","fix":"275"},[-1,0],{"desc":"276","fix":"277"},{"desc":"276","fix":"278"},{"desc":"271","fix":"279"},"Update the dependencies array to be: [exportTaskToiCal, task.day]",{"range":"280","text":"281"},"Update the dependencies array to be: [hasMore]",{"range":"282","text":"283"},"Update the dependencies array to be: [onSave, token]",{"range":"284","text":"285"},"Update the dependencies array to be: [token]",{"range":"286","text":"287"},{"range":"288","text":"287"},"Update the dependencies array to be: [connection, setAlertsOnLogin, showToast, token]",{"range":"289","text":"290"},"Update the dependencies array to be: [filterAndMap, tasks]",{"range":"291","text":"292"},{"range":"293","text":"292"},{"range":"294","text":"287"},[531,533],"[exportTaskToiCal, task.day]",[1448,1469],"[hasMore]",[1531,1533],"[onSave, token]",[1130,1132],"[token]",[1411,1413],[5840,5847],"[connection, setAlertsOnLogin, showToast, token]",[2093,2095],"[filterAndMap, tasks]",[2184,2191],[2657,2659]]