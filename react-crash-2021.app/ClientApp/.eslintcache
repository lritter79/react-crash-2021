[{"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js":"1","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js":"2","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js":"3","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js":"4","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js":"5","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js":"6","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js":"7","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js":"8","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js":"9","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js":"10","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js":"11","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js":"12","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js":"13","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js":"14","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js":"15","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js":"16","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js":"17","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js":"18","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js":"19","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js":"20","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js":"21","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js":"22","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js":"23","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js":"24","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js":"25","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Header.js":"26","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js":"27","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js":"28","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTask.js":"29","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js":"30","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js":"31"},{"size":4131,"mtime":1616456681288,"results":"32","hashOfConfig":"33"},{"size":942,"mtime":1616537402522,"results":"34","hashOfConfig":"33"},{"size":1016,"mtime":1616456179562,"results":"35","hashOfConfig":"33"},{"size":280,"mtime":1614736916063,"results":"36","hashOfConfig":"33"},{"size":699,"mtime":1616002415575,"results":"37","hashOfConfig":"33"},{"size":7393,"mtime":1616002415420,"results":"38","hashOfConfig":"33"},{"size":198,"mtime":1614736916166,"results":"39","hashOfConfig":"33"},{"size":2936,"mtime":1616002415445,"results":"40","hashOfConfig":"33"},{"size":232,"mtime":1614736916073,"results":"41","hashOfConfig":"33"},{"size":1968,"mtime":1616002415415,"results":"42","hashOfConfig":"33"},{"size":8968,"mtime":1616552372740,"results":"43","hashOfConfig":"33"},{"size":1517,"mtime":1616070609700,"results":"44","hashOfConfig":"33"},{"size":2966,"mtime":1616002415447,"results":"45","hashOfConfig":"33"},{"size":3868,"mtime":1616538851361,"results":"46","hashOfConfig":"33"},{"size":281,"mtime":1614736916102,"results":"47","hashOfConfig":"33"},{"size":1290,"mtime":1616002415418,"results":"48","hashOfConfig":"33"},{"size":1465,"mtime":1616452861122,"results":"49","hashOfConfig":"33"},{"size":359,"mtime":1615654121229,"results":"50","hashOfConfig":"33"},{"size":533,"mtime":1616002415427,"results":"51","hashOfConfig":"33"},{"size":351,"mtime":1615654121240,"results":"52","hashOfConfig":"33"},{"size":375,"mtime":1614736916191,"results":"53","hashOfConfig":"33"},{"size":235,"mtime":1616002415422,"results":"54","hashOfConfig":"33"},{"size":1714,"mtime":1616002415424,"results":"55","hashOfConfig":"33"},{"size":371,"mtime":1616002415429,"results":"56","hashOfConfig":"33"},{"size":1706,"mtime":1616002415555,"results":"57","hashOfConfig":"33"},{"size":901,"mtime":1616002415561,"results":"58","hashOfConfig":"33"},{"size":363,"mtime":1616002415431,"results":"59","hashOfConfig":"33"},{"size":495,"mtime":1615654121222,"results":"60","hashOfConfig":"33"},{"size":338,"mtime":1615654121234,"results":"61","hashOfConfig":"33"},{"size":4776,"mtime":1616002415567,"results":"62","hashOfConfig":"33"},{"size":926,"mtime":1616002415433,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"ea2nox",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"67"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js",["143","144","145","146","147"],"import { useParams } from 'react-router-dom'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport Button from './Button'\r\nimport EditTask from './EditTask'\r\nimport FormatDateString from './FormatDateString'\r\nimport FetchTask from './task-crud-operations/FetchTask'\r\nimport UpdateTask from './task-crud-operations/UpdateTask'\r\nimport CommentSection from './comment-components/CommentSection'\r\nimport { useShowToast } from './toast/ToastContext'\r\nimport { useToken, useUserId } from './api-authorization/UserContext'\r\n\r\nconst TaskDetails = () => {\r\n\r\n    //gets the params passed in from the router\r\n    //is a react hook\r\n    const { id } = useParams()\r\n    const { token, setToken } = useToken()\r\n    const { userId, setUserId } = useUserId()\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [task, setTask] = useState(null)\r\n    const [showEditTask, setShowEditTask] = useState(false)\r\n    const [comments, setComments] = useState()\r\n    const showToast = useShowToast() \r\n   \r\n\r\n    useEffect(() => {\r\n        //console.log(\"using effect: task details\")\r\n        // Fetch Task\r\n        const fetchTask = FetchTask\r\n\r\n        const getTask = async () => {          \r\n            try {       \r\n                const taskFromServer = await fetchTask(id, token)         \r\n                setTask(taskFromServer)\r\n                //console.log(taskFromServer)\r\n                setComments(taskFromServer.comments)\r\n                setIsLoading(false)\r\n            } catch (error) {\r\n                console.log(\"failed\") \r\n                console.log(error);\r\n            }   \r\n        }\r\n      \r\n        getTask()\r\n\r\n    }, []) \r\n\r\n    const onCancel = () => {\r\n        setShowEditTask(!showEditTask)\r\n    }\r\n\r\n    const update = async (task) => {\r\n        setIsLoading(true)\r\n        try {\r\n            task.userId = userId\r\n            setShowEditTask(!showEditTask)\r\n            const updTask = await UpdateTask(task, token)\r\n            setTask(updTask)\r\n            setIsLoading(false)\r\n            showToast('success', `Updated \"${task.text}\"`)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div>    \r\n                    {!showEditTask && (\r\n                        <div className=\"taskDetail\">\r\n                            <h3>\r\n                                {task.text}\r\n                            </h3>\r\n                            <hr></hr>\r\n                            <p>\r\n                                Category: {task.category}\r\n                            </p>\r\n                            <p>\r\n                                Location: {task.location}\r\n                            </p>\r\n                            <p>\r\n                                Day: {FormatDateString(task.day)}\r\n                            </p>\r\n                            <p>\r\n                                Details: {task.details !== undefined ? task.details : \"None\"}\r\n                            </p>    \r\n                            { task.isCompleted && (\r\n                                <p>Completed On: {FormatDateString(task.dateCompleted)}</p>\r\n                            )}\r\n                            <Button\r\n                                color='green'\r\n                                text='Edit Task'\r\n                                onClick={() => setShowEditTask(!showEditTask)}\r\n                            />\r\n                            {(comments != undefined) && (\r\n                                <CommentSection comments={comments} taskId={id} /> \r\n                            )}                         \r\n                        </div>\r\n                    )}                               \r\n\r\n                    {showEditTask && (\r\n                        <EditTask task={task} onUpdate={update} onCancel={onCancel} token={token}/>\r\n                    )}        \r\n                </div>) : (\r\n                <div>\r\n                    <h1>Loading ...</h1>\r\n                </div>\r\n            )}           \r\n        </>        \r\n    )\r\n}\r\n\r\nexport default TaskDetails",["148","149"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js",[],["150","151"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js",["152","153","154","155","156","157"],"import { useState, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport userFunctions from './UserFunctions'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport { useToken, useUserId }  from './UserContext'\r\n\r\nconst UserManager = ({ handleLogout }) => {\r\n    //console.log(`id: ${id}`)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [user, setUser] = useState('')\r\n    const [showDeleteForm, setShowDeleteForm] = useState(false)\r\n    const [deleteDisabled, setDeleteDisabled] = useState(false)\r\n    const [submitDisabled, setSubmitDisabled] = useState(false)\r\n    const onSave = useShowToast()\r\n    const { token, setToken } = useToken()\r\n    const { userId, setUserId } = useUserId()\r\n    //https://stackoverflow.com/questions/53120972/how-to-call-loading-function-with-react-useeffect-only-once\r\n    useEffect(() => {\r\n\r\n        const getUser = async () => {\r\n            try {\r\n                //console.log(CrudOperations)                               \r\n                //console.log(`token = ${token}`)\r\n                //console.log(`user = ${userId}`)\r\n                if (userId != undefined) {\r\n                    const userData = await userFunctions.getUser(userId, token)\r\n                    setUser(userData)\r\n                    setIsLoading(false)\r\n                }\r\n\r\n            } catch (error) {\r\n                onSave('error', error)\r\n            }\r\n        }\r\n\r\n        getUser()\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        return function cleanup() {\r\n            //console.log('clean up')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //console.log('user use effect')\r\n        //if (isChecked != undefined) {\r\n        //    //const updatedUser = await userFunctions.saveUser({ user, id, token })        \r\n        //}\r\n        //else {\r\n        //    console.log('first time')\r\n        //}\r\n        //console.log('set')\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        console.log('isLoading use effect')\r\n    }, [isLoading])\r\n\r\n    \r\n\r\n\r\n    async function updateUser(appUser) {\r\n        \r\n        return fetch(`${Constant()}/api/users/${userId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(appUser),\r\n        })\r\n            .then(function (data) {\r\n               onSave('success', 'Your changes have been saved')\r\n               return data.json()\r\n            })\r\n            .catch((error) => {\r\n               onSave('error', error)\r\n            })\r\n    }\r\n\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        setSubmitDisabled(true)\r\n        let res = await updateUser(user)  \r\n        await sleep(1000)\r\n        setSubmitDisabled(false)\r\n    }\r\n\r\n    const onSubmitDelete = async e => {\r\n        e.preventDefault()\r\n        setDeleteDisabled(true)\r\n        setShowDeleteForm(true)\r\n        //handleLogout(e)\r\n        //let res = await deleteAccount(id)\r\n    }\r\n\r\n    const onDelete = async e => {\r\n        e.preventDefault()\r\n        handleLogout(e)\r\n        let res = await deleteAccount(userId)\r\n    }\r\n\r\n    async function deleteAccount(id) {\r\n        return fetch(`${Constant()}/api/users/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify({userId: id}),\r\n        })\r\n        .then(data => data.json())\r\n        .catch((error) => {\r\n            console.error('Fetch Error:', error);\r\n        });\r\n    }  \r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <p>Loading...</p>\r\n            ):\r\n                (<div>\r\n                    {showDeleteForm && (\r\n                        <div className='popup'>\r\n                            <div className='popupForm'>\r\n                                <form>\r\n                                    <label for=\"\">Are you sure?</label>\r\n                                    <br />\r\n                                    <button\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'green' }}\r\n                                        onClick={onDelete}\r\n                                    >\r\n                                        Yes\r\n                                    </button>\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'red' }}\r\n                                        onClick={function () {\r\n                                            setDeleteDisabled(false)\r\n                                            setShowDeleteForm(false)\r\n                                        }}\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n\r\n                                </form>\r\n                            </div>                          \r\n                        </div>\r\n                    )}\r\n                    <Form onSubmit={onSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Open To Collaboration?: \"\r\n                                checked={user.isOpenToCollaboration}\r\n                                onChange={(e) => setUser({ ...user, isOpenToCollaboration: e.currentTarget.checked })} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Bio: \r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=''\r\n                                value={user.bio}\r\n                                onChange={(e) => setUser({ ...user, bio: e.target.value })}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <button\r\n                            type='submit'\r\n                            className='btn btn-block'\r\n                            style={{ backgroundColor: 'green' }}\r\n                            disabled={submitDisabled}\r\n                        >\r\n                            Save Changes\r\n                        </button>\r\n                    </Form>\r\n\r\n                    <form onSubmit={onSubmitDelete}>\r\n                        <button\r\n                            type='submit'\r\n                            className='btn'\r\n                            style={{ backgroundColor: 'red' }}\r\n                            disabled={deleteDisabled}\r\n                        >\r\n                            Delete Account\r\n                        </button>\r\n                    </form >                 \r\n                    \r\n                </div>)}\r\n            \r\n        </>\r\n   )\r\n}\r\n\r\nexport default UserManager","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js",["158"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useToast } from './ToastContext'\r\n\r\nimport './Toast.css';\r\n//source:     transition: max-height 0.5s, opacity 0.5s;\r\nconst Toast = ({ position, autoDelete, dismissTime }) => {\r\n    const toastList = useToast()\r\n    const [list, setList] = useState(toastList)\r\n\r\n    //function sleep(ms) {\r\n    //    console.log('sleeping')\r\n    //    return new Promise(resolve => setTimeout(resolve, ms));\r\n    //  }\r\n\r\n    useEffect(() => {\r\n        //console.log('toastlist side effect')\r\n        //console.log(toastList)\r\n        setList([...toastList]);\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            if (autoDelete && toastList.length && list.length) {            \r\n                deleteToast(toastList[0].id);\r\n            }\r\n        }, dismissTime);\r\n\r\n        return async () => {                     \r\n            clearInterval(interval);\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList, autoDelete, dismissTime, list]);\r\n\r\n    const deleteToast = id => {\r\n        const listItemIndex = list.findIndex(e => e.id === id);\r\n        const toastListItem = toastList.findIndex(e => e.id === id);\r\n        list.splice(listItemIndex, 1);\r\n        toastList.splice(toastListItem, 1);\r\n        setList([...list]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`notification-container ${position}`}>\r\n                {\r\n                    list.map((toast, i) =>\r\n                        <div\r\n                            key={i}\r\n                            className={`notification toast ${('hidden' in toast) ? ('hidden') : ('show')} ${position}`}\r\n                            style={{ backgroundColor: toast.backgroundColor }}\r\n                        >\r\n                            <button onClick={() => deleteToast(toast.id)}>\r\n                                X\r\n                            </button>\r\n                            <div className=\"notification-image\">\r\n                                <img src={toast.icon} alt=\"\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"notification-title\">{toast.title}</p>\r\n                                <p className=\"notification-message\">\r\n                                    {toast.description}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    Toast.defaultProps = {\r\n        position: 'bottom-right'\r\n    }\r\n\r\n    Toast.propTypes = {\r\n        toastList: PropTypes.array.isRequired,\r\n        position: PropTypes.string,\r\n        autoDelete: PropTypes.bool,\r\n        autoDeleteTime: PropTypes.number\r\n    }\r\n}\r\n\r\nexport default Toast\r\n\r\n","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js",[],["159","160"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js",["161","162","163","164","165","166"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js",[],["167","168"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js",["169"],"import React, { useContext, useState } from 'react'\r\nimport checkIcon from '../../assets/check.svg';\r\nimport errorIcon from '../../assets/error.svg';\r\nimport infoIcon from '../../assets/info.svg';\r\nimport warningIcon from '../../assets/warning.svg';\r\n\r\n\r\nconst ToastListContext = React.createContext()\r\nconst ShowToastContext = React.createContext()\r\n\r\nexport function useToast() {\r\n    return useContext(ToastListContext)\r\n}\r\n\r\nexport function useShowToast() {\r\n    return useContext(ShowToastContext)\r\n}\r\n\r\nexport function ToastProvider({ children }) {\r\n    const [list, setList] = useState([])\r\n\r\n    const showToast = (type, text) => {\r\n        let toastProperties = null\r\n        const id = Math.floor((Math.random() * 100) + 1)\r\n        //console.log('type: ' + type)\r\n        switch (type) {\r\n            case 'error':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Error!',\r\n                    description: `${text}`,\r\n                    backgroundColor: 'salmon',\r\n                    icon: errorIcon\r\n                }\r\n                break\r\n            case 'success':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Success!',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5cb85c',\r\n                    icon: checkIcon\r\n                }\r\n                break\r\n            case 'info':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Info',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5bc0de',\r\n                    icon: infoIcon\r\n                }\r\n                break\r\n\r\n            default:\r\n                setList([])\r\n        }\r\n        setList([...list, toastProperties])\r\n    }\r\n    //const testList = [\r\n    //    {\r\n    //        id: 1,\r\n    //        title: 'Success',\r\n    //        description: 'This is a success toast component',\r\n    //        backgroundColor: '#5cb85c',\r\n    //        icon: checkIcon\r\n    //    },\r\n    //    {\r\n    //        id: 2,\r\n    //        title: 'Danger',\r\n    //        description: 'This is an error toast component',\r\n    //        backgroundColor: '#d9534f',\r\n    //        icon: errorIcon\r\n    //    },\r\n    //    {\r\n    //        id: 3,\r\n    //        title: 'Info',\r\n    //        description: 'This is an info toast component',\r\n    //        backgroundColor: '#5bc0de',\r\n    //        icon: infoIcon\r\n    //    },\r\n    //    {\r\n    //        id: 4,\r\n    //        title: 'Warning',\r\n    //        description: 'This is a warning toast component',\r\n    //        backgroundColor: '#f0ad4e',\r\n    //        icon: warningIcon\r\n    //    }\r\n    //]\r\n    return (\r\n        <ToastListContext.Provider value={list}>\r\n            <ShowToastContext.Provider value={showToast}>\r\n                {children}\r\n            </ShowToastContext.Provider>\r\n        </ToastListContext.Provider>\r\n    )\r\n}",["170","171"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js",["172","173","174"],"import Constant from '../Constant'\r\nimport CrudOperations from '../task-crud-operations/CrudOperations'\r\nimport Header from '../task-tracker/Header'\r\nimport AddTask from '../task-tracker/AddTask'\r\nimport Tasks from '../task-tracker/Tasks'\r\nimport { useState, useEffect } from 'react'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport { useToken, useUserId } from '../api-authorization/UserContext'\r\n\r\nconst TaskTracker = () => {\r\n        //showAddTask = current state\r\n    //setShowAddTask = function that aloows you to update the current state\r\n    //when you update state, the component rerenders\r\n    const { userId } = useUserId()\r\n    const { token } = useToken()\r\n    const [showAddTask, setShowAddTask] = useState(false)\r\n    const [tasks, setTasks] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const showToast = useShowToast()\r\n   \r\n    useEffect(() => {\r\n        console.log('task tracker use effect')\r\n        const getTasks = async () => {\r\n            try {\r\n                //console.log(CrudOperations)                               \r\n                //console.log(`token = ${token}`)\r\n                //console.log(`user = ${userId}`)\r\n                if (userId != undefined) {\r\n                    const tasksFromServer = await CrudOperations.FetchTasks(userId, token)\r\n                    setIsLoading(false)\r\n                    setTasks(tasksFromServer)\r\n                }\r\n                \r\n            } catch (error) {\r\n                showToast('error', error)\r\n            }\r\n        }\r\n\r\n        getTasks()\r\n\r\n        return function cleanup() {\r\n            setTasks([])\r\n        }\r\n    }, [])\r\n\r\n    const onDelete = async (id) => {\r\n        await CrudOperations.DeleteTask(id, token)\r\n        //.filter removes the task with the same id as the id passed up\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n\r\n    // Toggle Reminder\r\n    //takes id so it knows which on to toggle\r\n    const toggleReminder = async (taskToToggle) => {\r\n        try {\r\n            //const taskToToggle = await CrudOperations.FetchTask(id, token)\r\n            const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n            //console.log(updTask)\r\n            const res = await fetch(`${Constant()}/api/tasks/${taskToToggle.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                },\r\n                body: JSON.stringify(updTask)\r\n            })\r\n\r\n            const data = await res.json()\r\n\r\n            setTasks(\r\n                tasks.map((task) =>\r\n                    task.id === taskToToggle.id ? { ...task, reminder: data.reminder } : task\r\n                )\r\n            )\r\n        } catch (error) {\r\n            showToast('error', 'error')\r\n        }\r\n\r\n    }\r\n\r\n    const updateTask = async (task) => {\r\n        console.log(task)\r\n        setTasks(\r\n            tasks.map((oldTask) => task.id === oldTask.id ? task : oldTask)\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                onAdd={() => setShowAddTask(!showAddTask)}\r\n                showAdd={showAddTask} />\r\n            <AddTask isToggled={showAddTask}\r\n                userId={userId} token={token}\r\n                tasks={tasks} setTasks={setTasks}\r\n                setShowAddTask={setShowAddTask} />\r\n            {!isLoading ? (\r\n                (tasks.length > 0) ? (\r\n                    <Tasks\r\n                        tasks={tasks}\r\n                        onDelete={onDelete}\r\n                        onToggle={toggleReminder}\r\n                        onGoToDetail={() => { setShowAddTask(false) }} />) :\r\n                    ('No Tasks To Show')\r\n            ) : ('Loading ...')}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskTracker","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js",[],["175","176"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js",["177"],"import Table from 'react-bootstrap/Table'\r\nimport { FaTimes } from 'react-icons/fa'\r\nimport FormatDateString from './FormatDateString'\r\nimport Constant from './Constant'\r\n\r\nconst AlertCenter = ({ alerts, setAlerts }) => {\r\n\r\n    const deleteTask = async (id) => {\r\n        //await fetch(`${Constant()}/api/alerts/${id}`, {\r\n        //    method: 'DELETE',\r\n        //})\r\n        //.filter removes the task with the same id as the id passed up\r\n        setAlerts(alerts.filter((alert) => alert.id !== id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Table bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th colSpan='2'>Message</th>                      \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {alerts.map((alert, index) =>\r\n                    (<tr key={index}>\r\n                        <td>{FormatDateString(alert.date)}</td>\r\n                        <td>{alert.message}</td>\r\n                        <td>\r\n                            <FaTimes\r\n                                style={{ color: 'red', cursor: 'pointer' }}\r\n                                onClick={() => deleteTask(alert.id)}\r\n                            />\r\n                        </td>\r\n                    </tr>)\r\n                    )}\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertCenter","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js",["178"],"﻿import Constant from '../Constant'\r\n\r\n\r\nconst DeleteTask = async (id, token) => {\r\n\r\n    await fetch(`${Constant()}/api/tasks/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    })\r\n    //.filter removes the task with the same id as the id passed up\r\n    \r\n}\r\n\r\nexport default DeleteTask",["179","180"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js",["181","182","183"],"﻿import CommentForm from \"./CommentForm\"\r\nimport Comments from \"./Comments\"\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nconst CommentSection = ({ comments, taskId }) => {\r\n\r\n    console.log(comments)\r\n\r\n    \r\n    return (\r\n        <div className='commentSection'>\r\n            {(comments?.length > 0) ? (\r\n                <Comments comments={comments} />\r\n            ) : (\r\n                    <></>\r\n                )}\r\n\r\n            <CommentForm taskId={taskId} />\r\n        </div>\r\n   )\r\n}\r\n\r\nexport default CommentSection",["184","185"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js",["186"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js",[],["187","188"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js",["189","190"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js",["191","192"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Header.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js",["193"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js",["194"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTask.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js",["195"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js",[],{"ruleId":"196","severity":1,"message":"197","line":2,"column":31,"nodeType":"198","messageId":"199","endLine":2,"endColumn":41},{"ruleId":"196","severity":1,"message":"200","line":17,"column":20,"nodeType":"198","messageId":"199","endLine":17,"endColumn":28},{"ruleId":"196","severity":1,"message":"201","line":18,"column":21,"nodeType":"198","messageId":"199","endLine":18,"endColumn":30},{"ruleId":"202","severity":1,"message":"203","line":46,"column":8,"nodeType":"204","endLine":46,"endColumn":10,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":96,"column":40,"nodeType":"208","messageId":"209","endLine":96,"endColumn":42},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"210","replacedBy":"214"},{"ruleId":"212","replacedBy":"215"},{"ruleId":"196","severity":1,"message":"200","line":16,"column":20,"nodeType":"198","messageId":"199","endLine":16,"endColumn":28},{"ruleId":"196","severity":1,"message":"201","line":17,"column":21,"nodeType":"198","messageId":"199","endLine":17,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":26,"column":28,"nodeType":"208","messageId":"209","endLine":26,"endColumn":30},{"ruleId":"202","severity":1,"message":"216","line":39,"column":8,"nodeType":"204","endLine":39,"endColumn":10,"suggestions":"217"},{"ruleId":"196","severity":1,"message":"218","line":91,"column":13,"nodeType":"198","messageId":"199","endLine":91,"endColumn":16},{"ruleId":"196","severity":1,"message":"218","line":107,"column":13,"nodeType":"198","messageId":"199","endLine":107,"endColumn":16},{"ruleId":"219","severity":1,"message":"220","line":75,"column":5,"nodeType":"221","messageId":"222","endLine":84,"endColumn":6},{"ruleId":"210","replacedBy":"223"},{"ruleId":"212","replacedBy":"224"},{"ruleId":"196","severity":1,"message":"225","line":48,"column":24,"nodeType":"198","messageId":"199","endLine":48,"endColumn":37},{"ruleId":"196","severity":1,"message":"226","line":49,"column":28,"nodeType":"198","messageId":"199","endLine":49,"endColumn":45},{"ruleId":"196","severity":1,"message":"227","line":56,"column":11,"nodeType":"198","messageId":"199","endLine":56,"endColumn":26},{"ruleId":"206","severity":1,"message":"207","line":103,"column":20,"nodeType":"208","messageId":"209","endLine":103,"endColumn":22},{"ruleId":"206","severity":1,"message":"207","line":130,"column":24,"nodeType":"208","messageId":"209","endLine":130,"endColumn":26},{"ruleId":"202","severity":1,"message":"228","line":136,"column":8,"nodeType":"204","endLine":136,"endColumn":16,"suggestions":"229"},{"ruleId":"210","replacedBy":"230"},{"ruleId":"212","replacedBy":"231"},{"ruleId":"196","severity":1,"message":"232","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":19},{"ruleId":"210","replacedBy":"233"},{"ruleId":"212","replacedBy":"234"},{"ruleId":"206","severity":1,"message":"207","line":28,"column":28,"nodeType":"208","messageId":"209","endLine":28,"endColumn":30},{"ruleId":"202","severity":1,"message":"235","line":44,"column":8,"nodeType":"204","endLine":44,"endColumn":10,"suggestions":"236"},{"ruleId":"196","severity":1,"message":"237","line":81,"column":11,"nodeType":"198","messageId":"199","endLine":81,"endColumn":21},{"ruleId":"210","replacedBy":"238"},{"ruleId":"212","replacedBy":"239"},{"ruleId":"196","severity":1,"message":"240","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":16},{"ruleId":"241","severity":1,"message":"242","line":1,"column":1,"nodeType":"243","messageId":"209","fix":"244"},{"ruleId":"210","replacedBy":"245"},{"ruleId":"212","replacedBy":"246"},{"ruleId":"241","severity":1,"message":"242","line":1,"column":1,"nodeType":"243","messageId":"209","fix":"247"},{"ruleId":"196","severity":1,"message":"248","line":3,"column":10,"nodeType":"198","messageId":"199","endLine":3,"endColumn":18},{"ruleId":"196","severity":1,"message":"249","line":3,"column":20,"nodeType":"198","messageId":"199","endLine":3,"endColumn":29},{"ruleId":"210","replacedBy":"250"},{"ruleId":"212","replacedBy":"251"},{"ruleId":"241","severity":1,"message":"242","line":1,"column":1,"nodeType":"243","messageId":"209","fix":"252"},{"ruleId":"210","replacedBy":"253"},{"ruleId":"212","replacedBy":"254"},{"ruleId":"196","severity":1,"message":"200","line":8,"column":20,"nodeType":"198","messageId":"199","endLine":8,"endColumn":28},{"ruleId":"196","severity":1,"message":"201","line":9,"column":21,"nodeType":"198","messageId":"199","endLine":9,"endColumn":30},{"ruleId":"196","severity":1,"message":"255","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"248","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":18},{"ruleId":"241","severity":1,"message":"242","line":1,"column":1,"nodeType":"243","messageId":"209","fix":"256"},{"ruleId":"241","severity":1,"message":"242","line":1,"column":1,"nodeType":"243","messageId":"209","fix":"257"},{"ruleId":"196","severity":1,"message":"240","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":16},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'setToken' is assigned a value but never used.","'setUserId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["258"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["259"],"no-negated-in-lhs",["260"],["259"],["260"],"React Hook useEffect has missing dependencies: 'onSave', 'token', and 'userId'. Either include them or remove the dependency array.",["261"],"'res' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode",["259"],["260"],"'setCheckValue' is assigned a value but never used.","'setAutoDeleteTime' is assigned a value but never used.","'getConnectionId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'alerts', 'connection', and 'showToast'. Either include them or remove the dependency array.",["262"],["259"],["260"],"'warningIcon' is defined but never used.",["259"],["260"],"React Hook useEffect has missing dependencies: 'showToast', 'token', and 'userId'. Either include them or remove the dependency array.",["263"],"'updateTask' is assigned a value but never used.",["259"],["260"],"'Constant' is defined but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"264","text":"265"},["259"],["260"],{"range":"266","text":"265"},"'useState' is defined but never used.","'useEffect' is defined but never used.",["259"],["260"],{"range":"267","text":"265"},["259"],["260"],"'Table' is defined but never used.",{"range":"268","text":"265"},{"range":"269","text":"265"},{"desc":"270","fix":"271"},"no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],"Update the dependencies array to be: [id, token]",{"range":"278","text":"279"},"Update the dependencies array to be: [onSave, token, userId]",{"range":"280","text":"281"},"Update the dependencies array to be: [alerts, connection, showToast, userId]",{"range":"282","text":"283"},"Update the dependencies array to be: [showToast, token, userId]",{"range":"284","text":"285"},[1651,1653],"[id, token]",[1507,1509],"[onSave, token, userId]",[4899,4907],"[alerts, connection, showToast, userId]",[1658,1660],"[showToast, token, userId]"]