[{"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js":"1","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Downloader.js":"2","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js":"3","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js":"4","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js":"5","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js":"6","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js":"7","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js":"8","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js":"9","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js":"10","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js":"11","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js":"12","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js":"13","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\CoolColor.js":"14","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js":"15","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryCrudOperations.js":"16","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js":"17","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\Colors.js":"18","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\AddCategory.js":"19","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js":"20","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js":"21","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js":"22","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js":"23","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryContainer.js":"24","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryTable.js":"25","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js":"26","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Calendar.js":"27","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js":"28","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js":"29","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js":"30","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\CustomSelect.js":"31","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js":"32","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js":"33","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js":"34","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AppNavbar.js":"35","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\Helpers.js":"36","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js":"37","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Button.js":"38","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Login.js":"39","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Intro.js":"40","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\EditTask.js":"41","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Register.js":"42","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js":"43","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTask.js":"44","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js":"45","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js":"46","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Header.js":"47"},{"size":942,"mtime":1621200205191,"results":"48","hashOfConfig":"49"},{"size":1789,"mtime":1621200205166,"results":"50","hashOfConfig":"49"},{"size":1019,"mtime":1621200205361,"results":"51","hashOfConfig":"49"},{"size":1558,"mtime":1621200205131,"results":"52","hashOfConfig":"49"},{"size":280,"mtime":1614736916063,"results":"53","hashOfConfig":"49"},{"size":1672,"mtime":1621200205252,"results":"54","hashOfConfig":"49"},{"size":699,"mtime":1616002415575,"results":"55","hashOfConfig":"49"},{"size":232,"mtime":1614736916073,"results":"56","hashOfConfig":"49"},{"size":371,"mtime":1616002415429,"results":"57","hashOfConfig":"58"},{"size":2966,"mtime":1616002415447,"results":"59","hashOfConfig":"58"},{"size":378,"mtime":1621200205270,"results":"60","hashOfConfig":"49"},{"size":3861,"mtime":1621302800514,"results":"61","hashOfConfig":"49"},{"size":1826,"mtime":1621222534647,"results":"62","hashOfConfig":"58"},{"size":307,"mtime":1621200205325,"results":"63","hashOfConfig":"58"},{"size":7479,"mtime":1621200205264,"results":"64","hashOfConfig":"49"},{"size":1449,"mtime":1621288849198,"results":"65","hashOfConfig":"49"},{"size":1106,"mtime":1621200205243,"results":"66","hashOfConfig":"49"},{"size":379,"mtime":1621289838135,"results":"67","hashOfConfig":"58"},{"size":2065,"mtime":1621347310540,"results":"68","hashOfConfig":"49"},{"size":375,"mtime":1614736916191,"results":"69","hashOfConfig":"58"},{"size":359,"mtime":1615654121229,"results":"70","hashOfConfig":"58"},{"size":531,"mtime":1621200205299,"results":"71","hashOfConfig":"58"},{"size":2884,"mtime":1621268643630,"results":"72","hashOfConfig":"58"},{"size":1906,"mtime":1621289381274,"results":"73","hashOfConfig":"49"},{"size":1464,"mtime":1621289959204,"results":"74","hashOfConfig":"58"},{"size":8733,"mtime":1621302800416,"results":"75","hashOfConfig":"49"},{"size":4348,"mtime":1621200205318,"results":"76","hashOfConfig":"49"},{"size":5710,"mtime":1621347209463,"results":"77","hashOfConfig":"49"},{"size":351,"mtime":1615654121240,"results":"78","hashOfConfig":"58"},{"size":5471,"mtime":1621293547002,"results":"79","hashOfConfig":"49"},{"size":2012,"mtime":1621299068175,"results":"80","hashOfConfig":"49"},{"size":198,"mtime":1614736916166,"results":"81","hashOfConfig":"49"},{"size":4988,"mtime":1621301977241,"results":"82","hashOfConfig":"49"},{"size":2936,"mtime":1616002415445,"results":"83","hashOfConfig":"49"},{"size":2632,"mtime":1621302800427,"results":"84","hashOfConfig":"49"},{"size":159,"mtime":1621200205116,"results":"85","hashOfConfig":"49"},{"size":290,"mtime":1621200205199,"results":"86","hashOfConfig":"49"},{"size":614,"mtime":1621200205155,"results":"87","hashOfConfig":"49"},{"size":3082,"mtime":1621200205222,"results":"88","hashOfConfig":"49"},{"size":829,"mtime":1621200205207,"results":"89","hashOfConfig":"49"},{"size":5144,"mtime":1621301556360,"results":"90","hashOfConfig":"49"},{"size":3905,"mtime":1621200205232,"results":"91","hashOfConfig":"49"},{"size":550,"mtime":1621200205289,"results":"92","hashOfConfig":"49"},{"size":338,"mtime":1615654121234,"results":"93","hashOfConfig":"49"},{"size":920,"mtime":1621200205306,"results":"94","hashOfConfig":"49"},{"size":363,"mtime":1616002415431,"results":"95","hashOfConfig":"49"},{"size":901,"mtime":1616002415561,"results":"96","hashOfConfig":"49"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ea2nox",{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},"1esi5ev",{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"103"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"103"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"185","usedDeprecatedRules":"103"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Downloader.js",["212","213","214","215"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js",[],["216","217"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js",[],["218","219"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js",["220","221"],"import Table from 'react-bootstrap/Table'\r\nimport { useState } from 'react'\r\nimport Comment from \"./Comment\"\r\n\r\nconst Comments = ({ comments }) => {\r\n    //console.log(comments)\r\n   \r\n    return (\r\n        <>\r\n            {comments.map((c, index) => (\r\n                <Comment key={index} comment={c} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comments",["222","223"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js",["224"],"import React, { useContext, useState } from 'react'\r\nimport checkIcon from '../../assets/check.svg';\r\nimport errorIcon from '../../assets/error.svg';\r\nimport infoIcon from '../../assets/info.svg';\r\nimport warningIcon from '../../assets/warning.svg';\r\n\r\n\r\nconst ToastListContext = React.createContext()\r\nconst ShowToastContext = React.createContext()\r\n\r\nexport function useToast() {\r\n    return useContext(ToastListContext)\r\n}\r\n\r\nexport function useShowToast() {\r\n    return useContext(ShowToastContext)\r\n}\r\n\r\nexport function ToastProvider({ children }) {\r\n    const [list, setList] = useState([])\r\n\r\n    const showToast = (type, text) => {\r\n        let toastProperties = null\r\n        const id = Math.floor((Math.random() * 100) + 1)\r\n        //console.log('type: ' + type)\r\n        switch (type) {\r\n            case 'error':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Error!',\r\n                    description: `${text}`,\r\n                    backgroundColor: 'salmon',\r\n                    icon: errorIcon\r\n                }\r\n                break\r\n            case 'success':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Success!',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5cb85c',\r\n                    icon: checkIcon\r\n                }\r\n                break\r\n            case 'info':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Info',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5bc0de',\r\n                    icon: infoIcon\r\n                }\r\n                break\r\n\r\n            default:\r\n                setList([])\r\n        }\r\n        setList([...list, toastProperties])\r\n    }\r\n    //const testList = [\r\n    //    {\r\n    //        id: 1,\r\n    //        title: 'Success',\r\n    //        description: 'This is a success toast component',\r\n    //        backgroundColor: '#5cb85c',\r\n    //        icon: checkIcon\r\n    //    },\r\n    //    {\r\n    //        id: 2,\r\n    //        title: 'Danger',\r\n    //        description: 'This is an error toast component',\r\n    //        backgroundColor: '#d9534f',\r\n    //        icon: errorIcon\r\n    //    },\r\n    //    {\r\n    //        id: 3,\r\n    //        title: 'Info',\r\n    //        description: 'This is an info toast component',\r\n    //        backgroundColor: '#5bc0de',\r\n    //        icon: infoIcon\r\n    //    },\r\n    //    {\r\n    //        id: 4,\r\n    //        title: 'Warning',\r\n    //        description: 'This is a warning toast component',\r\n    //        backgroundColor: '#f0ad4e',\r\n    //        icon: warningIcon\r\n    //    }\r\n    //]\r\n    return (\r\n        <ToastListContext.Provider value={list}>\r\n            <ShowToastContext.Provider value={showToast}>\r\n                {children}\r\n            </ShowToastContext.Provider>\r\n        </ToastListContext.Provider>\r\n    )\r\n}",["225","226"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js",["227"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\CoolColor.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js",["228","229","230","231"],"import { useState, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport userFunctions from './UserFunctions'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport { useToken } from './UserContext'\r\nimport Helpers from '../../Helpers'\r\n\r\n\r\nconst UserManager = ({ handleLogout }) => {\r\n    //console.log(`id: ${id}`)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [user, setUser] = useState()\r\n    const [showDeleteForm, setShowDeleteForm] = useState(false)\r\n    const [deleteDisabled, setDeleteDisabled] = useState(false)\r\n    const [submitDisabled, setSubmitDisabled] = useState(false)\r\n    const { token } = useToken()\r\n\r\n    const onSave = useShowToast()\r\n    //https://stackoverflow.com/questions/53120972/how-to-call-loading-function-with-react-useeffect-only-once\r\n\r\n    useEffect(() => {\r\n\r\n        const getUser = async () => {\r\n            try {\r\n                //\r\n                //(CrudOperations)                               \r\n\r\n                //console.log('getting user')\r\n                //console.log(`user = ${userId}`)\r\n                if (token != undefined) {\r\n                    const userData = await userFunctions.getUser(token?.id, token?.token)\r\n                    setUser(userData)\r\n                    setIsLoading(false)\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n                onSave('error', error)\r\n            }\r\n        }\r\n\r\n        getUser()\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        return function cleanup() {\r\n            //console.log('clean up')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //console.log('user use effect')\r\n        //if (isChecked != undefined) {\r\n        //    //const updatedUser = await userFunctions.saveUser({ user, id, token })        \r\n        //}\r\n        //else {\r\n        //    console.log('first time')\r\n        //}\r\n        //console.log('set')\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        console.log('isLoading use effect')\r\n    }, [isLoading])\r\n\r\n    \r\n\r\n\r\n    async function updateUser(appUser) {\r\n        \r\n        return fetch(`${Constant()}/api/users/${token?.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token?.token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(appUser),\r\n        })\r\n            .then(function (data) {\r\n               onSave('success', 'Your changes have been saved')\r\n               return data.json()\r\n            })\r\n            .catch((error) => {\r\n               onSave('error', error)\r\n            })\r\n    }\r\n\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        setSubmitDisabled(true)\r\n        let res = await updateUser(user)  \r\n        await sleep(1000)\r\n        setSubmitDisabled(false)\r\n    }\r\n\r\n    const onSubmitDelete = async e => {\r\n        e.preventDefault()\r\n        setDeleteDisabled(true)\r\n        setShowDeleteForm(true)\r\n        //handleLogout(e)\r\n        //let res = await deleteAccount(id)\r\n    }\r\n\r\n    const onDelete = async e => {\r\n        e.preventDefault()\r\n        handleLogout(e)\r\n        let res = await deleteAccount()\r\n    }\r\n\r\n    async function deleteAccount() {\r\n        return fetch(`${Constant()}/api/users/${token?.id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token?.token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ userId: token?.id }),\r\n        })\r\n        .then(data => data.json())\r\n        .catch((error) => {\r\n            console.error('Fetch Error:', error);\r\n        });\r\n    }  \r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <p>Loading...</p>\r\n            ):\r\n                (<div>\r\n                    {showDeleteForm && (\r\n                        <div className='popup'>\r\n                            <div className='popupForm'>\r\n                                <form>\r\n                                    <label for=\"\">Are you sure?</label>\r\n                                    <br />\r\n                                    <button\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'green' }}\r\n                                        onClick={onDelete}\r\n                                    >\r\n                                        Yes\r\n                                    </button>\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'red' }}\r\n                                        onClick={function () {\r\n                                            setDeleteDisabled(false)\r\n                                            setShowDeleteForm(false)\r\n                                        }}\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n\r\n                                </form>\r\n                            </div>                          \r\n                        </div>\r\n                    )}\r\n                    <Form onSubmit={onSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Open To Collaboration?: \"\r\n                                checked={user.isOpenToCollaboration}\r\n                                onChange={(e) => setUser({ ...user, isOpenToCollaboration: e.currentTarget.checked })} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Bio: \r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=''\r\n                                value={Helpers.replaceNullWithEmptyString(user?.bio)}\r\n                                onChange={(e) => setUser({ ...user, bio: e.target.value })}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <button\r\n                            type='submit'\r\n                            className='btn btn-block'\r\n                            style={{ backgroundColor: 'green' }}\r\n                            disabled={submitDisabled}\r\n                        >\r\n                            Save Changes\r\n                        </button>\r\n                    </Form>\r\n\r\n                    <form onSubmit={onSubmitDelete}>\r\n                        <button\r\n                            type='submit'\r\n                            className='btn'\r\n                            style={{ backgroundColor: 'red' }}\r\n                            disabled={deleteDisabled}\r\n                        >\r\n                            Delete Account\r\n                        </button>\r\n                    </form >                 \r\n                    \r\n                </div>)}\r\n            \r\n        </>\r\n   )\r\n}\r\n\r\nexport default UserManager","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryCrudOperations.js",["232"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js",[],["233","234"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\Colors.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\AddCategory.js",["235"],"import Form from 'react-bootstrap/Form'\r\nimport Colors from './Colors'\r\nimport { useState } from 'react'\r\nimport CategoryCrudOperations from './CategoryCrudOperations'\r\nimport { useToken } from '../api-authorization/UserContext'\r\n\r\nconst AddCategory = ({ token, categories, setCategories }) => {\r\n    const [name, setName] = useState('')\r\n    const [color, setColor] = useState('')\r\n    \r\n    \r\n    const onSubmit = async (e) => {\r\n      e.preventDefault()\r\n      if (name === '') {\r\n        alert('Please enter a category name')\r\n        return\r\n      }\r\n\r\n      let category = await CategoryCrudOperations.postCategory(token.token, {name, color, userId: token?.id})\r\n      console.log(category)\r\n      if (!('error' in category)) {\r\n        setCategories([...categories, category])\r\n      }\r\n      else {\r\n        alert(category)\r\n      }\r\n\r\n      setName('')\r\n      setColor('')\r\n      \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Add a category</h1>\r\n        <Form onSubmit={onSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Name:</Form.Label>\r\n            <Form.Control \r\n                        type='text'\r\n                        maxLength='40'\r\n                        placeholder=''\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Color:</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={color}\r\n              onChange={(e) => setColor(e.target.value)}\r\n            >\r\n              {Colors.map((color, index) => \r\n                <option key={index} value={color}>{color}</option>\r\n              )}\r\n              \r\n            </Form.Control>\r\n          </Form.Group>\r\n          \r\n          <button\r\n              type='submit'\r\n              className='btn btn-block'\r\n              style={{ backgroundColor: 'skyblue', color: 'white' }}\r\n            >\r\n              Save\r\n          </button>\r\n        </Form>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCategory","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js",[],["236","237"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js",["238"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js",["239"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js",["240","241","242"],"import { useState, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport { useToken } from '../api-authorization/UserContext'\r\nimport userFunctions from '../api-authorization/UserFunctions'\r\n\r\nconst CommentForm = ({ taskId, comments, setComments,  }) => {\r\n    const [text, setText] = useState('')\r\n    const { token, setToken } = useToken()\r\n    const [user, setUser] = useState()\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    useEffect(() => {\r\n\r\n        const getUser = async () => {\r\n            try {\r\n                //\r\n                //(CrudOperations)                               \r\n\r\n                //console.log('getting user')\r\n                //console.log(`user = ${userId}`)\r\n                if (token != undefined) {\r\n                    const userData = await userFunctions.getUser(token?.id, token?.token)\r\n                    setUser(userData)\r\n                    setIsLoading(false)         \r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        getUser()\r\n\r\n    }, [])\r\n\r\n    const onSubmit = async (e) => {\r\n        //e.preventDefault() is so it doesnt actually submit to the page\r\n        e.preventDefault()\r\n        setText('')\r\n        await fetch(Constant() + '/api/comments', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token?.token\r\n            },\r\n            body: JSON.stringify({ userId: token?.id, taskId, text, userName: user.userName })\r\n        })\r\n            .then(data => {\r\n                console.log({ userId: token?.id, taskId, text, userName: user.userName })\r\n                data.json()\r\n                setComments(prev => [...prev, { userId: token?.id, taskId, text, userName: user.userName }])\r\n            })\r\n            .catch((error) => {\r\n                console.error('Fetch Error:', error);\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        !isLoading && (\r\n            <div className='commentForm'>\r\n                <Form onSubmit={onSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Control\r\n                            type='text'\r\n                            maxLength='200'\r\n                            placeholder=''\r\n                            value={text}\r\n                            onChange={(e) => setText(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <button\r\n                        type='submit'\r\n                        className='btn btn-block'\r\n                        style={{ backgroundColor: 'skyblue' }}\r\n                    >\r\n                        Add Comment\r\n                </button>\r\n                </Form>\r\n            </div>\r\n        )\r\n       \r\n    )\r\n}\r\n\r\nexport default CommentForm",["243","244"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryContainer.js",["245","246","247"],"\r\nimport { useState, useEffect } from 'react'\r\nimport AddCategory from './AddCategory'\r\nimport CategoryTable from './CategoryTable'\r\nimport { useToken } from '../api-authorization/UserContext'\r\nimport CategoryCrudOperations from './CategoryCrudOperations'\r\n\r\nconst CategoryContainer = () => {\r\n    const [categories, setCategories] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [showAddCat, setShowAddCat] = useState(true)\r\n    const { token } = useToken()\r\n\r\n    useEffect(() => {\r\n        console.log('use effect in cat container')\r\n        \r\n        setIsLoading(false)\r\n        const getCategories = async () => {\r\n            try {\r\n                //console.log(CrudOperations)                               \r\n                //console.log(`token = ${token}`)\r\n                //console.log(`user = ${userId}`)\r\n                if (token !== undefined) {\r\n                    const catsFromServer = await CategoryCrudOperations.getCategoriesByUser(token?.id, token?.token)\r\n                    console.log(catsFromServer)\r\n                    setIsLoading(false)\r\n                    setCategories(catsFromServer)\r\n                }\r\n                \r\n            } catch (error) {\r\n                //showToast('error', error)\r\n            }\r\n        }\r\n\r\n        getCategories()\r\n\r\n        return function cleanup() {\r\n            setCategories([])\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? \r\n                (<>\r\n                    <h1>Loading...</h1>\r\n                </>) : \r\n                (<>\r\n                    <AddCategory categories={categories} token={token} setCategories={setCategories} />\r\n                    <CategoryTable categories={categories} token={token} setCategories={setCategories} />\r\n                </>) \r\n            } \r\n        </>                   \r\n    )\r\n}\r\n\r\nexport default CategoryContainer","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryTable.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js",["248","249","250","251","252","253"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Calendar.js",["254","255","256"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js",["257"],"\r\nimport { useState, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport CreateTask from '../task-crud-operations/CreateTask'\r\nimport { useToken } from '../api-authorization/UserContext'\r\n\r\n//take in the function onAdd\r\nconst AddTask = ({ isToggled, tasks, setTasks, setShowAddTask, categories }) => {\r\n  //more info on what the \"useSate\" hook does here: https://reactjs.org/docs/hooks-state.html\r\n    //in a nutshell useState  is what we use to deal with properties in a function because functions cant have properties\r\n    const { token } = useToken()\r\n  const [text, setText] = useState('')\r\n  const [details, setDetails] = useState('')\r\n  const [location, setLocation] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [categoryId, setCategoryId] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n  const [includeDay, setIncludeDay] = useState(false)\r\n    const showToast = useShowToast()\r\n    // Add Task\r\n    //post because we're adding tasks\r\n    //turns it from js object into json string\r\n    //async function addTask(task) {\r\n        \r\n    //    return fetch(Constant() + '/api/tasks', {\r\n    //        method: 'POST',\r\n    //        headers: {\r\n    //            'Content-type': 'application/json',\r\n    //            'Authorization': 'Bearer ' + token\r\n    //        },\r\n    //        body: JSON.stringify(task)\r\n    //    })\r\n    //       .then(data => data.json())\r\n    //       .catch((error) => {\r\n    //           console.error('Fetch Error:', error);\r\n    //       });\r\n\r\n        \r\n    //}\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      console.log('use effect in cat container')\r\n      \r\n\r\n\r\n  }, [])\r\n\r\n  const onSubmit = async (e) => {\r\n    //e.preventDefault() is so it doesnt actually submit to the page\r\n    e.preventDefault()\r\n\r\n    //filters if text is blank\r\n      if (!(text.trim())) {\r\n      alert('Please add a task')\r\n      return\r\n    }\r\n\r\n    if (categoryId === '') {\r\n      alert('Please select a category')\r\n      return\r\n    }\r\n\r\n    if (includeDay && !day) {\r\n      alert('Please add a datetime')\r\n      return\r\n    }\r\n      let dayVal = includeDay ? day : null\r\n      const didAdd = await CreateTask({ text, details, location, day: dayVal, reminder, userId: token?.id, isCompleted: false, categoryId }, token?.token)\r\n      //console.log(didAdd)\r\n      //data returned is the new task\r\n      //const data = await res.json()\r\n      //take existings takes and add data on\r\n      if (!('error' in didAdd)) {\r\n          setTasks([...tasks, didAdd])\r\n          showToast('success', `Added \"${text}\"`)\r\n          setShowAddTask(false)\r\n          //clears the form\r\n          setText('')\r\n          setDay('')\r\n          setLocation('')\r\n          setDetails('')\r\n          setReminder(false)\r\n      }\r\n      else {\r\n          //console.log('added')\r\n          showToast('error', didAdd.error)\r\n      }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={isToggled ? 'taskForm' : 'taskForm hidden'}>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group>\r\n          <Form.Label>Task</Form.Label>\r\n          <Form.Control \r\n                      type='text'\r\n                      maxLength='30'\r\n                      placeholder=''\r\n                      value={text}\r\n                      onChange={(e) => setText(e.target.value)} />\r\n        </Form.Group>\r\n        <Form.Group>\r\n            <Form.Label>Category:</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={categoryId}\r\n              onChange={(e) => setCategoryId(e.target.value)}\r\n            >\r\n              {categories\r\n              .map((cat, index) => \r\n                <option key={index} value={cat.id}>{cat.name}</option>\r\n              )}\r\n              \r\n            </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Location: </Form.Label>\r\n          <Form.Control \r\n                  type='text'\r\n                  placeholder=''\r\n                  value={location}\r\n                  onChange={(e) => setLocation(e.target.value)}\r\n                  />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Details: </Form.Label>\r\n          <Form.Control \r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  placeholder=''\r\n                  value={details}                  \r\n                  onChange={(e) => setDetails(e.target.value)}\r\n                  />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Check \r\n            type=\"checkbox\" \r\n            label=\"Set Due Date?\"\r\n            checked={includeDay}\r\n            value={includeDay}\r\n            onChange={(e) => setIncludeDay(e.currentTarget.checked)} \r\n          />\r\n        </Form.Group>\r\n        {includeDay && \r\n          <Form.Group>\r\n            <Form.Label>Day & Time: </Form.Label>\r\n            <Form.Control \r\n              type='datetime-local'\r\n              placeholder='Add Day & Time'\r\n              value={day}\r\n              onChange={(e) => setDay(e.target.value)}/>\r\n          </Form.Group>\r\n        }\r\n        <Form.Group>\r\n          <Form.Check \r\n            type=\"checkbox\" \r\n            label=\"Set Reminder\"\r\n            checked={reminder}\r\n            value={reminder}\r\n            onChange={(e) => setReminder(e.currentTarget.checked)} \r\n          />\r\n        </Form.Group>\r\n        \r\n        <button\r\n            type='submit'\r\n            className='btn btn-block'\r\n            style={{ backgroundColor: 'skyblue', color: 'white' }}\r\n          >\r\n            Save Task\r\n        </button>\r\n\r\n      </Form>\r\n    </div>\r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js",["258"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js",["259","260","261"],"import Constant from '../Constant'\r\nimport CrudOperations from '../task-crud-operations/CrudOperations'\r\nimport Header from '../task-tracker/Header'\r\nimport AddTask from '../task-tracker/AddTask'\r\nimport Tasks from '../task-tracker/Tasks'\r\nimport { useState, useEffect } from 'react'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport { useToken} from '../api-authorization/UserContext'\r\nimport Calendar from './Calendar'\r\nimport Button from '../Button'\r\nimport CategoryCrudOperations from '../categories/CategoryCrudOperations'\r\n\r\nconst TaskTracker = () => {\r\n        //showAddTask = current state\r\n    //setShowAddTask = function that aloows you to update the current state\r\n    //when you update state, the component rerenders\r\n    const { token } = useToken()\r\n    const [showAddTask, setShowAddTask] = useState(false)\r\n    const [tasks, setTasks] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const showToast = useShowToast()\r\n    const [showCalendarView, setShowCalendarView] = useState(false)\r\n    const [categories, setCategories] = useState([])\r\n   \r\n    useEffect(() => {\r\n        //console.log('task tracker use effect')\r\n        const getCategories = async () => {\r\n            try {\r\n                //console.log(CrudOperations)                               \r\n                //console.log(`token = ${token}`)\r\n                //console.log(`user = ${userId}`)\r\n                if (token !== undefined) {\r\n                    let catsFromServer = (await CategoryCrudOperations.getCategoriesByUser(token?.id, token?.token))  \r\n                    catsFromServer.unshift({name: 'Choose...', id:''})             \r\n                    console.log(catsFromServer)\r\n                    setCategories(catsFromServer)\r\n                }\r\n                \r\n            } catch (error) {\r\n                //showToast('error', error)\r\n            }\r\n        }\r\n  \r\n        getCategories()\r\n\r\n        const getTasks = async () => {\r\n            try {\r\n                //console.log(CrudOperations)                               \r\n                //console.log(`token = ${token}`)\r\n                //console.log(`user = ${userId}`)\r\n                if (token != undefined) {\r\n                    const tasksFromServer = await CrudOperations.FetchTasks(token?.id, token?.token)\r\n                    setIsLoading(false)\r\n                    setTasks(tasksFromServer)\r\n                }\r\n                \r\n            } catch (error) {\r\n                showToast('error', error)\r\n            }\r\n        }\r\n\r\n        getTasks()\r\n\r\n        return function cleanup() {\r\n            setTasks([])\r\n        }\r\n    }, [])\r\n\r\n    const onDelete = async (id) => {\r\n        await CrudOperations.DeleteTask(id, token?.token)\r\n        //.filter removes the task with the same id as the id passed up\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n\r\n    // Toggle Reminder\r\n    //takes id so it knows which on to toggle\r\n    const toggleReminder = async (taskToToggle) => {\r\n        try {\r\n            //const taskToToggle = await CrudOperations.FetchTask(id, token)\r\n            const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n            //console.log(updTask)\r\n            const res = await fetch(`${Constant()}/api/tasks/${taskToToggle.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token?.token\r\n                },\r\n                body: JSON.stringify(updTask)\r\n            })\r\n\r\n            const data = await res.json()\r\n\r\n            setTasks(\r\n                tasks.map((task) =>\r\n                    task.id === taskToToggle.id ? { ...task, reminder: data.reminder } : task\r\n                )\r\n            )\r\n        } catch (error) {\r\n            showToast('error', 'error')\r\n        }\r\n\r\n    }\r\n\r\n    const updateTask = async (task) => {\r\n        //console.log(task)\r\n        setTasks(\r\n            tasks.map((oldTask) => task.id === oldTask.id ? task : oldTask)\r\n        )\r\n    }\r\n\r\n    function calendarBtnClick(e) {\r\n        e.currentTarget.blur()\r\n        setShowCalendarView(!showCalendarView)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                onAdd={() => setShowAddTask(!showAddTask)}\r\n                showAdd={showAddTask} />\r\n            <AddTask isToggled={showAddTask}\r\n                tasks={tasks} setTasks={setTasks}\r\n                setShowAddTask={setShowAddTask}\r\n                categories={categories} />\r\n            <div id='divBtnContainer'>\r\n                <Button text={showCalendarView ? ('Show List View') : ('Show Calendar View')}\r\n                    textColor='white'\r\n                    onClick={calendarBtnClick}\r\n                />\r\n            </div>\r\n            {!isLoading ? (\r\n                (tasks.length > 0) ? (\r\n                    (showCalendarView) ?\r\n                        (<Calendar tasks={tasks} setTasks={setTasks} />) :\r\n                        (<Tasks\r\n                            tasks={tasks}\r\n                            categories={categories}\r\n                            onDelete={onDelete}\r\n                            onToggle={toggleReminder}\r\n                            onGoToDetail={() => { setShowAddTask(false) }} />)\r\n                    ) :\r\n                    ('No Tasks To Show')\r\n            ) : ('Loading ...')}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskTracker",["262","263"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\CustomSelect.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js",["264","265"],"import { useParams } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from './Button'\r\nimport EditTask from './EditTask'\r\nimport FormatDateString from './FormatDateString'\r\nimport FetchTask from './task-crud-operations/FetchTask'\r\nimport CommentSection from './comment-components/CommentSection'\r\nimport { useShowToast } from './toast/ToastContext'\r\nimport { useToken } from './api-authorization/UserContext'\r\nimport UpdateTask from './task-crud-operations/UpdateTask'\r\nimport Downloader from './Downloader'\r\n\r\nconst TaskDetails = () => {\r\n\r\n    //gets the params passed in from the router\r\n    //is a react hook\r\n    const { id } = useParams()\r\n    const { token } = useToken()\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [task, setTask] = useState(null)\r\n    const [showEditTask, setShowEditTask] = useState(false)\r\n    const [comments, setComments] = useState()\r\n    const showToast = useShowToast() \r\n    const history = useHistory();\r\n   \r\n    const coolColor = (i) => {\r\n        i = i > 3 ? i % 4 : i \r\n        switch(i) {\r\n          case 0:\r\n            return 'pink';\r\n          case 1:\r\n            return 'white';\r\n          case 2:\r\n            return 'orange';\r\n          case 3:\r\n              return 'green';\r\n          default:\r\n            return '';\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        //console.log(\"using effect: task details\")\r\n        // Fetch Task\r\n        //const fetchTask = FetchTask\r\n\r\n\r\n\r\n        const getTask = async () => {          \r\n            try {       \r\n                const taskFromServer = await FetchTask(id, token?.token)         \r\n                setTask(taskFromServer)\r\n                setComments(taskFromServer.comments)\r\n                //console.log(taskFromServer)\r\n                //setComments(taskFromServer.comments)\r\n                setIsLoading(false)\r\n            } catch (error) {\r\n                console.log(\"failed\") \r\n                console.log(error);\r\n            }   \r\n        }\r\n      \r\n        getTask()\r\n\r\n    }, []) \r\n\r\n    const onCancel = () => {\r\n        setShowEditTask(!showEditTask)\r\n    }\r\n\r\n\r\n\r\n    const update = async (task) => {\r\n        setIsLoading(true)\r\n        try {\r\n            task.userId = token?.id\r\n            setShowEditTask(!showEditTask)\r\n            const updTask = await UpdateTask(task, token?.token)\r\n            setTask(updTask)\r\n            setIsLoading(false)\r\n            showToast('success', `Updated \"${task.text}\"`)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div>    \r\n                    {!showEditTask && (\r\n                        <div className=\"taskDetail\">\r\n                            <h3>\r\n                                {task.text}\r\n                            </h3>\r\n                            <hr></hr>\r\n                            <p> \r\n                                Category: <span style={{color: task.color}}>{task.categoryName}</span>\r\n                            </p>\r\n                            <p>\r\n                                Location: {task.location}\r\n                            </p>\r\n                            {task?.day &&\r\n                                (<p>\r\n                                    Day: {FormatDateString(task.day)}\r\n                                </p>)\r\n                            }\r\n                            \r\n                            <p>\r\n                                Details: {task.details !== undefined ? task.details : \"None\"}\r\n                            </p>    \r\n                            { task.isCompleted && (\r\n                                <p>Completed On: {FormatDateString(task.dateCompleted)}</p>\r\n                            )}\r\n                            <Button\r\n                                color='green'\r\n                                text='← Back'\r\n                                onClick={history.goBack}\r\n                            />\r\n                            <Button                                \r\n                                text='Edit Task'\r\n                                onClick={() => setShowEditTask(!showEditTask)}\r\n                            />\r\n\r\n                            <Downloader task={task} token={token} />\r\n                            <CommentSection comments={comments} setComments={setComments} taskId={id} /> \r\n                                                    \r\n                        </div>\r\n                    )}                               \r\n\r\n                    {showEditTask && (\r\n                        <EditTask task={task} onUpdate={update} onCancel={onCancel} />\r\n                    )}        \r\n                </div>) : (\r\n                <div>\r\n                    <h1>Loading ...</h1>\r\n                </div>\r\n            )}           \r\n        </>        \r\n    )\r\n}\r\n\r\nexport default TaskDetails","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js",["266"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useToast } from './ToastContext'\r\n\r\nimport './Toast.css';\r\n//source:     transition: max-height 0.5s, opacity 0.5s;\r\nconst Toast = ({ position, autoDelete, dismissTime }) => {\r\n    const toastList = useToast()\r\n    const [list, setList] = useState(toastList)\r\n\r\n    //function sleep(ms) {\r\n    //    console.log('sleeping')\r\n    //    return new Promise(resolve => setTimeout(resolve, ms));\r\n    //  }\r\n\r\n    useEffect(() => {\r\n        //console.log('toastlist side effect')\r\n        //console.log(toastList)\r\n        setList([...toastList]);\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            if (autoDelete && toastList.length && list.length) {            \r\n                deleteToast(toastList[0].id);\r\n            }\r\n        }, dismissTime);\r\n\r\n        return async () => {                     \r\n            clearInterval(interval);\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList, autoDelete, dismissTime, list]);\r\n\r\n    const deleteToast = id => {\r\n        const listItemIndex = list.findIndex(e => e.id === id);\r\n        const toastListItem = toastList.findIndex(e => e.id === id);\r\n        list.splice(listItemIndex, 1);\r\n        toastList.splice(toastListItem, 1);\r\n        setList([...list]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`notification-container ${position}`}>\r\n                {\r\n                    list.map((toast, i) =>\r\n                        <div\r\n                            key={i}\r\n                            className={`notification toast ${('hidden' in toast) ? ('hidden') : ('show')} ${position}`}\r\n                            style={{ backgroundColor: toast.backgroundColor }}\r\n                        >\r\n                            <button onClick={() => deleteToast(toast.id)}>\r\n                                X\r\n                            </button>\r\n                            <div className=\"notification-image\">\r\n                                <img src={toast.icon} alt=\"\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"notification-title\">{toast.title}</p>\r\n                                <p className=\"notification-message\">\r\n                                    {toast.description}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    Toast.defaultProps = {\r\n        position: 'bottom-right'\r\n    }\r\n\r\n    Toast.propTypes = {\r\n        toastList: PropTypes.array.isRequired,\r\n        position: PropTypes.string,\r\n        autoDelete: PropTypes.bool,\r\n        autoDeleteTime: PropTypes.number\r\n    }\r\n}\r\n\r\nexport default Toast\r\n\r\n","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AppNavbar.js",["267"],"﻿import { Navbar, Nav } from 'react-bootstrap'\r\nimport { useToken } from './api-authorization/UserContext'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst AppNavbar = ({ onLogoutClick, alerts }) => {\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    const { token } = useToken()\r\n\r\n    useEffect(() => {\r\n        //console.log('nav bar render')\r\n\r\n        return () => {\r\n            //console.log('nav bar clean up')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //console.log('nav bar token use effect')\r\n\r\n        if (!token?.token) setIsExpanded(false)\r\n    }, [token])\r\n\r\n    const logoutAndCollapse = () => {\r\n        setIsExpanded(false)\r\n        onLogoutClick()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\" expanded={isExpanded} >\r\n                <Navbar.Brand>Task Tracker</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={() => setIsExpanded(isExpanded ? false : \"expanded\")} />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link as={NavLink} onClick={() => setIsExpanded(false)} to=\"/\" exact>Home</Nav.Link>\r\n                        <Nav.Link as={NavLink} onClick={() => setIsExpanded(false)} to=\"/about\" exact>About</Nav.Link>\r\n                        {token?.token ? (\r\n                            <>\r\n                                <Nav.Link as={NavLink} onClick={() => setIsExpanded(false)} to=\"/userManager\" exact>Manage Account</Nav.Link>\r\n                                <Nav.Link as={NavLink} onClick={() => setIsExpanded(false)} to=\"/categories\">Categories</Nav.Link>\r\n                                <Nav.Link as={NavLink} onClick={() => setIsExpanded(false)} to=\"/alerts\" exact>Alerts\r\n                                        {(alerts.length > 0) && (<span id='alertCounter'>{alerts.length}</span>)}\r\n                                </Nav.Link>\r\n                                <Nav.Link as={NavLink} onClick={logoutAndCollapse} to=\"/logout\" exact>Logout</Nav.Link>\r\n                            </>) : (<>\r\n                                <Nav.Link as={NavLink} onClick={() => setIsExpanded(false)} to=\"/login\" exact>Login</Nav.Link>\r\n                                <Nav.Link as={NavLink} onClick={() => setIsExpanded(false)} to=\"/register\" exact>Register</Nav.Link>\r\n                            </>)}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </>\r\n    )\r\n        \r\n    \r\n}\r\n\r\nexport default AppNavbar\r\n","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\Helpers.js",["268"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Button.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Login.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Intro.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\EditTask.js",["269"],"import { useState, useEffect } from 'react'\r\nimport Button from './Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useToken } from './api-authorization/UserContext'\r\nimport CategoryCrudOperations from './categories/CategoryCrudOperations'\r\n\r\nconst EditTask = ({task, onCancel, onUpdate }) => {\r\n    const [id, setId] = useState(task.id)\r\n    const [text, setText] = useState(task.text)\r\n    const [day, setDay] = useState(task?.day ? task?.day.split('.')[0] : null)\r\n    const [details, setDetails] = useState(task.details)\r\n    const [categories, setCategories] = useState([])\r\n    const [categoryId, setCategoryId] = useState(task.category)\r\n    const [location, setLocation] = useState(task.location)\r\n    const [reminder, setReminder] = useState(task.reminder)\r\n    const [isCompleted, setIsCompleted] = useState(task.isCompleted)\r\n    const [includeDay, setIncludeDay] = useState(task?.day)\r\n    const { token } = useToken()\r\n\r\n\r\n    useEffect(() => {\r\n      //console.log('task tracker use effect')\r\n      const getCategories = async () => {\r\n          try {\r\n              //console.log(CrudOperations)                               \r\n              //console.log(`token = ${token}`)\r\n              //console.log(`user = ${userId}`)\r\n              if (token !== undefined) {\r\n                  let catsFromServer = (await CategoryCrudOperations.getCategoriesByUser(token?.id, token?.token))  \r\n                  catsFromServer.unshift({name: 'Choose...', id:''})             \r\n                  console.log(catsFromServer)\r\n                  setCategories(catsFromServer)\r\n              }\r\n              \r\n          } catch (error) {\r\n              //showToast('error', error)\r\n          }\r\n      }\r\n\r\n      getCategories()\r\n\r\n\r\n  }, [])\r\n\r\n    const onSubmit = (e) => {\r\n        //e.preventDefault() is so it doesnt actually submit to the page\r\n        e.preventDefault()\r\n    \r\n        //filters if text is blank\r\n        if (!text) {\r\n          alert('Please add a task')\r\n          return\r\n        }\r\n    \r\n        if (includeDay && !day) {\r\n          alert('Please add a datetime')\r\n          return\r\n        }\r\n        let dayVal = includeDay ? day : null\r\n\r\n        onUpdate({ id, text, details, location, day: dayVal, reminder, isCompleted, categoryId }, token?.token)\r\n    \r\n        //clears the form\r\n        setId('')\r\n        setText('')\r\n        setDay('')\r\n        setLocation('')\r\n        setCategoryId('')\r\n        setDetails('')\r\n        setReminder(false)\r\n      }\r\n    \r\n    return (\r\n<Form onSubmit={onSubmit} className=\"taskName\">\r\n  <Form.Group>\r\n    <Form.Label>Task</Form.Label>\r\n    <Form.Control \r\n                type='text'\r\n                maxLength='30'\r\n                placeholder=''\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)} />\r\n  </Form.Group>\r\n\r\n  <Form.Group>\r\n    <Form.Label>Location: </Form.Label>\r\n    <Form.Control \r\n            type='text'\r\n            placeholder=''\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            />\r\n  </Form.Group>\r\n  <Form.Group>\r\n            <Form.Label>Category:</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={categoryId}\r\n              onChange={(e) => setCategoryId(e.target.value)}\r\n            >\r\n              {categories\r\n              .map((cat, index) => \r\n                <option key={index} value={cat.id}>{cat.name}</option>\r\n              )}\r\n              \r\n            </Form.Control>\r\n        </Form.Group>\r\n  <Form.Group>\r\n    <Form.Label>Details: </Form.Label>\r\n    <Form.Control \r\n            as=\"textarea\"\r\n            rows={3}\r\n            placeholder=''\r\n            value={details}\r\n            onChange={(e) => setDetails(e.target.value)}\r\n             />\r\n  </Form.Group>\r\n  \r\n  <Form.Group>\r\n          <Form.Check \r\n            type=\"checkbox\" \r\n            label=\"Set Due Date?\"\r\n            checked={includeDay}\r\n            onChange={(e) => setIncludeDay(e.currentTarget.checked)} \r\n          />\r\n  </Form.Group>\r\n  {includeDay && \r\n    <Form.Group>\r\n      <Form.Label>Day & Time: </Form.Label>\r\n        <Form.Control \r\n          type='datetime-local'\r\n          placeholder='Add Day & Time'\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n    </Form.Group>\r\n  }\r\n  <Form.Group>\r\n    <Form.Check \r\n    type=\"checkbox\" \r\n    label=\"Set Reminder\"\r\n    checked={reminder}\r\n            value={reminder}\r\n            onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n </Form.Group>\r\n <Form.Group>\r\n    <Form.Check \r\n    type=\"checkbox\" \r\n                    label=\"Completed?\"\r\n                    checked={isCompleted}\r\n                    value={isCompleted}\r\n            onChange={(e) => setIsCompleted(e.currentTarget.checked)} />\r\n  </Form.Group>\r\n  \r\n  <button\r\n      type='submit'\r\n      className='btn'\r\n      style={{ backgroundColor: 'skyblue' }}\r\n    >\r\n      Save Task\r\n  </button>\r\n  <Button\r\n            color='red'\r\n            text='Cancel'\r\n            onClick={onCancel}\r\n        />\r\n</Form>\r\n)\r\n    \r\n}\r\nexport default EditTask","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Register.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js",["270","271"],"﻿import CommentForm from \"./CommentForm\"\r\nimport Comments from \"./Comments\"\r\nimport { useState } from 'react'\r\n\r\n\r\nconst CommentSection = ({ comments, setComments, taskId }) => {\r\n    \r\n    return (\r\n        <div className='commentSection'>\r\n            {(comments?.length > 0) ? (\r\n                <Comments comments={comments} />\r\n            ) : (\r\n                    <></>\r\n                )}\r\n\r\n            <CommentForm taskId={taskId} comments={comments} setComments={setComments} />\r\n        </div>\r\n   )\r\n}\r\n\r\nexport default CommentSection","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTask.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js",["272"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Header.js",[],{"ruleId":"273","severity":1,"message":"274","line":1,"column":1,"nodeType":"275","messageId":"276","fix":"277"},{"ruleId":"278","severity":1,"message":"279","line":19,"column":5,"nodeType":"280","endLine":19,"endColumn":7,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":51,"column":13,"nodeType":"284","endLine":51,"endColumn":41},{"ruleId":"285","severity":1,"message":"286","line":51,"column":13,"nodeType":"284","endLine":51,"endColumn":41},{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","replacedBy":"290"},{"ruleId":"287","replacedBy":"291"},{"ruleId":"289","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":1,"column":8,"nodeType":"295","messageId":"296","endLine":1,"endColumn":13},{"ruleId":"293","severity":1,"message":"297","line":2,"column":10,"nodeType":"295","messageId":"296","endLine":2,"endColumn":18},{"ruleId":"287","replacedBy":"298"},{"ruleId":"289","replacedBy":"299"},{"ruleId":"293","severity":1,"message":"300","line":5,"column":8,"nodeType":"295","messageId":"296","endLine":5,"endColumn":19},{"ruleId":"287","replacedBy":"301"},{"ruleId":"289","replacedBy":"302"},{"ruleId":"278","severity":1,"message":"303","line":32,"column":8,"nodeType":"280","endLine":32,"endColumn":29,"suggestions":"304"},{"ruleId":"305","severity":1,"message":"306","line":31,"column":27,"nodeType":"307","messageId":"276","endLine":31,"endColumn":29},{"ruleId":"278","severity":1,"message":"308","line":45,"column":8,"nodeType":"280","endLine":45,"endColumn":10,"suggestions":"309"},{"ruleId":"293","severity":1,"message":"310","line":97,"column":13,"nodeType":"295","messageId":"296","endLine":97,"endColumn":16},{"ruleId":"293","severity":1,"message":"310","line":113,"column":13,"nodeType":"295","messageId":"296","endLine":113,"endColumn":16},{"ruleId":"273","severity":1,"message":"274","line":1,"column":1,"nodeType":"275","messageId":"276","fix":"311"},{"ruleId":"287","replacedBy":"312"},{"ruleId":"289","replacedBy":"313"},{"ruleId":"293","severity":1,"message":"314","line":5,"column":10,"nodeType":"295","messageId":"296","endLine":5,"endColumn":18},{"ruleId":"287","replacedBy":"315"},{"ruleId":"289","replacedBy":"316"},{"ruleId":"273","severity":1,"message":"274","line":1,"column":1,"nodeType":"275","messageId":"276","fix":"317"},{"ruleId":"273","severity":1,"message":"274","line":1,"column":1,"nodeType":"275","messageId":"276","fix":"318"},{"ruleId":"293","severity":1,"message":"319","line":9,"column":20,"nodeType":"295","messageId":"296","endLine":9,"endColumn":28},{"ruleId":"305","severity":1,"message":"306","line":21,"column":27,"nodeType":"307","messageId":"276","endLine":21,"endColumn":29},{"ruleId":"278","severity":1,"message":"320","line":34,"column":8,"nodeType":"280","endLine":34,"endColumn":10,"suggestions":"321"},{"ruleId":"287","replacedBy":"322"},{"ruleId":"289","replacedBy":"323"},{"ruleId":"293","severity":1,"message":"324","line":11,"column":12,"nodeType":"295","messageId":"296","endLine":11,"endColumn":22},{"ruleId":"293","severity":1,"message":"325","line":11,"column":24,"nodeType":"295","messageId":"296","endLine":11,"endColumn":37},{"ruleId":"278","severity":1,"message":"320","line":41,"column":8,"nodeType":"280","endLine":41,"endColumn":10,"suggestions":"326"},{"ruleId":"293","severity":1,"message":"327","line":51,"column":24,"nodeType":"295","messageId":"296","endLine":51,"endColumn":37},{"ruleId":"293","severity":1,"message":"328","line":52,"column":28,"nodeType":"295","messageId":"296","endLine":52,"endColumn":45},{"ruleId":"293","severity":1,"message":"329","line":59,"column":11,"nodeType":"295","messageId":"296","endLine":59,"endColumn":26},{"ruleId":"305","severity":1,"message":"306","line":126,"column":19,"nodeType":"307","messageId":"276","endLine":126,"endColumn":21},{"ruleId":"305","severity":1,"message":"306","line":159,"column":23,"nodeType":"307","messageId":"276","endLine":159,"endColumn":25},{"ruleId":"278","severity":1,"message":"330","line":165,"column":8,"nodeType":"280","endLine":165,"endColumn":15,"suggestions":"331"},{"ruleId":"273","severity":1,"message":"274","line":1,"column":1,"nodeType":"275","messageId":"276","fix":"332"},{"ruleId":"278","severity":1,"message":"333","line":61,"column":8,"nodeType":"280","endLine":61,"endColumn":10,"suggestions":"334"},{"ruleId":"278","severity":1,"message":"335","line":68,"column":8,"nodeType":"280","endLine":68,"endColumn":15,"suggestions":"336"},{"ruleId":"293","severity":1,"message":"337","line":4,"column":8,"nodeType":"295","messageId":"296","endLine":4,"endColumn":16},{"ruleId":"273","severity":1,"message":"274","line":1,"column":1,"nodeType":"275","messageId":"276","fix":"338"},{"ruleId":"305","severity":1,"message":"306","line":51,"column":27,"nodeType":"307","messageId":"276","endLine":51,"endColumn":29},{"ruleId":"278","severity":1,"message":"339","line":67,"column":8,"nodeType":"280","endLine":67,"endColumn":10,"suggestions":"340"},{"ruleId":"293","severity":1,"message":"341","line":104,"column":11,"nodeType":"295","messageId":"296","endLine":104,"endColumn":21},{"ruleId":"287","replacedBy":"342"},{"ruleId":"289","replacedBy":"343"},{"ruleId":"293","severity":1,"message":"344","line":27,"column":11,"nodeType":"295","messageId":"296","endLine":27,"endColumn":20},{"ruleId":"278","severity":1,"message":"345","line":66,"column":8,"nodeType":"280","endLine":66,"endColumn":10,"suggestions":"346"},{"ruleId":"347","severity":1,"message":"348","line":75,"column":5,"nodeType":"349","messageId":"350","endLine":84,"endColumn":6},{"ruleId":"273","severity":1,"message":"274","line":1,"column":1,"nodeType":"275","messageId":"276","fix":"351"},{"ruleId":"273","severity":1,"message":"274","line":1,"column":1,"nodeType":"275","messageId":"276","fix":"352"},{"ruleId":"278","severity":1,"message":"320","line":43,"column":6,"nodeType":"280","endLine":43,"endColumn":8,"suggestions":"353"},{"ruleId":"273","severity":1,"message":"274","line":1,"column":1,"nodeType":"275","messageId":"276","fix":"354"},{"ruleId":"293","severity":1,"message":"297","line":3,"column":10,"nodeType":"295","messageId":"296","endLine":3,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":1,"column":1,"nodeType":"275","messageId":"276","fix":"355"},"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"356","text":"357"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'exportTaskToiCal' and 'task.day'. Either include them or remove the dependency array.","ArrayExpression",["358"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["359"],"no-negated-in-lhs",["360"],["359"],["360"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["359"],["360"],"'warningIcon' is defined but never used.",["359"],["360"],"React Hook useCallback has an unnecessary dependency: 'pageNumber'. Either exclude it or remove the dependency array.",["361"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","React Hook useEffect has missing dependencies: 'onSave' and 'token'. Either include them or remove the dependency array.",["362"],"'res' is assigned a value but never used.",{"range":"363","text":"357"},["359"],["360"],"'useToken' is defined but never used.",["359"],["360"],{"range":"364","text":"357"},{"range":"365","text":"357"},"'setToken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["366"],["359"],["360"],"'showAddCat' is assigned a value but never used.","'setShowAddCat' is assigned a value but never used.",["367"],"'setCheckValue' is assigned a value but never used.","'setAutoDeleteTime' is assigned a value but never used.","'getConnectionId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'connection', 'setAlertsOnLogin', and 'showToast'. Either include them or remove the dependency array.",["368"],{"range":"369","text":"357"},"React Hook useEffect has missing dependencies: 'filterAndMap' and 'tasks'. Either include them or remove the dependency array. If 'setEvents' needs the current value of 'tasks', you can also switch to useReducer instead of useState and read 'tasks' in the reducer.",["370"],"React Hook useEffect has a missing dependency: 'filterAndMap'. Either include it or remove the dependency array.",["371"],"'Constant' is defined but never used.",{"range":"372","text":"357"},"React Hook useEffect has missing dependencies: 'showToast' and 'token'. Either include them or remove the dependency array.",["373"],"'updateTask' is assigned a value but never used.",["359"],["360"],"'coolColor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'token?.token'. Either include them or remove the dependency array.",["374"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode",{"range":"375","text":"357"},{"range":"376","text":"357"},["377"],{"range":"378","text":"357"},{"range":"379","text":"357"},[-1,0],"",{"desc":"380","fix":"381"},"no-global-assign","no-unsafe-negation",{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},[-1,0],[-1,0],[-1,0],{"desc":"386","fix":"387"},{"desc":"386","fix":"388"},{"desc":"389","fix":"390"},[-1,0],{"desc":"391","fix":"392"},{"desc":"391","fix":"393"},[-1,0],{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},[-1,0],[-1,0],{"desc":"386","fix":"398"},[-1,0],[-1,0],"Update the dependencies array to be: [exportTaskToiCal, task.day]",{"range":"399","text":"400"},"Update the dependencies array to be: [hasMore]",{"range":"401","text":"402"},"Update the dependencies array to be: [onSave, token]",{"range":"403","text":"404"},"Update the dependencies array to be: [token]",{"range":"405","text":"406"},{"range":"407","text":"406"},"Update the dependencies array to be: [connection, setAlertsOnLogin, showToast, token]",{"range":"408","text":"409"},"Update the dependencies array to be: [filterAndMap, tasks]",{"range":"410","text":"411"},{"range":"412","text":"411"},"Update the dependencies array to be: [showToast, token]",{"range":"413","text":"414"},"Update the dependencies array to be: [id, token?.token]",{"range":"415","text":"416"},{"range":"417","text":"406"},[531,533],"[exportTaskToiCal, task.day]",[1557,1578],"[hasMore]",[1531,1533],"[onSave, token]",[1130,1132],"[token]",[1411,1413],[5840,5847],"[connection, setAlertsOnLogin, showToast, token]",[2093,2095],"[filterAndMap, tasks]",[2184,2191],[2649,2651],"[showToast, token]",[2103,2105],"[id, token?.token]",[1751,1753]]