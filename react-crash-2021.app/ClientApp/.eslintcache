[{"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js":"1","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js":"2","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js":"3","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UseToken.js":"4","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js":"5","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js":"6","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js":"7","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js":"8","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js":"9","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js":"10","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js":"11","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js":"12","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js":"13","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js":"14","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js":"15","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js":"16","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js":"17","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js":"18","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js":"19","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Button.js":"20","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js":"21","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js":"22","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Login.js":"23","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js":"24","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js":"25","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js":"26","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Header.js":"27","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js":"28","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Register.js":"29","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\EditTask.js":"30","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTask.js":"31","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js":"32","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js":"33","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js":"34","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js":"35","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js":"36"},{"size":4776,"mtime":1615807259150,"results":"37","hashOfConfig":"38"},{"size":3839,"mtime":1615806202552,"results":"39","hashOfConfig":"38"},{"size":876,"mtime":1615756503277,"results":"40","hashOfConfig":"38"},{"size":1046,"mtime":1615746820766,"results":"41","hashOfConfig":"38"},{"size":280,"mtime":1614736916063,"results":"42","hashOfConfig":"38"},{"size":2966,"mtime":1615694824325,"results":"43","hashOfConfig":"38"},{"size":232,"mtime":1614736916073,"results":"44","hashOfConfig":"38"},{"size":699,"mtime":1615750050543,"results":"45","hashOfConfig":"38"},{"size":858,"mtime":1615775745386,"results":"46","hashOfConfig":"38"},{"size":2936,"mtime":1615694816246,"results":"47","hashOfConfig":"38"},{"size":1447,"mtime":1615694383203,"results":"48","hashOfConfig":"38"},{"size":4126,"mtime":1615807749433,"results":"49","hashOfConfig":"38"},{"size":351,"mtime":1615654121240,"results":"50","hashOfConfig":"38"},{"size":363,"mtime":1615689722022,"results":"51","hashOfConfig":"38"},{"size":7471,"mtime":1615774919384,"results":"52","hashOfConfig":"38"},{"size":7393,"mtime":1615938518718,"results":"53","hashOfConfig":"38"},{"size":375,"mtime":1614736916191,"results":"54","hashOfConfig":"38"},{"size":198,"mtime":1614736916166,"results":"55","hashOfConfig":"38"},{"size":281,"mtime":1614736916102,"results":"56","hashOfConfig":"38"},{"size":533,"mtime":1615654121045,"results":"57","hashOfConfig":"38"},{"size":235,"mtime":1615694758664,"results":"58","hashOfConfig":"38"},{"size":359,"mtime":1615654121229,"results":"59","hashOfConfig":"38"},{"size":3160,"mtime":1615776668580,"results":"60","hashOfConfig":"38"},{"size":1290,"mtime":1615937495555,"results":"61","hashOfConfig":"38"},{"size":371,"mtime":1615774943163,"results":"62","hashOfConfig":"38"},{"size":1968,"mtime":1615775052396,"results":"63","hashOfConfig":"38"},{"size":901,"mtime":1615685924828,"results":"64","hashOfConfig":"38"},{"size":1714,"mtime":1615751683309,"results":"65","hashOfConfig":"38"},{"size":3993,"mtime":1615936085390,"results":"66","hashOfConfig":"38"},{"size":3544,"mtime":1615807055764,"results":"67","hashOfConfig":"38"},{"size":338,"mtime":1615654121234,"results":"68","hashOfConfig":"38"},{"size":495,"mtime":1615654121222,"results":"69","hashOfConfig":"38"},{"size":533,"mtime":1615749523768,"results":"70","hashOfConfig":"38"},{"size":1706,"mtime":1615936368197,"results":"71","hashOfConfig":"38"},{"size":662,"mtime":1614736916137,"results":"72","hashOfConfig":"38"},{"size":926,"mtime":1615779071609,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ea2nox",{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"79"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js",["163"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js",["164","165","166"],"import Constant from '../Constant'\r\nimport CrudOperations from '../task-crud-operations/CrudOperations'\r\nimport Header from '../task-tracker/Header'\r\nimport AddTask from '../task-tracker/AddTask'\r\nimport Tasks from '../task-tracker/Tasks'\r\nimport { useState, useEffect } from 'react'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport { useToken, useUserId } from '../api-authorization/UserContext'\r\n\r\nconst TaskTracker = () => {\r\n        //showAddTask = current state\r\n    //setShowAddTask = function that aloows you to update the current state\r\n    //when you update state, the component rerenders\r\n    const { userId } = useUserId()\r\n    const { token } = useToken()\r\n    const [showAddTask, setShowAddTask] = useState(false)\r\n    const [tasks, setTasks] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const showToast = useShowToast()\r\n    \r\n   \r\n    useEffect(() => {\r\n        const getTasks = async () => {\r\n            try {\r\n                //console.log(CrudOperations)                               \r\n                //console.log(`token = ${token}`)\r\n                //console.log(`user = ${userId}`)\r\n                if (userId != undefined) {\r\n                    const tasksFromServer = await CrudOperations.FetchTasks(userId, token)\r\n                    setIsLoading(false)\r\n                    setTasks(tasksFromServer)\r\n                }\r\n                \r\n            } catch (error) {\r\n                showToast('error', error)\r\n            }\r\n        }\r\n\r\n        getTasks()\r\n\r\n        return function cleanup() {\r\n            setTasks([])\r\n        }\r\n    }, [token, userId])\r\n\r\n    const onDelete = async (id) => {\r\n        await CrudOperations.DeleteTask(id, token)\r\n        //.filter removes the task with the same id as the id passed up\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n\r\n    // Toggle Reminder\r\n    //takes id so it knows which on to toggle\r\n    const toggleReminder = async (taskToToggle) => {\r\n        try {\r\n            //const taskToToggle = await CrudOperations.FetchTask(id, token)\r\n            const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n            //console.log(updTask)\r\n            const res = await fetch(`${Constant()}/api/tasks/${taskToToggle.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                },\r\n                body: JSON.stringify(updTask)\r\n            })\r\n\r\n            const data = await res.json()\r\n\r\n            setTasks(\r\n                tasks.map((task) =>\r\n                    task.id === taskToToggle.id ? { ...task, reminder: data.reminder } : task\r\n                )\r\n            )\r\n        } catch (error) {\r\n            showToast('error', 'error')\r\n        }\r\n\r\n    }\r\n\r\n    const updateTask = async (task) => {\r\n        console.log(task)\r\n        setTasks(\r\n            tasks.map((oldTask) => task.id === oldTask.id ? task : oldTask)\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                onAdd={() => setShowAddTask(!showAddTask)}\r\n                showAdd={showAddTask} />\r\n            <AddTask isToggled={showAddTask}\r\n                userId={userId} token={token}\r\n                tasks={tasks} setTasks={setTasks}\r\n                setShowAddTask={setShowAddTask} />\r\n            {!isLoading ? (\r\n                (tasks.length > 0) ? (\r\n                    <Tasks\r\n                        tasks={tasks}\r\n                        onDelete={onDelete}\r\n                        onToggle={toggleReminder}\r\n                        onGoToDetail={() => { setShowAddTask(false) }} />) :\r\n                    ('No Tasks To Show')\r\n            ) : ('Loading ...')}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskTracker",["167","168"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UseToken.js",[],["169","170"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js",[],["171","172"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js",["173"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js",["174"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useToast } from './ToastContext'\r\n\r\nimport './Toast.css';\r\n//source:     transition: max-height 0.5s, opacity 0.5s;\r\nconst Toast = ({ position, autoDelete, dismissTime }) => {\r\n    const toastList = useToast()\r\n    const [list, setList] = useState(toastList)\r\n\r\n    //function sleep(ms) {\r\n    //    console.log('sleeping')\r\n    //    return new Promise(resolve => setTimeout(resolve, ms));\r\n    //  }\r\n\r\n    useEffect(() => {\r\n        //console.log('toastlist side effect')\r\n        //console.log(toastList)\r\n        setList([...toastList]);\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            if (autoDelete && toastList.length && list.length) {            \r\n                deleteToast(toastList[0].id);\r\n            }\r\n        }, dismissTime);\r\n\r\n        return async () => {                     \r\n            clearInterval(interval);\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList, autoDelete, dismissTime, list]);\r\n\r\n    const deleteToast = id => {\r\n        const listItemIndex = list.findIndex(e => e.id === id);\r\n        const toastListItem = toastList.findIndex(e => e.id === id);\r\n        list.splice(listItemIndex, 1);\r\n        toastList.splice(toastListItem, 1);\r\n        setList([...list]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`notification-container ${position}`}>\r\n                {\r\n                    list.map((toast, i) =>\r\n                        <div\r\n                            key={i}\r\n                            className={`notification toast ${('hidden' in toast) ? ('hidden') : ('show')} ${position}`}\r\n                            style={{ backgroundColor: toast.backgroundColor }}\r\n                        >\r\n                            <button onClick={() => deleteToast(toast.id)}>\r\n                                X\r\n                            </button>\r\n                            <div className=\"notification-image\">\r\n                                <img src={toast.icon} alt=\"\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"notification-title\">{toast.title}</p>\r\n                                <p className=\"notification-message\">\r\n                                    {toast.description}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    Toast.defaultProps = {\r\n        position: 'bottom-right'\r\n    }\r\n\r\n    Toast.propTypes = {\r\n        toastList: PropTypes.array.isRequired,\r\n        position: PropTypes.string,\r\n        autoDelete: PropTypes.bool,\r\n        autoDeleteTime: PropTypes.number\r\n    }\r\n}\r\n\r\nexport default Toast\r\n\r\n","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js",[],["175","176"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js",["177","178","179","180","181"],"import { useParams } from 'react-router-dom'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport Button from './Button'\r\nimport EditTask from './EditTask'\r\nimport FormatDateString from './FormatDateString'\r\nimport FetchTask from './task-crud-operations/FetchTask'\r\nimport UpdateTask from './task-crud-operations/UpdateTask'\r\nimport CommentSection from './comment-components/CommentSection'\r\nimport { useShowToast } from './toast/ToastContext'\r\nimport { useToken, useUserId } from './api-authorization/UserContext'\r\n\r\nconst TaskDetails = () => {\r\n\r\n    //gets the params passed in from the router\r\n    //is a react hook\r\n    const { id } = useParams()\r\n    const { token, setToken } = useToken()\r\n    const { userId, setUserId } = useUserId()\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [task, setTask] = useState(null)\r\n    const [showEditTask, setShowEditTask] = useState(false)\r\n    const [comments, setComments] = useState()\r\n    const showToast = useShowToast() \r\n\r\n    useEffect(() => {\r\n        //console.log(\"using effect: task details\")\r\n        // Fetch Task\r\n        const fetchTask = FetchTask\r\n\r\n        const getTask = async () => {          \r\n            try {       \r\n                const taskFromServer = await fetchTask(id, token)         \r\n                setTask(taskFromServer)\r\n                //console.log(taskFromServer)\r\n                setComments(taskFromServer.comments)\r\n                setIsLoading(false)\r\n            } catch (error) {\r\n                console.log(\"failed\") \r\n                console.log(error);\r\n            }   \r\n        }\r\n      \r\n        getTask()\r\n\r\n    }, []) \r\n\r\n    const onCancel = () => {\r\n        setShowEditTask(!showEditTask)\r\n    }\r\n\r\n    const update = async (task) => {\r\n        setIsLoading(true)\r\n        try {\r\n            task.userId = userId\r\n            setShowEditTask(!showEditTask)\r\n            const updTask = await UpdateTask(task, token)\r\n            setTask(updTask)\r\n            setIsLoading(false)\r\n            showToast('success', `Updated \"${task.text}\"`)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div>    \r\n                    {!showEditTask && (\r\n                        <div className=\"taskDetail\">\r\n                            <h3>\r\n                                {task.text}\r\n                            </h3>\r\n                            <hr></hr>\r\n                            <p>\r\n                                Category: {task.category}\r\n                            </p>\r\n                            <p>\r\n                                Location: {task.location}\r\n                            </p>\r\n                            <p>\r\n                                Day: {FormatDateString(task.day)}\r\n                            </p>\r\n                            <p>\r\n                                Details: {task.details !== undefined ? task.details : \"None\"}\r\n                            </p>    \r\n                            { task.isCompleted && (\r\n                                <p>Completed On: {FormatDateString(task.dateCompleted)}</p>\r\n                            )}\r\n                            <Button\r\n                                color='green'\r\n                                text='Edit Task'\r\n                                onClick={() => setShowEditTask(!showEditTask)}\r\n                            />\r\n                            {(comments != undefined) && (\r\n                                <CommentSection comments={comments} taskId={id} /> \r\n                            )}                         \r\n                        </div>\r\n                    )}                               \r\n\r\n                    {showEditTask && (\r\n                        <EditTask task={task} onUpdate={update} onCancel={onCancel} token={token}/>\r\n                    )}        \r\n                </div>) : (\r\n                <div>\r\n                    <h1>Loading ...</h1>\r\n                </div>\r\n            )}           \r\n        </>        \r\n    )\r\n}\r\n\r\nexport default TaskDetails","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js",["182"],"﻿import Constant from '../Constant'\r\n\r\nconst FetchTasks = async (id, token) => {\r\n    const res = await fetch(Constant() + `/api/Users/${id}/tasks`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    })\r\n    const data = await res.json()\r\n\r\n    return data\r\n}\r\n\r\nexport default FetchTasks\r\n",["183","184"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js",["185"],"﻿import CreateTask from './CreateTask'\r\nimport DeleteTask from './DeleteTask'\r\nimport FetchTask from './FetchTask'\r\nimport FetchTasks from './FetchTasks'\r\nimport UpdateTask from './UpdateTask'\r\n\r\nconst CrudOperations = {\r\n        CreateTask,\r\n        DeleteTask,\r\n        FetchTask,\r\n        FetchTasks,\r\n        UpdateTask\r\n}\r\n\r\n\r\nexport default CrudOperations",["186","187"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js",["188","189","190","191"],"import { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, NavLink, Redirect } from 'react-router-dom'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\n//for authorization\r\n//import authService from './api-authorization/AuthorizeService'\r\nimport Footer from './components/Footer'\r\nimport Constant from './components/Constant'\r\nimport AlertCenter from './components/AlertCenter'\r\nimport About from './components/About'\r\nimport UserManager from './components/api-authorization/UserManager'\r\nimport RegisterAndLoginRoutes from './components/api-authorization/RegisterAndLoginRoutes'\r\nimport Logout from './components/api-authorization/Logout'\r\nimport Toast from './components/toast/Toast'\r\nimport { ToastProvider, useShowToast } from './components/toast/ToastContext'\r\nimport TaskDetails from './components/TaskDetails'\r\nimport TaskTracker from './components/task-tracker/TaskTracker'\r\nimport { useToken, useUserId } from './components/api-authorization/UserContext'\r\n\r\n//import UpdateTask from './components/UpdateTask'\r\n//function setToken(userToken) {\r\n//    sessionStorage.setItem('token', JSON.stringify(userToken));\r\n\r\n//}\r\n\r\n//function getToken() {\r\n\r\n//    const tokenString = sessionStorage.getItem('token');\r\n//    const userToken = JSON.parse(tokenString);\r\n//    //.? is the optional chain operator: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\r\n//    /*\r\n//     You need to use the optional chaining operator�?.�when accessing the token property because when you \r\n//     first access the application, the value of sessionStorage.getItem('token') will \r\n//     be undefined. If you try to access a property, you will generate an error.\r\n//     */\r\n//    return userToken?.token\r\n//}\r\n//import header and use it like an xml tag\r\n//keeps tasks at the highest level (state)\r\n//changes the state of tasks\r\n//calls fetch tasks whihc returns a promise\r\n//sets tasks as the state\r\nconst App = () => {\r\n    \r\n    const { userId, setUserId } = useUserId()\r\n    const { token, setToken } = useToken()\r\n    const [alerts, setAlerts] = useState([])\r\n    const [checkValue, setCheckValue] = useState(true)\r\n    const [autoDeleteTime, setAutoDeleteTime] = useState(5000)\r\n\r\n    const showToast = useShowToast()\r\n\r\n    const removeToken = () => {\r\n        localStorage.removeItem('token');\r\n        setToken(null)\r\n        setUserId(null)\r\n    }\r\n\r\n\r\n    function handleLogoutClick(e) {\r\n        e.preventDefault()       \r\n        removeToken()\r\n    }\r\n\r\n    // Fetch Tasks\r\n    //gets the tasks we have on the server with async java\r\n    useEffect(() => {\r\n     \r\n\r\n        const fetchAlerts = async (id) => {\r\n            const res = await fetch(Constant() + `/api/Users/${id}/alerts`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token\r\n                }\r\n            })\r\n\r\n            const data = await res.json()\r\n\r\n            return data\r\n        }\r\n\r\n        const getAlerts = async () => {\r\n            try {\r\n                const tasksFromServer = await fetchAlerts(userId)\r\n                setAlerts(tasksFromServer)\r\n            } catch (error) {\r\n                showToast('error', error)\r\n            }\r\n        }\r\n\r\n        if (userId != undefined) {\r\n            //console.log(userId)\r\n            getAlerts()\r\n        }\r\n   \r\n\r\n    }, [token, userId])\r\n\r\n    //if there are no tasks, it shows  'No Tasks To Show'\r\n    //short ternary in jsx:\r\n    // {x === y ? (<Thing />) : ('String')}\r\n    //wrap everything in <Router> to use routes\r\n    //exact menas match path exactly\r\n    return (\r\n        \r\n        <Router>        \r\n                <ToastProvider>\r\n                    <div id=\"backdrop\">\r\n\r\n                    </div>\r\n                    <Navbar bg=\"light\" expand=\"lg\">\r\n                        <Navbar.Brand>Task Tracker</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                                <Nav.Link as={NavLink} to=\"/\" exact>Home</Nav.Link>\r\n                                <Nav.Link as={NavLink} to=\"/about\" exact>About</Nav.Link>\r\n                                {token ? (\r\n                                    <>\r\n                                        <Nav.Link as={NavLink} to=\"/userManager\" exact>Manage Account</Nav.Link>\r\n                                        <Nav.Link as={NavLink} to=\"/alerts\" exact>Alerts\r\n                                        {(alerts.length > 0) ? (<span id='alertCounter'>{alerts.length}</span>) : (<></>)}\r\n                                        </Nav.Link>\r\n                                        <Nav.Link as={NavLink} to=\"/logout\" exact onClick={handleLogoutClick}>Logout</Nav.Link>\r\n                                    </>) : (<>\r\n                                        <Nav.Link as={NavLink} to=\"/login\" exact>Login</Nav.Link>\r\n                                        <Nav.Link as={NavLink} to=\"/register\" exact>Register</Nav.Link>\r\n                                    </>)}\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n\r\n                    <div className='container'>\r\n                        <Toast\r\n                            position=\"bottom-right\"\r\n                            autoDelete={checkValue}\r\n                            dismissTime={autoDeleteTime}\r\n                        />\r\n                        <Route path='/about' exact component={About} />\r\n                        <Route path='/logout' exact component={Logout} />\r\n                        {token ? (\r\n                            <>\r\n                                <Route path='/alerts' exact\r\n                                    render={(props) => (\r\n                                        <AlertCenter alerts={alerts} setAlerts={setAlerts} />\r\n                                    )}\r\n                                />\r\n                                <Redirect from='/login' to=\"/\" />\r\n                                <Route path='/userManager' exact\r\n                                    render={(props) => (\r\n                                        <UserManager handleLogout={handleLogoutClick} token={token} id={userId} />\r\n                                    )}\r\n                                />\r\n                                <Route path='/' exact\r\n                                    render={(props) => (\r\n                                        <>\r\n                                            <TaskTracker />\r\n                                        </>\r\n\r\n                                    )} />\r\n\r\n                                <Route path='/task/:id' exact\r\n                                    render={(props) => (\r\n                                        <TaskDetails/>\r\n                                    )}\r\n                                />\r\n                                <Footer isLoggedIn={token} />\r\n                            </>\r\n                        ) : (\r\n                                <>\r\n                                    <RegisterAndLoginRoutes setToken={setToken} token={token} />\r\n                                </>\r\n\r\n                            )}\r\n                    </div>\r\n\r\n                </ToastProvider>\r\n        </Router>\r\n            \r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n",["192","193"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js",["194","195","196","197","198","199"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Button.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js",["200"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Login.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js",["201","202"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Header.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js",["203","204"],"import { useState } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport { useToken, useUserId } from '../api-authorization/UserContext'\r\n\r\nconst CommentForm = ({ taskId }) => {\r\n    const [text, setText] = useState('')\r\n    const { token, setToken } = useToken\r\n    const { userId, setUserId } = useUserId\r\n\r\n    const onSubmit = async (e) => {\r\n        //e.preventDefault() is so it doesnt actually submit to the page\r\n        e.preventDefault()\r\n        setText('')\r\n        await fetch(Constant() + '/api/comments', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            body: JSON.stringify({ userId, taskId, text })\r\n        })\r\n            .then(data => data.json())\r\n            .catch((error) => {\r\n                console.error('Fetch Error:', error);\r\n            })\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='commentForm'>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Group>\r\n                    <Form.Control\r\n                        type='text'\r\n                        maxLength='200'\r\n                        placeholder='Add Reply'\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-block'\r\n                    style={{ backgroundColor: 'skyblue' }}\r\n                >\r\n                    Reply\r\n                </button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentForm","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Register.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\EditTask.js",["205"],"import { useState } from 'react'\r\nimport Button from './Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useToken } from './api-authorization/UserContext'\r\n\r\nconst EditTask = ({task, onCancel, onUpdate }) => {\r\n    const [id, setId] = useState(task.id)\r\n    const [text, setText] = useState(task.text)\r\n    const [day, setDay] = useState(task.day)\r\n    const [details, setDetails] = useState(task.details)\r\n    const [category, setCategory] = useState(task.category)\r\n    const [location, setLocation] = useState(task.location)\r\n    const [reminder, setReminder] = useState(task.reminder)\r\n    const [isCompleted, setIsCompleted] = useState(task.isCompleted)\r\n    const { token, setToken } = useToken()\r\n\r\n    const onSubmit = (e) => {\r\n        //e.preventDefault() is so it doesnt actually submit to the page\r\n        e.preventDefault()\r\n    \r\n        //filters if text is blank\r\n        if (!text) {\r\n          alert('Please add a task')\r\n          return\r\n        }\r\n    \r\n        if (!day) {\r\n            alert('Please add a datetime')\r\n            return\r\n        }\r\n\r\n        onUpdate({ id, text, details, location, day, reminder, isCompleted, category }, token)\r\n    \r\n        //clears the form\r\n        setId('')\r\n        setText('')\r\n        setDay('')\r\n        setLocation('')\r\n        setCategory('')\r\n        setDetails('')\r\n        setReminder(false)\r\n      }\r\n    \r\n    return (\r\n<Form onSubmit={onSubmit} className=\"taskName\">\r\n  <Form.Group>\r\n    <Form.Label>Task</Form.Label>\r\n    <Form.Control \r\n                type='text'\r\n                maxLength='30'\r\n                placeholder=''\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)} />\r\n  </Form.Group>\r\n\r\n  <Form.Group>\r\n    <Form.Label>Location: </Form.Label>\r\n    <Form.Control \r\n            type='text'\r\n            placeholder=''\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            />\r\n  </Form.Group>\r\n  <Form.Group>\r\n    <Form.Label>Category: </Form.Label>\r\n    <Form.Control \r\n            type='text'\r\n            placeholder=''\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n            />\r\n  </Form.Group>\r\n  <Form.Group>\r\n    <Form.Label>Details: </Form.Label>\r\n    <Form.Control \r\n            as=\"textarea\"\r\n            rows={3}\r\n            placeholder=''\r\n            value={details}\r\n            onChange={(e) => setDetails(e.target.value)}\r\n             />\r\n  </Form.Group>\r\n  <Form.Group>\r\n    <Form.Label>Day & Time</Form.Label>\r\n    <Form.Control \r\n            type='datetime-local'\r\n            placeholder='Add Day & Time'\r\n            value={day}\r\n            onChange={(e) => setDay(e.target.value)}/>\r\n  </Form.Group>\r\n  <Form.Group>\r\n    <Form.Check \r\n    type=\"checkbox\" \r\n    label=\"Set Reminder\"\r\n    checked={reminder}\r\n            value={reminder}\r\n            onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n </Form.Group>\r\n <Form.Group>\r\n    <Form.Check \r\n    type=\"checkbox\" \r\n                    label=\"Completed?\"\r\n                    checked={isCompleted}\r\n                    value={isCompleted}\r\n            onChange={(e) => setIsCompleted(e.currentTarget.checked)} />\r\n  </Form.Group>\r\n  \r\n  <button\r\n      type='submit'\r\n      className='btn'\r\n      style={{ backgroundColor: 'skyblue' }}\r\n    >\r\n      Save Task\r\n  </button>\r\n  <Button\r\n            color='red'\r\n            text='Cancel'\r\n            onClick={onCancel}\r\n        />\r\n</Form>\r\n)\r\n    \r\n}\r\nexport default EditTask","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTask.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js",["206"],"﻿import Constant from '../Constant'\r\n\r\nconst CreateTask = async (task, token) => {\r\n\r\n\r\n    return fetch(Constant() + '/api/tasks', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n        body: JSON.stringify(task)\r\n    })\r\n        .then(data => data.json())\r\n        .catch((error) => {\r\n            console.error('Fetch Error:', error);\r\n        })\r\n}\r\n\r\n\r\nexport default CreateTask",["207","208"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js",["209","210","211"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js",[],{"ruleId":"212","severity":1,"message":"213","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":16},{"ruleId":"216","severity":1,"message":"217","line":28,"column":28,"nodeType":"218","messageId":"219","endLine":28,"endColumn":30},{"ruleId":"220","severity":1,"message":"221","line":44,"column":8,"nodeType":"222","endLine":44,"endColumn":23,"suggestions":"223"},{"ruleId":"212","severity":1,"message":"224","line":81,"column":11,"nodeType":"214","messageId":"215","endLine":81,"endColumn":21},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"225","replacedBy":"229"},{"ruleId":"227","replacedBy":"230"},{"ruleId":"225","replacedBy":"231"},{"ruleId":"227","replacedBy":"232"},{"ruleId":"212","severity":1,"message":"233","line":5,"column":8,"nodeType":"214","messageId":"215","endLine":5,"endColumn":19},{"ruleId":"234","severity":1,"message":"235","line":75,"column":5,"nodeType":"236","messageId":"237","endLine":84,"endColumn":6},{"ruleId":"225","replacedBy":"238"},{"ruleId":"227","replacedBy":"239"},{"ruleId":"212","severity":1,"message":"240","line":2,"column":31,"nodeType":"214","messageId":"215","endLine":2,"endColumn":41},{"ruleId":"212","severity":1,"message":"241","line":17,"column":20,"nodeType":"214","messageId":"215","endLine":17,"endColumn":28},{"ruleId":"212","severity":1,"message":"242","line":18,"column":21,"nodeType":"214","messageId":"215","endLine":18,"endColumn":30},{"ruleId":"220","severity":1,"message":"243","line":45,"column":8,"nodeType":"222","endLine":45,"endColumn":10,"suggestions":"244"},{"ruleId":"216","severity":1,"message":"217","line":95,"column":40,"nodeType":"218","messageId":"219","endLine":95,"endColumn":42},{"ruleId":"245","severity":1,"message":"246","line":1,"column":1,"nodeType":"247","messageId":"219","fix":"248"},{"ruleId":"225","replacedBy":"249"},{"ruleId":"227","replacedBy":"250"},{"ruleId":"245","severity":1,"message":"246","line":1,"column":1,"nodeType":"247","messageId":"219","fix":"251"},{"ruleId":"225","replacedBy":"252"},{"ruleId":"227","replacedBy":"253"},{"ruleId":"212","severity":1,"message":"254","line":47,"column":24,"nodeType":"214","messageId":"215","endLine":47,"endColumn":37},{"ruleId":"212","severity":1,"message":"255","line":48,"column":28,"nodeType":"214","messageId":"215","endLine":48,"endColumn":45},{"ruleId":"216","severity":1,"message":"217","line":91,"column":20,"nodeType":"218","messageId":"219","endLine":91,"endColumn":22},{"ruleId":"220","severity":1,"message":"221","line":97,"column":8,"nodeType":"222","endLine":97,"endColumn":23,"suggestions":"256"},{"ruleId":"225","replacedBy":"257"},{"ruleId":"227","replacedBy":"258"},{"ruleId":"212","severity":1,"message":"241","line":16,"column":20,"nodeType":"214","messageId":"215","endLine":16,"endColumn":28},{"ruleId":"212","severity":1,"message":"242","line":17,"column":21,"nodeType":"214","messageId":"215","endLine":17,"endColumn":30},{"ruleId":"216","severity":1,"message":"217","line":26,"column":28,"nodeType":"218","messageId":"219","endLine":26,"endColumn":30},{"ruleId":"220","severity":1,"message":"259","line":39,"column":8,"nodeType":"222","endLine":39,"endColumn":10,"suggestions":"260"},{"ruleId":"212","severity":1,"message":"261","line":91,"column":13,"nodeType":"214","messageId":"215","endLine":91,"endColumn":16},{"ruleId":"212","severity":1,"message":"261","line":107,"column":13,"nodeType":"214","messageId":"215","endLine":107,"endColumn":16},{"ruleId":"245","severity":1,"message":"246","line":1,"column":1,"nodeType":"247","messageId":"219","fix":"262"},{"ruleId":"212","severity":1,"message":"263","line":1,"column":8,"nodeType":"214","messageId":"215","endLine":1,"endColumn":13},{"ruleId":"212","severity":1,"message":"264","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":18},{"ruleId":"212","severity":1,"message":"241","line":8,"column":20,"nodeType":"214","messageId":"215","endLine":8,"endColumn":28},{"ruleId":"212","severity":1,"message":"242","line":9,"column":21,"nodeType":"214","messageId":"215","endLine":9,"endColumn":30},{"ruleId":"212","severity":1,"message":"241","line":15,"column":20,"nodeType":"214","messageId":"215","endLine":15,"endColumn":28},{"ruleId":"245","severity":1,"message":"246","line":1,"column":1,"nodeType":"247","messageId":"219","fix":"265"},{"ruleId":"225","replacedBy":"266"},{"ruleId":"227","replacedBy":"267"},{"ruleId":"245","severity":1,"message":"246","line":1,"column":1,"nodeType":"247","messageId":"219","fix":"268"},{"ruleId":"212","severity":1,"message":"264","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":18},{"ruleId":"212","severity":1,"message":"269","line":3,"column":20,"nodeType":"214","messageId":"215","endLine":3,"endColumn":29},"no-unused-vars","'Constant' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'showToast'. Either include it or remove the dependency array.","ArrayExpression",["270"],"'updateTask' is assigned a value but never used.","no-native-reassign",["271"],"no-negated-in-lhs",["272"],["271"],["272"],["271"],["272"],"'warningIcon' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode",["271"],["272"],"'useContext' is defined but never used.","'setToken' is assigned a value but never used.","'setUserId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.",["273"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"274","text":"275"},["271"],["272"],{"range":"276","text":"275"},["271"],["272"],"'setCheckValue' is assigned a value but never used.","'setAutoDeleteTime' is assigned a value but never used.",["277"],["271"],["272"],"React Hook useEffect has missing dependencies: 'onSave', 'token', and 'userId'. Either include them or remove the dependency array.",["278"],"'res' is assigned a value but never used.",{"range":"279","text":"275"},"'Table' is defined but never used.","'useState' is defined but never used.",{"range":"280","text":"275"},["271"],["272"],{"range":"281","text":"275"},"'useEffect' is defined but never used.",{"desc":"282","fix":"283"},"no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},[-1,0],"",[-1,0],{"desc":"282","fix":"286"},{"desc":"287","fix":"288"},[-1,0],[-1,0],[-1,0],"Update the dependencies array to be: [showToast, token, userId]",{"range":"289","text":"290"},"Update the dependencies array to be: [id, token]",{"range":"291","text":"292"},{"range":"293","text":"290"},"Update the dependencies array to be: [onSave, token, userId]",{"range":"294","text":"295"},[1616,1631],"[showToast, token, userId]",[1646,1648],"[id, token]",[3391,3406],[1507,1509],"[onSave, token, userId]"]