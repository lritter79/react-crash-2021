[{"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js":"1","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js":"2","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js":"3","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js":"4","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js":"5","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js":"6","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js":"7","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js":"8","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js":"9","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js":"10","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js":"11","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js":"12","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js":"13","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js":"14","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js":"15","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js":"16","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js":"17","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js":"18","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js":"19","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js":"20","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js":"21","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js":"22","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js":"23","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js":"24","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js":"25","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Header.js":"26","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js":"27","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js":"28","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTask.js":"29","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js":"30","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js":"31","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\EditTask.js":"32","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Register.js":"33","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Login.js":"34","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Intro.js":"35","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Button.js":"36"},{"size":4094,"mtime":1616649163516,"results":"37","hashOfConfig":"38"},{"size":942,"mtime":1616537402522,"results":"39","hashOfConfig":"38"},{"size":1019,"mtime":1616645813376,"results":"40","hashOfConfig":"38"},{"size":280,"mtime":1614736916063,"results":"41","hashOfConfig":"38"},{"size":699,"mtime":1616002415575,"results":"42","hashOfConfig":"38"},{"size":7475,"mtime":1616701038107,"results":"43","hashOfConfig":"38"},{"size":198,"mtime":1614736916166,"results":"44","hashOfConfig":"38"},{"size":2936,"mtime":1616002415445,"results":"45","hashOfConfig":"38"},{"size":232,"mtime":1614736916073,"results":"46","hashOfConfig":"38"},{"size":1104,"mtime":1616698376275,"results":"47","hashOfConfig":"38"},{"size":9413,"mtime":1616698381081,"results":"48","hashOfConfig":"38"},{"size":1517,"mtime":1616070609700,"results":"49","hashOfConfig":"38"},{"size":2966,"mtime":1616002415447,"results":"50","hashOfConfig":"38"},{"size":3798,"mtime":1616647790012,"results":"51","hashOfConfig":"38"},{"size":290,"mtime":1616675435842,"results":"52","hashOfConfig":"38"},{"size":1702,"mtime":1616699496842,"results":"53","hashOfConfig":"38"},{"size":1465,"mtime":1616452861122,"results":"54","hashOfConfig":"38"},{"size":359,"mtime":1615654121229,"results":"55","hashOfConfig":"38"},{"size":535,"mtime":1616698341010,"results":"56","hashOfConfig":"38"},{"size":351,"mtime":1615654121240,"results":"57","hashOfConfig":"38"},{"size":375,"mtime":1614736916191,"results":"58","hashOfConfig":"38"},{"size":235,"mtime":1616002415422,"results":"59","hashOfConfig":"38"},{"size":1678,"mtime":1616644080084,"results":"60","hashOfConfig":"38"},{"size":371,"mtime":1616002415429,"results":"61","hashOfConfig":"38"},{"size":1706,"mtime":1616002415555,"results":"62","hashOfConfig":"38"},{"size":901,"mtime":1616002415561,"results":"63","hashOfConfig":"38"},{"size":363,"mtime":1616002415431,"results":"64","hashOfConfig":"38"},{"size":531,"mtime":1616698380786,"results":"65","hashOfConfig":"38"},{"size":338,"mtime":1615654121234,"results":"66","hashOfConfig":"38"},{"size":4876,"mtime":1616648901102,"results":"67","hashOfConfig":"38"},{"size":926,"mtime":1616002415433,"results":"68","hashOfConfig":"38"},{"size":3544,"mtime":1616002415405,"results":"69","hashOfConfig":"38"},{"size":3905,"mtime":1616645275532,"results":"70","hashOfConfig":"38"},{"size":3082,"mtime":1616643532702,"results":"71","hashOfConfig":"38"},{"size":378,"mtime":1615654121064,"results":"72","hashOfConfig":"38"},{"size":533,"mtime":1615654121045,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"ea2nox",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"102"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"120","usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"125","usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"143","usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js",["165","166","167"],"import { useParams } from 'react-router-dom'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport Button from './Button'\r\nimport EditTask from './EditTask'\r\nimport FormatDateString from './FormatDateString'\r\nimport FetchTask from './task-crud-operations/FetchTask'\r\nimport UpdateTask from './task-crud-operations/UpdateTask'\r\nimport CommentSection from './comment-components/CommentSection'\r\nimport { useShowToast } from './toast/ToastContext'\r\nimport { useToken } from './api-authorization/UserContext'\r\n\r\nconst TaskDetails = () => {\r\n\r\n    //gets the params passed in from the router\r\n    //is a react hook\r\n    const { id } = useParams()\r\n    const { token } = useToken()\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [task, setTask] = useState(null)\r\n    const [showEditTask, setShowEditTask] = useState(false)\r\n    const [comments, setComments] = useState()\r\n    const showToast = useShowToast() \r\n   \r\n\r\n    useEffect(() => {\r\n        //console.log(\"using effect: task details\")\r\n        // Fetch Task\r\n        const fetchTask = FetchTask\r\n\r\n        const getTask = async () => {          \r\n            try {       \r\n                const taskFromServer = await fetchTask(token?.id, token?.token)         \r\n                setTask(taskFromServer)\r\n                //console.log(taskFromServer)\r\n                setComments(taskFromServer.comments)\r\n                setIsLoading(false)\r\n            } catch (error) {\r\n                console.log(\"failed\") \r\n                console.log(error);\r\n            }   \r\n        }\r\n      \r\n        getTask()\r\n\r\n    }, []) \r\n\r\n    const onCancel = () => {\r\n        setShowEditTask(!showEditTask)\r\n    }\r\n\r\n    const update = async (task) => {\r\n        setIsLoading(true)\r\n        try {\r\n            task.userId = token?.id\r\n            setShowEditTask(!showEditTask)\r\n            const updTask = await UpdateTask(task, token?.token)\r\n            setTask(updTask)\r\n            setIsLoading(false)\r\n            showToast('success', `Updated \"${task.text}\"`)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div>    \r\n                    {!showEditTask && (\r\n                        <div className=\"taskDetail\">\r\n                            <h3>\r\n                                {task.text}\r\n                            </h3>\r\n                            <hr></hr>\r\n                            <p>\r\n                                Category: {task.category}\r\n                            </p>\r\n                            <p>\r\n                                Location: {task.location}\r\n                            </p>\r\n                            <p>\r\n                                Day: {FormatDateString(task.day)}\r\n                            </p>\r\n                            <p>\r\n                                Details: {task.details !== undefined ? task.details : \"None\"}\r\n                            </p>    \r\n                            { task.isCompleted && (\r\n                                <p>Completed On: {FormatDateString(task.dateCompleted)}</p>\r\n                            )}\r\n                            <Button\r\n                                color='green'\r\n                                text='Edit Task'\r\n                                onClick={() => setShowEditTask(!showEditTask)}\r\n                            />\r\n                            {(comments != undefined) && (\r\n                                <CommentSection comments={comments} taskId={id} /> \r\n                            )}                         \r\n                        </div>\r\n                    )}                               \r\n\r\n                    {showEditTask && (\r\n                        <EditTask task={task} onUpdate={update} onCancel={onCancel} token={token?.token}/>\r\n                    )}        \r\n                </div>) : (\r\n                <div>\r\n                    <h1>Loading ...</h1>\r\n                </div>\r\n            )}           \r\n        </>        \r\n    )\r\n}\r\n\r\nexport default TaskDetails","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js",[],["168","169"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js",[],["170","171"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js",["172","173","174","175"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js",["176"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useToast } from './ToastContext'\r\n\r\nimport './Toast.css';\r\n//source:     transition: max-height 0.5s, opacity 0.5s;\r\nconst Toast = ({ position, autoDelete, dismissTime }) => {\r\n    const toastList = useToast()\r\n    const [list, setList] = useState(toastList)\r\n\r\n    //function sleep(ms) {\r\n    //    console.log('sleeping')\r\n    //    return new Promise(resolve => setTimeout(resolve, ms));\r\n    //  }\r\n\r\n    useEffect(() => {\r\n        //console.log('toastlist side effect')\r\n        //console.log(toastList)\r\n        setList([...toastList]);\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            if (autoDelete && toastList.length && list.length) {            \r\n                deleteToast(toastList[0].id);\r\n            }\r\n        }, dismissTime);\r\n\r\n        return async () => {                     \r\n            clearInterval(interval);\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList, autoDelete, dismissTime, list]);\r\n\r\n    const deleteToast = id => {\r\n        const listItemIndex = list.findIndex(e => e.id === id);\r\n        const toastListItem = toastList.findIndex(e => e.id === id);\r\n        list.splice(listItemIndex, 1);\r\n        toastList.splice(toastListItem, 1);\r\n        setList([...list]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`notification-container ${position}`}>\r\n                {\r\n                    list.map((toast, i) =>\r\n                        <div\r\n                            key={i}\r\n                            className={`notification toast ${('hidden' in toast) ? ('hidden') : ('show')} ${position}`}\r\n                            style={{ backgroundColor: toast.backgroundColor }}\r\n                        >\r\n                            <button onClick={() => deleteToast(toast.id)}>\r\n                                X\r\n                            </button>\r\n                            <div className=\"notification-image\">\r\n                                <img src={toast.icon} alt=\"\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"notification-title\">{toast.title}</p>\r\n                                <p className=\"notification-message\">\r\n                                    {toast.description}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    Toast.defaultProps = {\r\n        position: 'bottom-right'\r\n    }\r\n\r\n    Toast.propTypes = {\r\n        toastList: PropTypes.array.isRequired,\r\n        position: PropTypes.string,\r\n        autoDelete: PropTypes.bool,\r\n        autoDeleteTime: PropTypes.number\r\n    }\r\n}\r\n\r\nexport default Toast\r\n\r\n","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js",["177","178","179","180","181","182"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js",[],["183","184"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js",["185"],"import React, { useContext, useState } from 'react'\r\nimport checkIcon from '../../assets/check.svg';\r\nimport errorIcon from '../../assets/error.svg';\r\nimport infoIcon from '../../assets/info.svg';\r\nimport warningIcon from '../../assets/warning.svg';\r\n\r\n\r\nconst ToastListContext = React.createContext()\r\nconst ShowToastContext = React.createContext()\r\n\r\nexport function useToast() {\r\n    return useContext(ToastListContext)\r\n}\r\n\r\nexport function useShowToast() {\r\n    return useContext(ShowToastContext)\r\n}\r\n\r\nexport function ToastProvider({ children }) {\r\n    const [list, setList] = useState([])\r\n\r\n    const showToast = (type, text) => {\r\n        let toastProperties = null\r\n        const id = Math.floor((Math.random() * 100) + 1)\r\n        //console.log('type: ' + type)\r\n        switch (type) {\r\n            case 'error':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Error!',\r\n                    description: `${text}`,\r\n                    backgroundColor: 'salmon',\r\n                    icon: errorIcon\r\n                }\r\n                break\r\n            case 'success':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Success!',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5cb85c',\r\n                    icon: checkIcon\r\n                }\r\n                break\r\n            case 'info':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Info',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5bc0de',\r\n                    icon: infoIcon\r\n                }\r\n                break\r\n\r\n            default:\r\n                setList([])\r\n        }\r\n        setList([...list, toastProperties])\r\n    }\r\n    //const testList = [\r\n    //    {\r\n    //        id: 1,\r\n    //        title: 'Success',\r\n    //        description: 'This is a success toast component',\r\n    //        backgroundColor: '#5cb85c',\r\n    //        icon: checkIcon\r\n    //    },\r\n    //    {\r\n    //        id: 2,\r\n    //        title: 'Danger',\r\n    //        description: 'This is an error toast component',\r\n    //        backgroundColor: '#d9534f',\r\n    //        icon: errorIcon\r\n    //    },\r\n    //    {\r\n    //        id: 3,\r\n    //        title: 'Info',\r\n    //        description: 'This is an info toast component',\r\n    //        backgroundColor: '#5bc0de',\r\n    //        icon: infoIcon\r\n    //    },\r\n    //    {\r\n    //        id: 4,\r\n    //        title: 'Warning',\r\n    //        description: 'This is a warning toast component',\r\n    //        backgroundColor: '#f0ad4e',\r\n    //        icon: warningIcon\r\n    //    }\r\n    //]\r\n    return (\r\n        <ToastListContext.Provider value={list}>\r\n            <ShowToastContext.Provider value={showToast}>\r\n                {children}\r\n            </ShowToastContext.Provider>\r\n        </ToastListContext.Provider>\r\n    )\r\n}","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js",["186","187","188"],"import Constant from '../Constant'\r\nimport CrudOperations from '../task-crud-operations/CrudOperations'\r\nimport Header from '../task-tracker/Header'\r\nimport AddTask from '../task-tracker/AddTask'\r\nimport Tasks from '../task-tracker/Tasks'\r\nimport { useState, useEffect } from 'react'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport { useToken} from '../api-authorization/UserContext'\r\n\r\nconst TaskTracker = () => {\r\n        //showAddTask = current state\r\n    //setShowAddTask = function that aloows you to update the current state\r\n    //when you update state, the component rerenders\r\n    const { token } = useToken()\r\n\r\n    const [showAddTask, setShowAddTask] = useState(false)\r\n    const [tasks, setTasks] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const showToast = useShowToast()\r\n   \r\n    useEffect(() => {\r\n        console.log('task tracker use effect')\r\n        const getTasks = async () => {\r\n            try {\r\n                //console.log(CrudOperations)                               \r\n                //console.log(`token = ${token}`)\r\n                //console.log(`user = ${userId}`)\r\n                if (token != undefined) {\r\n                    const tasksFromServer = await CrudOperations.FetchTasks(token?.id, token?.token)\r\n                    setIsLoading(false)\r\n                    setTasks(tasksFromServer)\r\n                }\r\n                \r\n            } catch (error) {\r\n                showToast('error', error)\r\n            }\r\n        }\r\n\r\n        getTasks()\r\n\r\n        return function cleanup() {\r\n            setTasks([])\r\n        }\r\n    }, [])\r\n\r\n    const onDelete = async (id) => {\r\n        await CrudOperations.DeleteTask(id, token?.token)\r\n        //.filter removes the task with the same id as the id passed up\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n\r\n    // Toggle Reminder\r\n    //takes id so it knows which on to toggle\r\n    const toggleReminder = async (taskToToggle) => {\r\n        try {\r\n            //const taskToToggle = await CrudOperations.FetchTask(id, token)\r\n            const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n            //console.log(updTask)\r\n            const res = await fetch(`${Constant()}/api/tasks/${taskToToggle.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token?.token\r\n                },\r\n                body: JSON.stringify(updTask)\r\n            })\r\n\r\n            const data = await res.json()\r\n\r\n            setTasks(\r\n                tasks.map((task) =>\r\n                    task.id === taskToToggle.id ? { ...task, reminder: data.reminder } : task\r\n                )\r\n            )\r\n        } catch (error) {\r\n            showToast('error', 'error')\r\n        }\r\n\r\n    }\r\n\r\n    const updateTask = async (task) => {\r\n        console.log(task)\r\n        setTasks(\r\n            tasks.map((oldTask) => task.id === oldTask.id ? task : oldTask)\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                onAdd={() => setShowAddTask(!showAddTask)}\r\n                showAdd={showAddTask} />\r\n            <AddTask isToggled={showAddTask}\r\n                tasks={tasks} setTasks={setTasks}\r\n                setShowAddTask={setShowAddTask} />\r\n            {!isLoading ? (\r\n                (tasks.length > 0) ? (\r\n                    <Tasks\r\n                        tasks={tasks}\r\n                        onDelete={onDelete}\r\n                        onToggle={toggleReminder}\r\n                        onGoToDetail={() => { setShowAddTask(false) }} />) :\r\n                    ('No Tasks To Show')\r\n            ) : ('Loading ...')}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskTracker",["189","190"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js",["191"],"import Table from 'react-bootstrap/Table'\r\nimport { FaTimes } from 'react-icons/fa'\r\nimport FormatDateString from './FormatDateString'\r\nimport Constant from './Constant'\r\n\r\nconst AlertCenter = ({ alerts, setAlerts }) => {\r\n\r\n    const deleteTask = async (id) => {\r\n        //await fetch(`${Constant()}/api/alerts/${id}`, {\r\n        //    method: 'DELETE',\r\n        //})\r\n        //.filter removes the task with the same id as the id passed up\r\n        setAlerts(alerts.filter((alert) => alert.id !== id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Table bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th colSpan='2'>Message</th>                      \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {alerts.map((alert, index) =>\r\n                    (<tr key={index}>\r\n                        <td>{FormatDateString(alert.date)}</td>\r\n                        <td>{alert.message}</td>\r\n                        <td>\r\n                            <FaTimes\r\n                                style={{ color: 'red', cursor: 'pointer' }}\r\n                                onClick={() => deleteTask(alert.id)}\r\n                            />\r\n                        </td>\r\n                    </tr>)\r\n                    )}\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertCenter",["192","193"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js",["194"],"﻿import Constant from '../Constant'\r\n\r\n\r\nconst DeleteTask = async (id, token) => {\r\n\r\n    await fetch(`${Constant()}/api/tasks/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    })\r\n    //.filter removes the task with the same id as the id passed up\r\n    \r\n}\r\n\r\nexport default DeleteTask","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js",["195","196","197"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js",["198"],"﻿import Constant from '../Constant'\r\n\r\nconst FetchTasks = async (id, token) => {\r\n    const res = await fetch(Constant() + `/api/Users/${id}/tasks`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    })\r\n    const data = await res.json()\r\n\r\n    return data\r\n}\r\n\r\nexport default FetchTasks\r\n","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js",[],["199","200"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js",["201"],"import { useState } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport { useToken } from '../api-authorization/UserContext'\r\n\r\nconst CommentForm = ({ taskId }) => {\r\n    const [text, setText] = useState('')\r\n    const { token, setToken } = useToken()\r\n\r\n    const onSubmit = async (e) => {\r\n        //e.preventDefault() is so it doesnt actually submit to the page\r\n        e.preventDefault()\r\n        setText('')\r\n        await fetch(Constant() + '/api/comments', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': 'Bearer ' + token?.token\r\n            },\r\n            body: JSON.stringify({ userId: token?.id, taskId, text })\r\n        })\r\n            .then(data => data.json())\r\n            .catch((error) => {\r\n                console.error('Fetch Error:', error);\r\n            })\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='commentForm'>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Group>\r\n                    <Form.Control\r\n                        type='text'\r\n                        maxLength='200'\r\n                        placeholder='Add Reply'\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-block'\r\n                    style={{ backgroundColor: 'skyblue' }}\r\n                >\r\n                    Reply\r\n                </button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentForm","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js",["202","203"],"import Table from 'react-bootstrap/Table'\r\nimport { useState } from 'react'\r\nimport Comment from \"./Comment\"\r\n\r\nconst Comments = ({ comments }) => {\r\n    //console.log(comments)\r\n   \r\n    return (\r\n        <>\r\n            {comments.map((c, index) => (\r\n                <Comment key={index} comment={c} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comments","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Header.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js",["204"],"﻿import CreateTask from './CreateTask'\r\nimport DeleteTask from './DeleteTask'\r\nimport FetchTask from './FetchTask'\r\nimport FetchTasks from './FetchTasks'\r\nimport UpdateTask from './UpdateTask'\r\n\r\nconst CrudOperations = {\r\n        CreateTask,\r\n        DeleteTask,\r\n        FetchTask,\r\n        FetchTasks,\r\n        UpdateTask\r\n}\r\n\r\n\r\nexport default CrudOperations","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js",["205"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTask.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js",["206"],"\r\nimport { useState } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport CreateTask from '../task-crud-operations/CreateTask'\r\nimport { useToken } from '../api-authorization/UserContext'\r\n\r\n//take in the function onAdd\r\nconst AddTask = ({ isToggled, tasks, setTasks, setShowAddTask }) => {\r\n  //more info on what the \"useSate\" hook does here: https://reactjs.org/docs/hooks-state.html\r\n    //in a nutshell useState  is what we use to deal with properties in a function because functions cant have properties\r\n    const { token } = useToken()\r\n  const [text, setText] = useState('')\r\n  const [details, setDetails] = useState('')\r\n  const [location, setLocation] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [category, setCategory] = useState()\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n    const showToast = useShowToast()\r\n    // Add Task\r\n    //post because we're adding tasks\r\n    //turns it from js object into json string\r\n    //async function addTask(task) {\r\n        \r\n    //    return fetch(Constant() + '/api/tasks', {\r\n    //        method: 'POST',\r\n    //        headers: {\r\n    //            'Content-type': 'application/json',\r\n    //            'Authorization': 'Bearer ' + token\r\n    //        },\r\n    //        body: JSON.stringify(task)\r\n    //    })\r\n    //       .then(data => data.json())\r\n    //       .catch((error) => {\r\n    //           console.error('Fetch Error:', error);\r\n    //       });\r\n\r\n        \r\n    //}\r\n\r\n  const onSubmit = async (e) => {\r\n    //e.preventDefault() is so it doesnt actually submit to the page\r\n    e.preventDefault()\r\n\r\n    //filters if text is blank\r\n      if (!(text.trim())) {\r\n      alert('Please add a task')\r\n      return\r\n    }\r\n\r\n    if (!day) {\r\n      alert('Please add a datetime')\r\n      return\r\n    }\r\n\r\n      const didAdd = await CreateTask({ text, details, location, day, reminder, userId: token?.id, isCompleted: false }, token?.token)\r\n      console.log(didAdd)\r\n      //data returned is the new task\r\n      //const data = await res.json()\r\n      //take existings takes and add data on\r\n      if (!('error' in didAdd)) {\r\n          setTasks([...tasks, didAdd])\r\n          showToast('success', `Added \"${text}\"`)\r\n          setShowAddTask(false)\r\n          //clears the form\r\n          setText('')\r\n          setDay('')\r\n          setLocation('')\r\n          setDetails('')\r\n          setReminder(false)\r\n      }\r\n      else {\r\n          //console.log('added')\r\n          showToast('error', didAdd.error)\r\n      }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={isToggled ? 'taskForm' : 'taskForm hidden'}>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group>\r\n          <Form.Label>Task</Form.Label>\r\n          <Form.Control \r\n                      type='text'\r\n                      maxLength='30'\r\n                      placeholder=''\r\n                      value={text}\r\n                      onChange={(e) => setText(e.target.value)} />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Category: </Form.Label>\r\n          <Form.Control \r\n                  type='text'\r\n                      placeholder=''\r\n                      value={category}\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                  />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Location: </Form.Label>\r\n          <Form.Control \r\n                  type='text'\r\n                  placeholder=''\r\n                  value={location}\r\n                  onChange={(e) => setLocation(e.target.value)}\r\n                  />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Details: </Form.Label>\r\n          <Form.Control \r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  placeholder=''\r\n                  value={details}                  \r\n                  onChange={(e) => setDetails(e.target.value)}\r\n                  />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Day & Time</Form.Label>\r\n          <Form.Control \r\n                  type='datetime-local'\r\n                  placeholder='Add Day & Time'\r\n                  value={day}\r\n                  onChange={(e) => setDay(e.target.value)}/>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Check \r\n          type=\"checkbox\" \r\n          label=\"Set Reminder\"\r\n          checked={reminder}\r\n                  value={reminder}\r\n                  onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n        </Form.Group>\r\n        \r\n        <button\r\n            type='submit'\r\n            className='btn btn-block'\r\n            style={{ backgroundColor: 'skyblue' }}\r\n          >\r\n            Save Task\r\n        </button>\r\n\r\n      </Form>\r\n    </div>\r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\EditTask.js",["207"],"import { useState } from 'react'\r\nimport Button from './Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useToken } from './api-authorization/UserContext'\r\n\r\nconst EditTask = ({task, onCancel, onUpdate }) => {\r\n    const [id, setId] = useState(task.id)\r\n    const [text, setText] = useState(task.text)\r\n    const [day, setDay] = useState(task.day)\r\n    const [details, setDetails] = useState(task.details)\r\n    const [category, setCategory] = useState(task.category)\r\n    const [location, setLocation] = useState(task.location)\r\n    const [reminder, setReminder] = useState(task.reminder)\r\n    const [isCompleted, setIsCompleted] = useState(task.isCompleted)\r\n    const { token, setToken } = useToken()\r\n\r\n    const onSubmit = (e) => {\r\n        //e.preventDefault() is so it doesnt actually submit to the page\r\n        e.preventDefault()\r\n    \r\n        //filters if text is blank\r\n        if (!text) {\r\n          alert('Please add a task')\r\n          return\r\n        }\r\n    \r\n        if (!day) {\r\n            alert('Please add a datetime')\r\n            return\r\n        }\r\n\r\n        onUpdate({ id, text, details, location, day, reminder, isCompleted, category }, token)\r\n    \r\n        //clears the form\r\n        setId('')\r\n        setText('')\r\n        setDay('')\r\n        setLocation('')\r\n        setCategory('')\r\n        setDetails('')\r\n        setReminder(false)\r\n      }\r\n    \r\n    return (\r\n<Form onSubmit={onSubmit} className=\"taskName\">\r\n  <Form.Group>\r\n    <Form.Label>Task</Form.Label>\r\n    <Form.Control \r\n                type='text'\r\n                maxLength='30'\r\n                placeholder=''\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)} />\r\n  </Form.Group>\r\n\r\n  <Form.Group>\r\n    <Form.Label>Location: </Form.Label>\r\n    <Form.Control \r\n            type='text'\r\n            placeholder=''\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            />\r\n  </Form.Group>\r\n  <Form.Group>\r\n    <Form.Label>Category: </Form.Label>\r\n    <Form.Control \r\n            type='text'\r\n            placeholder=''\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n            />\r\n  </Form.Group>\r\n  <Form.Group>\r\n    <Form.Label>Details: </Form.Label>\r\n    <Form.Control \r\n            as=\"textarea\"\r\n            rows={3}\r\n            placeholder=''\r\n            value={details}\r\n            onChange={(e) => setDetails(e.target.value)}\r\n             />\r\n  </Form.Group>\r\n  <Form.Group>\r\n    <Form.Label>Day & Time</Form.Label>\r\n    <Form.Control \r\n            type='datetime-local'\r\n            placeholder='Add Day & Time'\r\n            value={day}\r\n            onChange={(e) => setDay(e.target.value)}/>\r\n  </Form.Group>\r\n  <Form.Group>\r\n    <Form.Check \r\n    type=\"checkbox\" \r\n    label=\"Set Reminder\"\r\n    checked={reminder}\r\n            value={reminder}\r\n            onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n </Form.Group>\r\n <Form.Group>\r\n    <Form.Check \r\n    type=\"checkbox\" \r\n                    label=\"Completed?\"\r\n                    checked={isCompleted}\r\n                    value={isCompleted}\r\n            onChange={(e) => setIsCompleted(e.currentTarget.checked)} />\r\n  </Form.Group>\r\n  \r\n  <button\r\n      type='submit'\r\n      className='btn'\r\n      style={{ backgroundColor: 'skyblue' }}\r\n    >\r\n      Save Task\r\n  </button>\r\n  <Button\r\n            color='red'\r\n            text='Cancel'\r\n            onClick={onCancel}\r\n        />\r\n</Form>\r\n)\r\n    \r\n}\r\nexport default EditTask","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Register.js",[],["208","209"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Login.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Intro.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Button.js",[],{"ruleId":"210","severity":1,"message":"211","line":2,"column":31,"nodeType":"212","messageId":"213","endLine":2,"endColumn":41},{"ruleId":"214","severity":1,"message":"215","line":45,"column":8,"nodeType":"216","endLine":45,"endColumn":10,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":95,"column":40,"nodeType":"220","messageId":"221","endLine":95,"endColumn":42},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"222","replacedBy":"226"},{"ruleId":"224","replacedBy":"227"},{"ruleId":"218","severity":1,"message":"219","line":30,"column":27,"nodeType":"220","messageId":"221","endLine":30,"endColumn":29},{"ruleId":"214","severity":1,"message":"228","line":44,"column":8,"nodeType":"216","endLine":44,"endColumn":10,"suggestions":"229"},{"ruleId":"210","severity":1,"message":"230","line":96,"column":13,"nodeType":"212","messageId":"213","endLine":96,"endColumn":16},{"ruleId":"210","severity":1,"message":"230","line":112,"column":13,"nodeType":"212","messageId":"213","endLine":112,"endColumn":16},{"ruleId":"231","severity":1,"message":"232","line":75,"column":5,"nodeType":"233","messageId":"234","endLine":84,"endColumn":6},{"ruleId":"210","severity":1,"message":"235","line":49,"column":24,"nodeType":"212","messageId":"213","endLine":49,"endColumn":37},{"ruleId":"210","severity":1,"message":"236","line":50,"column":28,"nodeType":"212","messageId":"213","endLine":50,"endColumn":45},{"ruleId":"210","severity":1,"message":"237","line":57,"column":11,"nodeType":"212","messageId":"213","endLine":57,"endColumn":26},{"ruleId":"218","severity":1,"message":"219","line":109,"column":19,"nodeType":"220","messageId":"221","endLine":109,"endColumn":21},{"ruleId":"218","severity":1,"message":"219","line":142,"column":23,"nodeType":"220","messageId":"221","endLine":142,"endColumn":25},{"ruleId":"214","severity":1,"message":"238","line":149,"column":8,"nodeType":"216","endLine":149,"endColumn":15,"suggestions":"239"},{"ruleId":"222","replacedBy":"240"},{"ruleId":"224","replacedBy":"241"},{"ruleId":"210","severity":1,"message":"242","line":5,"column":8,"nodeType":"212","messageId":"213","endLine":5,"endColumn":19},{"ruleId":"218","severity":1,"message":"219","line":28,"column":27,"nodeType":"220","messageId":"221","endLine":28,"endColumn":29},{"ruleId":"214","severity":1,"message":"243","line":44,"column":8,"nodeType":"216","endLine":44,"endColumn":10,"suggestions":"244"},{"ruleId":"210","severity":1,"message":"245","line":81,"column":11,"nodeType":"212","messageId":"213","endLine":81,"endColumn":21},{"ruleId":"222","replacedBy":"246"},{"ruleId":"224","replacedBy":"247"},{"ruleId":"210","severity":1,"message":"248","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":16},{"ruleId":"222","replacedBy":"249"},{"ruleId":"224","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":1,"column":1,"nodeType":"253","messageId":"221","fix":"254"},{"ruleId":"251","severity":1,"message":"252","line":1,"column":1,"nodeType":"253","messageId":"221","fix":"255"},{"ruleId":"210","severity":1,"message":"256","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":18},{"ruleId":"210","severity":1,"message":"257","line":3,"column":20,"nodeType":"212","messageId":"213","endLine":3,"endColumn":29},{"ruleId":"251","severity":1,"message":"252","line":1,"column":1,"nodeType":"253","messageId":"221","fix":"258"},{"ruleId":"222","replacedBy":"259"},{"ruleId":"224","replacedBy":"260"},{"ruleId":"210","severity":1,"message":"261","line":8,"column":20,"nodeType":"212","messageId":"213","endLine":8,"endColumn":28},{"ruleId":"210","severity":1,"message":"262","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":13},{"ruleId":"210","severity":1,"message":"256","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":18},{"ruleId":"251","severity":1,"message":"252","line":1,"column":1,"nodeType":"253","messageId":"221","fix":"263"},{"ruleId":"251","severity":1,"message":"252","line":1,"column":1,"nodeType":"253","messageId":"221","fix":"264"},{"ruleId":"210","severity":1,"message":"248","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":16},{"ruleId":"210","severity":1,"message":"261","line":15,"column":20,"nodeType":"212","messageId":"213","endLine":15,"endColumn":28},{"ruleId":"222","replacedBy":"265"},{"ruleId":"224","replacedBy":"266"},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'token?.id' and 'token?.token'. Either include them or remove the dependency array.","ArrayExpression",["267"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["268"],"no-negated-in-lhs",["269"],["268"],["269"],"React Hook useEffect has missing dependencies: 'onSave' and 'token'. Either include them or remove the dependency array.",["270"],"'res' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'setCheckValue' is assigned a value but never used.","'setAutoDeleteTime' is assigned a value but never used.","'getConnectionId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'connection', 'setAlertsOnLogin', and 'showToast'. Either include them or remove the dependency array.",["271"],["268"],["269"],"'warningIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'showToast' and 'token'. Either include them or remove the dependency array.",["272"],"'updateTask' is assigned a value but never used.",["268"],["269"],"'Constant' is defined but never used.",["268"],["269"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"273","text":"274"},{"range":"275","text":"274"},"'useState' is defined but never used.","'useEffect' is defined but never used.",{"range":"276","text":"274"},["268"],["269"],"'setToken' is assigned a value but never used.","'Table' is defined but never used.",{"range":"277","text":"274"},{"range":"278","text":"274"},["268"],["269"],{"desc":"279","fix":"280"},"no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],"Update the dependencies array to be: [token?.id, token?.token]",{"range":"287","text":"288"},"Update the dependencies array to be: [onSave, token]",{"range":"289","text":"290"},"Update the dependencies array to be: [connection, setAlertsOnLogin, showToast, token]",{"range":"291","text":"292"},"Update the dependencies array to be: [showToast, token]",{"range":"293","text":"294"},[1597,1599],"[token?.id, token?.token]",[1527,1529],"[onSave, token]",[5392,5399],"[connection, setAlertsOnLogin, showToast, token]",[1621,1623],"[showToast, token]"]