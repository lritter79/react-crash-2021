[{"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js":"1","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js":"2","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js":"3","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js":"4","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js":"5","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js":"6","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js":"7","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js":"8","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js":"9","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js":"10","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js":"11","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AppNavbar.js":"12","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js":"13","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js":"14","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js":"15","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js":"16","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js":"17","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js":"18","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js":"19","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js":"20","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Calendar.js":"21","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js":"22","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Button.js":"23","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js":"24","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js":"25","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js":"26","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js":"27","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js":"28","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js":"29","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js":"30","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js":"31","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js":"32","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\Helpers.js":"33","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Login.js":"34","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\EditTask.js":"35","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\CoolColor.js":"36","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Header.js":"37","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Intro.js":"38","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTask.js":"39","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Register.js":"40"},{"size":1019,"mtime":1618146202066,"results":"41","hashOfConfig":"42"},{"size":232,"mtime":1614736916073,"results":"43","hashOfConfig":"42"},{"size":280,"mtime":1614736916063,"results":"44","hashOfConfig":"42"},{"size":198,"mtime":1614736916166,"results":"45","hashOfConfig":"42"},{"size":1558,"mtime":1616710682283,"results":"46","hashOfConfig":"42"},{"size":942,"mtime":1616537402522,"results":"47","hashOfConfig":"42"},{"size":235,"mtime":1618166640261,"results":"48","hashOfConfig":"42"},{"size":1731,"mtime":1617204628099,"results":"49","hashOfConfig":"42"},{"size":375,"mtime":1614736916191,"results":"50","hashOfConfig":"42"},{"size":7479,"mtime":1618145231915,"results":"51","hashOfConfig":"42"},{"size":1672,"mtime":1618147044524,"results":"52","hashOfConfig":"42"},{"size":2424,"mtime":1617218319520,"results":"53","hashOfConfig":"42"},{"size":2966,"mtime":1616002415447,"results":"54","hashOfConfig":"42"},{"size":8396,"mtime":1618145884492,"results":"55","hashOfConfig":"42"},{"size":1106,"mtime":1618145248661,"results":"56","hashOfConfig":"42"},{"size":351,"mtime":1615654121240,"results":"57","hashOfConfig":"42"},{"size":5332,"mtime":1617466778177,"results":"58","hashOfConfig":"42"},{"size":363,"mtime":1616002415431,"results":"59","hashOfConfig":"42"},{"size":699,"mtime":1616002415575,"results":"60","hashOfConfig":"42"},{"size":4485,"mtime":1617116457781,"results":"61","hashOfConfig":"42"},{"size":4348,"mtime":1618146133100,"results":"62","hashOfConfig":"42"},{"size":2884,"mtime":1618166575446,"results":"63","hashOfConfig":"42"},{"size":614,"mtime":1617126168417,"results":"64","hashOfConfig":"42"},{"size":531,"mtime":1616710682362,"results":"65","hashOfConfig":"42"},{"size":371,"mtime":1616002415429,"results":"66","hashOfConfig":"42"},{"size":359,"mtime":1615654121229,"results":"67","hashOfConfig":"42"},{"size":920,"mtime":1618146329630,"results":"68","hashOfConfig":"42"},{"size":4859,"mtime":1618164973661,"results":"69","hashOfConfig":"42"},{"size":3708,"mtime":1618145896328,"results":"70","hashOfConfig":"42"},{"size":550,"mtime":1618148112040,"results":"71","hashOfConfig":"42"},{"size":2936,"mtime":1616002415445,"results":"72","hashOfConfig":"42"},{"size":290,"mtime":1616710682294,"results":"73","hashOfConfig":"42"},{"size":159,"mtime":1616710682279,"results":"74","hashOfConfig":"42"},{"size":3082,"mtime":1616710682306,"results":"75","hashOfConfig":"42"},{"size":3981,"mtime":1617467428196,"results":"76","hashOfConfig":"42"},{"size":307,"mtime":1617211671605,"results":"77","hashOfConfig":"42"},{"size":901,"mtime":1616002415561,"results":"78","hashOfConfig":"42"},{"size":829,"mtime":1617223601227,"results":"79","hashOfConfig":"42"},{"size":338,"mtime":1615654121234,"results":"80","hashOfConfig":"42"},{"size":3905,"mtime":1616710682314,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"ea2nox",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"127","usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"103"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"146","usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"165","usedDeprecatedRules":"103"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js",[],["180","181"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js",[],["182","183"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Logout.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js",[],["184","185"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js",[],["186","187"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js",["188","189","190","191"],"import { useState, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport userFunctions from './UserFunctions'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport { useToken } from './UserContext'\r\nimport Helpers from '../../Helpers'\r\n\r\n\r\nconst UserManager = ({ handleLogout }) => {\r\n    //console.log(`id: ${id}`)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [user, setUser] = useState()\r\n    const [showDeleteForm, setShowDeleteForm] = useState(false)\r\n    const [deleteDisabled, setDeleteDisabled] = useState(false)\r\n    const [submitDisabled, setSubmitDisabled] = useState(false)\r\n    const { token } = useToken()\r\n\r\n    const onSave = useShowToast()\r\n    //https://stackoverflow.com/questions/53120972/how-to-call-loading-function-with-react-useeffect-only-once\r\n\r\n    useEffect(() => {\r\n\r\n        const getUser = async () => {\r\n            try {\r\n                //\r\n                //(CrudOperations)                               \r\n\r\n                //console.log('getting user')\r\n                //console.log(`user = ${userId}`)\r\n                if (token != undefined) {\r\n                    const userData = await userFunctions.getUser(token?.id, token?.token)\r\n                    setUser(userData)\r\n                    setIsLoading(false)\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n                onSave('error', error)\r\n            }\r\n        }\r\n\r\n        getUser()\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        return function cleanup() {\r\n            //console.log('clean up')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //console.log('user use effect')\r\n        //if (isChecked != undefined) {\r\n        //    //const updatedUser = await userFunctions.saveUser({ user, id, token })        \r\n        //}\r\n        //else {\r\n        //    console.log('first time')\r\n        //}\r\n        //console.log('set')\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        console.log('isLoading use effect')\r\n    }, [isLoading])\r\n\r\n    \r\n\r\n\r\n    async function updateUser(appUser) {\r\n        \r\n        return fetch(`${Constant()}/api/users/${token?.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token?.token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(appUser),\r\n        })\r\n            .then(function (data) {\r\n               onSave('success', 'Your changes have been saved')\r\n               return data.json()\r\n            })\r\n            .catch((error) => {\r\n               onSave('error', error)\r\n            })\r\n    }\r\n\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        setSubmitDisabled(true)\r\n        let res = await updateUser(user)  \r\n        await sleep(1000)\r\n        setSubmitDisabled(false)\r\n    }\r\n\r\n    const onSubmitDelete = async e => {\r\n        e.preventDefault()\r\n        setDeleteDisabled(true)\r\n        setShowDeleteForm(true)\r\n        //handleLogout(e)\r\n        //let res = await deleteAccount(id)\r\n    }\r\n\r\n    const onDelete = async e => {\r\n        e.preventDefault()\r\n        handleLogout(e)\r\n        let res = await deleteAccount()\r\n    }\r\n\r\n    async function deleteAccount() {\r\n        return fetch(`${Constant()}/api/users/${token?.id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token?.token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ userId: token?.id }),\r\n        })\r\n        .then(data => data.json())\r\n        .catch((error) => {\r\n            console.error('Fetch Error:', error);\r\n        });\r\n    }  \r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <p>Loading...</p>\r\n            ):\r\n                (<div>\r\n                    {showDeleteForm && (\r\n                        <div className='popup'>\r\n                            <div className='popupForm'>\r\n                                <form>\r\n                                    <label for=\"\">Are you sure?</label>\r\n                                    <br />\r\n                                    <button\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'green' }}\r\n                                        onClick={onDelete}\r\n                                    >\r\n                                        Yes\r\n                                    </button>\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'red' }}\r\n                                        onClick={function () {\r\n                                            setDeleteDisabled(false)\r\n                                            setShowDeleteForm(false)\r\n                                        }}\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n\r\n                                </form>\r\n                            </div>                          \r\n                        </div>\r\n                    )}\r\n                    <Form onSubmit={onSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Open To Collaboration?: \"\r\n                                checked={user.isOpenToCollaboration}\r\n                                onChange={(e) => setUser({ ...user, isOpenToCollaboration: e.currentTarget.checked })} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Bio: \r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=''\r\n                                value={Helpers.replaceNullWithEmptyString(user?.bio)}\r\n                                onChange={(e) => setUser({ ...user, bio: e.target.value })}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <button\r\n                            type='submit'\r\n                            className='btn btn-block'\r\n                            style={{ backgroundColor: 'green' }}\r\n                            disabled={submitDisabled}\r\n                        >\r\n                            Save Changes\r\n                        </button>\r\n                    </Form>\r\n\r\n                    <form onSubmit={onSubmitDelete}>\r\n                        <button\r\n                            type='submit'\r\n                            className='btn'\r\n                            style={{ backgroundColor: 'red' }}\r\n                            disabled={deleteDisabled}\r\n                        >\r\n                            Delete Account\r\n                        </button>\r\n                    </form >                 \r\n                    \r\n                </div>)}\r\n            \r\n        </>\r\n   )\r\n}\r\n\r\nexport default UserManager","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AppNavbar.js",["192","193"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js",["194"],"import React, { useContext, useState } from 'react'\r\nimport checkIcon from '../../assets/check.svg';\r\nimport errorIcon from '../../assets/error.svg';\r\nimport infoIcon from '../../assets/info.svg';\r\nimport warningIcon from '../../assets/warning.svg';\r\n\r\n\r\nconst ToastListContext = React.createContext()\r\nconst ShowToastContext = React.createContext()\r\n\r\nexport function useToast() {\r\n    return useContext(ToastListContext)\r\n}\r\n\r\nexport function useShowToast() {\r\n    return useContext(ShowToastContext)\r\n}\r\n\r\nexport function ToastProvider({ children }) {\r\n    const [list, setList] = useState([])\r\n\r\n    const showToast = (type, text) => {\r\n        let toastProperties = null\r\n        const id = Math.floor((Math.random() * 100) + 1)\r\n        //console.log('type: ' + type)\r\n        switch (type) {\r\n            case 'error':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Error!',\r\n                    description: `${text}`,\r\n                    backgroundColor: 'salmon',\r\n                    icon: errorIcon\r\n                }\r\n                break\r\n            case 'success':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Success!',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5cb85c',\r\n                    icon: checkIcon\r\n                }\r\n                break\r\n            case 'info':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Info',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5bc0de',\r\n                    icon: infoIcon\r\n                }\r\n                break\r\n\r\n            default:\r\n                setList([])\r\n        }\r\n        setList([...list, toastProperties])\r\n    }\r\n    //const testList = [\r\n    //    {\r\n    //        id: 1,\r\n    //        title: 'Success',\r\n    //        description: 'This is a success toast component',\r\n    //        backgroundColor: '#5cb85c',\r\n    //        icon: checkIcon\r\n    //    },\r\n    //    {\r\n    //        id: 2,\r\n    //        title: 'Danger',\r\n    //        description: 'This is an error toast component',\r\n    //        backgroundColor: '#d9534f',\r\n    //        icon: errorIcon\r\n    //    },\r\n    //    {\r\n    //        id: 3,\r\n    //        title: 'Info',\r\n    //        description: 'This is an info toast component',\r\n    //        backgroundColor: '#5bc0de',\r\n    //        icon: infoIcon\r\n    //    },\r\n    //    {\r\n    //        id: 4,\r\n    //        title: 'Warning',\r\n    //        description: 'This is a warning toast component',\r\n    //        backgroundColor: '#f0ad4e',\r\n    //        icon: warningIcon\r\n    //    }\r\n    //]\r\n    return (\r\n        <ToastListContext.Provider value={list}>\r\n            <ShowToastContext.Provider value={showToast}>\r\n                {children}\r\n            </ShowToastContext.Provider>\r\n        </ToastListContext.Provider>\r\n    )\r\n}",["195","196"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\App.js",["197","198","199","200","201","202"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTasks.js",["203"],"﻿import Constant from '../Constant'\r\n\r\nconst FetchTasks = async (id, token) => {\r\n    const res = await fetch(Constant() + `/api/Users/${id}/tasks`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    })\r\n    const data = await res.json()\r\n\r\n    return data\r\n}\r\n\r\nexport default FetchTasks\r\n",["204","205"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\AddTask.js",["206"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CrudOperations.js",["207"],"﻿import CreateTask from './CreateTask'\r\nimport DeleteTask from './DeleteTask'\r\nimport FetchTask from './FetchTask'\r\nimport FetchTasks from './FetchTasks'\r\nimport UpdateTask from './UpdateTask'\r\n\r\nconst CrudOperations = {\r\n        CreateTask,\r\n        DeleteTask,\r\n        FetchTask,\r\n        FetchTasks,\r\n        UpdateTask\r\n}\r\n\r\n\r\nexport default CrudOperations","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\TaskTracker.js",["208","209","210"],"import Constant from '../Constant'\r\nimport CrudOperations from '../task-crud-operations/CrudOperations'\r\nimport Header from '../task-tracker/Header'\r\nimport AddTask from '../task-tracker/AddTask'\r\nimport Tasks from '../task-tracker/Tasks'\r\nimport { useState, useEffect } from 'react'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport { useToken} from '../api-authorization/UserContext'\r\nimport Calendar from './Calendar'\r\nimport Button from '../Button'\r\n\r\nconst TaskTracker = () => {\r\n        //showAddTask = current state\r\n    //setShowAddTask = function that aloows you to update the current state\r\n    //when you update state, the component rerenders\r\n    const { token } = useToken()\r\n    const [showAddTask, setShowAddTask] = useState(false)\r\n    const [tasks, setTasks] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const showToast = useShowToast()\r\n    const [showCalendarView, setShowCalendarView] = useState(false)\r\n   \r\n    useEffect(() => {\r\n        //console.log('task tracker use effect')\r\n        const getTasks = async () => {\r\n            try {\r\n                //console.log(CrudOperations)                               \r\n                //console.log(`token = ${token}`)\r\n                //console.log(`user = ${userId}`)\r\n                if (token != undefined) {\r\n                    const tasksFromServer = await CrudOperations.FetchTasks(token?.id, token?.token)\r\n                    setIsLoading(false)\r\n                    setTasks(tasksFromServer)\r\n                }\r\n                \r\n            } catch (error) {\r\n                showToast('error', error)\r\n            }\r\n        }\r\n\r\n        getTasks()\r\n\r\n        return function cleanup() {\r\n            setTasks([])\r\n        }\r\n    }, [])\r\n\r\n    const onDelete = async (id) => {\r\n        await CrudOperations.DeleteTask(id, token?.token)\r\n        //.filter removes the task with the same id as the id passed up\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n\r\n    // Toggle Reminder\r\n    //takes id so it knows which on to toggle\r\n    const toggleReminder = async (taskToToggle) => {\r\n        try {\r\n            //const taskToToggle = await CrudOperations.FetchTask(id, token)\r\n            const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n            //console.log(updTask)\r\n            const res = await fetch(`${Constant()}/api/tasks/${taskToToggle.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token?.token\r\n                },\r\n                body: JSON.stringify(updTask)\r\n            })\r\n\r\n            const data = await res.json()\r\n\r\n            setTasks(\r\n                tasks.map((task) =>\r\n                    task.id === taskToToggle.id ? { ...task, reminder: data.reminder } : task\r\n                )\r\n            )\r\n        } catch (error) {\r\n            showToast('error', 'error')\r\n        }\r\n\r\n    }\r\n\r\n    const updateTask = async (task) => {\r\n        //console.log(task)\r\n        setTasks(\r\n            tasks.map((oldTask) => task.id === oldTask.id ? task : oldTask)\r\n        )\r\n    }\r\n\r\n    function calendarBtnClick(e) {\r\n        e.currentTarget.blur()\r\n        setShowCalendarView(!showCalendarView)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                onAdd={() => setShowAddTask(!showAddTask)}\r\n                showAdd={showAddTask} />\r\n            <AddTask isToggled={showAddTask}\r\n                tasks={tasks} setTasks={setTasks}\r\n                setShowAddTask={setShowAddTask} />\r\n            <div id='divBtnContainer'>\r\n                <Button text={showCalendarView ? ('Show List View') : ('Show Calendar View')}\r\n                    textColor='white'\r\n                    onClick={calendarBtnClick}\r\n                />\r\n            </div>\r\n            {!isLoading ? (\r\n                (tasks.length > 0) ? (\r\n                    (showCalendarView) ?\r\n                        (<Calendar tasks={tasks} setTasks={setTasks} />) :\r\n                        (<Tasks\r\n                            tasks={tasks}\r\n                            onDelete={onDelete}\r\n                            onToggle={toggleReminder}\r\n                            onGoToDetail={() => { setShowAddTask(false) }} />)\r\n                    ) :\r\n                    ('No Tasks To Show')\r\n            ) : ('Loading ...')}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskTracker","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Calendar.js",["211","212","213"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js",["214","215","216"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Button.js",[],["217","218"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js",["219"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js",["220","221"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js",["222"],"﻿import Constant from '../Constant'\r\n\r\n\r\nconst DeleteTask = async (id, token) => {\r\n\r\n    await fetch(`${Constant()}/api/tasks/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    })\r\n    //.filter removes the task with the same id as the id passed up\r\n    \r\n}\r\n\r\nexport default DeleteTask","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\UpdateTask.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\TaskDetails.js",["223","224"],"import { useParams } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from './Button'\r\nimport EditTask from './EditTask'\r\nimport FormatDateString from './FormatDateString'\r\nimport FetchTask from './task-crud-operations/FetchTask'\r\nimport CommentSection from './comment-components/CommentSection'\r\nimport { useShowToast } from './toast/ToastContext'\r\nimport { useToken } from './api-authorization/UserContext'\r\nimport UpdateTask from './task-crud-operations/UpdateTask'\r\n\r\nconst TaskDetails = () => {\r\n\r\n    //gets the params passed in from the router\r\n    //is a react hook\r\n    const { id } = useParams()\r\n    const { token } = useToken()\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [task, setTask] = useState(null)\r\n    const [showEditTask, setShowEditTask] = useState(false)\r\n    const [comments, setComments] = useState()\r\n    const showToast = useShowToast() \r\n    const history = useHistory();\r\n   \r\n    const coolColor = (i) => {\r\n        i = i > 3 ? i % 4 : i \r\n        switch(i) {\r\n          case 0:\r\n            return 'pink';\r\n          case 1:\r\n            return 'white';\r\n          case 2:\r\n            return 'orange';\r\n          case 3:\r\n              return 'green';\r\n          default:\r\n            return '';\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        //console.log(\"using effect: task details\")\r\n        // Fetch Task\r\n        //const fetchTask = FetchTask\r\n\r\n\r\n\r\n        const getTask = async () => {          \r\n            try {       \r\n                const taskFromServer = await FetchTask(id, token?.token)         \r\n                setTask(taskFromServer)\r\n                setComments(taskFromServer.comments)\r\n                //console.log(taskFromServer)\r\n                //setComments(taskFromServer.comments)\r\n                setIsLoading(false)\r\n            } catch (error) {\r\n                console.log(\"failed\") \r\n                console.log(error);\r\n            }   \r\n        }\r\n      \r\n        getTask()\r\n\r\n    }, []) \r\n\r\n    const onCancel = () => {\r\n        setShowEditTask(!showEditTask)\r\n    }\r\n\r\n    const update = async (task) => {\r\n        setIsLoading(true)\r\n        try {\r\n            task.userId = token?.id\r\n            setShowEditTask(!showEditTask)\r\n            const updTask = await UpdateTask(task, token?.token)\r\n            setTask(updTask)\r\n            setIsLoading(false)\r\n            showToast('success', `Updated \"${task.text}\"`)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div>    \r\n                    {!showEditTask && (\r\n                        <div className=\"taskDetail\">\r\n                            <h3>\r\n                                {task.text}\r\n                            </h3>\r\n                            <hr></hr>\r\n                            <p>\r\n                                Category: {task.category}\r\n                            </p>\r\n                            <p>\r\n                                Location: {task.location}\r\n                            </p>\r\n                            {task?.day &&\r\n                                (<p>\r\n                                    Day: {FormatDateString(task.day)}\r\n                                </p>)\r\n                            }\r\n                            \r\n                            <p>\r\n                                Details: {task.details !== undefined ? task.details : \"None\"}\r\n                            </p>    \r\n                            { task.isCompleted && (\r\n                                <p>Completed On: {FormatDateString(task.dateCompleted)}</p>\r\n                            )}\r\n                            <Button\r\n                                color='green'\r\n                                text='← Back'\r\n                                onClick={history.goBack}\r\n                            />\r\n                            <Button                                \r\n                                text='Edit Task'\r\n                                onClick={() => setShowEditTask(!showEditTask)}\r\n                            />\r\n                            \r\n\r\n                            <CommentSection comments={comments} setComments={setComments} taskId={id} /> \r\n                                                    \r\n                        </div>\r\n                    )}                               \r\n\r\n                    {showEditTask && (\r\n                        <EditTask task={task} onUpdate={update} onCancel={onCancel} />\r\n                    )}        \r\n                </div>) : (\r\n                <div>\r\n                    <h1>Loading ...</h1>\r\n                </div>\r\n            )}           \r\n        </>        \r\n    )\r\n}\r\n\r\nexport default TaskDetails","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js",["225"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentSection.js",["226","227"],"﻿import CommentForm from \"./CommentForm\"\r\nimport Comments from \"./Comments\"\r\nimport { useState } from 'react'\r\n\r\n\r\nconst CommentSection = ({ comments, setComments, taskId }) => {\r\n    \r\n    return (\r\n        <div className='commentSection'>\r\n            {(comments?.length > 0) ? (\r\n                <Comments comments={comments} />\r\n            ) : (\r\n                    <></>\r\n                )}\r\n\r\n            <CommentForm taskId={taskId} comments={comments} setComments={setComments} />\r\n        </div>\r\n   )\r\n}\r\n\r\nexport default CommentSection","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\Toast.js",["228"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useToast } from './ToastContext'\r\n\r\nimport './Toast.css';\r\n//source:     transition: max-height 0.5s, opacity 0.5s;\r\nconst Toast = ({ position, autoDelete, dismissTime }) => {\r\n    const toastList = useToast()\r\n    const [list, setList] = useState(toastList)\r\n\r\n    //function sleep(ms) {\r\n    //    console.log('sleeping')\r\n    //    return new Promise(resolve => setTimeout(resolve, ms));\r\n    //  }\r\n\r\n    useEffect(() => {\r\n        //console.log('toastlist side effect')\r\n        //console.log(toastList)\r\n        setList([...toastList]);\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            if (autoDelete && toastList.length && list.length) {            \r\n                deleteToast(toastList[0].id);\r\n            }\r\n        }, dismissTime);\r\n\r\n        return async () => {                     \r\n            clearInterval(interval);\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [toastList, autoDelete, dismissTime, list]);\r\n\r\n    const deleteToast = id => {\r\n        const listItemIndex = list.findIndex(e => e.id === id);\r\n        const toastListItem = toastList.findIndex(e => e.id === id);\r\n        list.splice(listItemIndex, 1);\r\n        toastList.splice(toastListItem, 1);\r\n        setList([...list]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`notification-container ${position}`}>\r\n                {\r\n                    list.map((toast, i) =>\r\n                        <div\r\n                            key={i}\r\n                            className={`notification toast ${('hidden' in toast) ? ('hidden') : ('show')} ${position}`}\r\n                            style={{ backgroundColor: toast.backgroundColor }}\r\n                        >\r\n                            <button onClick={() => deleteToast(toast.id)}>\r\n                                X\r\n                            </button>\r\n                            <div className=\"notification-image\">\r\n                                <img src={toast.icon} alt=\"\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"notification-title\">{toast.title}</p>\r\n                                <p className=\"notification-message\">\r\n                                    {toast.description}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    Toast.defaultProps = {\r\n        position: 'bottom-right'\r\n    }\r\n\r\n    Toast.propTypes = {\r\n        toastList: PropTypes.array.isRequired,\r\n        position: PropTypes.string,\r\n        autoDelete: PropTypes.bool,\r\n        autoDeleteTime: PropTypes.number\r\n    }\r\n}\r\n\r\nexport default Toast\r\n\r\n","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\FormatDateString.js",[],["229","230"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\Helpers.js",["231"],"﻿const Helpers = {\r\n    'replaceNullWithEmptyString': (str) => {\r\n        if (str === null) return ''\r\n        return str\r\n    }\r\n}\r\n\r\nexport default Helpers","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Login.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\EditTask.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\CoolColor.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Header.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Intro.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\FetchTask.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\Register.js",[],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"232","replacedBy":"236"},{"ruleId":"234","replacedBy":"237"},{"ruleId":"232","replacedBy":"238"},{"ruleId":"234","replacedBy":"239"},{"ruleId":"232","replacedBy":"240"},{"ruleId":"234","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":31,"column":27,"nodeType":"244","messageId":"245","endLine":31,"endColumn":29},{"ruleId":"246","severity":1,"message":"247","line":45,"column":8,"nodeType":"248","endLine":45,"endColumn":10,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":97,"column":13,"nodeType":"252","messageId":"253","endLine":97,"endColumn":16},{"ruleId":"250","severity":1,"message":"251","line":113,"column":13,"nodeType":"252","messageId":"253","endLine":113,"endColumn":16},{"ruleId":"254","severity":1,"message":"255","line":1,"column":1,"nodeType":"256","messageId":"245","fix":"257"},{"ruleId":"258","severity":1,"message":"259","line":39,"column":112,"nodeType":"260","endLine":39,"endColumn":135},{"ruleId":"250","severity":1,"message":"261","line":5,"column":8,"nodeType":"252","messageId":"253","endLine":5,"endColumn":19},{"ruleId":"232","replacedBy":"262"},{"ruleId":"234","replacedBy":"263"},{"ruleId":"250","severity":1,"message":"264","line":50,"column":24,"nodeType":"252","messageId":"253","endLine":50,"endColumn":37},{"ruleId":"250","severity":1,"message":"265","line":51,"column":28,"nodeType":"252","messageId":"253","endLine":51,"endColumn":45},{"ruleId":"250","severity":1,"message":"266","line":58,"column":11,"nodeType":"252","messageId":"253","endLine":58,"endColumn":26},{"ruleId":"242","severity":1,"message":"243","line":125,"column":19,"nodeType":"244","messageId":"245","endLine":125,"endColumn":21},{"ruleId":"242","severity":1,"message":"243","line":158,"column":23,"nodeType":"244","messageId":"245","endLine":158,"endColumn":25},{"ruleId":"246","severity":1,"message":"267","line":164,"column":8,"nodeType":"248","endLine":164,"endColumn":15,"suggestions":"268"},{"ruleId":"254","severity":1,"message":"255","line":1,"column":1,"nodeType":"256","messageId":"245","fix":"269"},{"ruleId":"232","replacedBy":"270"},{"ruleId":"234","replacedBy":"271"},{"ruleId":"250","severity":1,"message":"272","line":4,"column":8,"nodeType":"252","messageId":"253","endLine":4,"endColumn":16},{"ruleId":"254","severity":1,"message":"255","line":1,"column":1,"nodeType":"256","messageId":"245","fix":"273"},{"ruleId":"242","severity":1,"message":"243","line":30,"column":27,"nodeType":"244","messageId":"245","endLine":30,"endColumn":29},{"ruleId":"246","severity":1,"message":"274","line":46,"column":8,"nodeType":"248","endLine":46,"endColumn":10,"suggestions":"275"},{"ruleId":"250","severity":1,"message":"276","line":83,"column":11,"nodeType":"252","messageId":"253","endLine":83,"endColumn":21},{"ruleId":"254","severity":1,"message":"255","line":1,"column":1,"nodeType":"256","messageId":"245","fix":"277"},{"ruleId":"246","severity":1,"message":"278","line":61,"column":8,"nodeType":"248","endLine":61,"endColumn":10,"suggestions":"279"},{"ruleId":"246","severity":1,"message":"280","line":68,"column":8,"nodeType":"248","endLine":68,"endColumn":15,"suggestions":"281"},{"ruleId":"250","severity":1,"message":"282","line":9,"column":20,"nodeType":"252","messageId":"253","endLine":9,"endColumn":28},{"ruleId":"242","severity":1,"message":"243","line":21,"column":27,"nodeType":"244","messageId":"245","endLine":21,"endColumn":29},{"ruleId":"246","severity":1,"message":"283","line":34,"column":8,"nodeType":"248","endLine":34,"endColumn":10,"suggestions":"284"},{"ruleId":"232","replacedBy":"285"},{"ruleId":"234","replacedBy":"286"},{"ruleId":"254","severity":1,"message":"255","line":1,"column":1,"nodeType":"256","messageId":"245","fix":"287"},{"ruleId":"250","severity":1,"message":"288","line":1,"column":8,"nodeType":"252","messageId":"253","endLine":1,"endColumn":13},{"ruleId":"250","severity":1,"message":"289","line":2,"column":10,"nodeType":"252","messageId":"253","endLine":2,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":1,"column":1,"nodeType":"256","messageId":"245","fix":"290"},{"ruleId":"250","severity":1,"message":"291","line":26,"column":11,"nodeType":"252","messageId":"253","endLine":26,"endColumn":20},{"ruleId":"246","severity":1,"message":"292","line":65,"column":8,"nodeType":"248","endLine":65,"endColumn":10,"suggestions":"293"},{"ruleId":"246","severity":1,"message":"294","line":30,"column":8,"nodeType":"248","endLine":30,"endColumn":29,"suggestions":"295"},{"ruleId":"254","severity":1,"message":"255","line":1,"column":1,"nodeType":"256","messageId":"245","fix":"296"},{"ruleId":"250","severity":1,"message":"289","line":3,"column":10,"nodeType":"252","messageId":"253","endLine":3,"endColumn":18},{"ruleId":"297","severity":1,"message":"298","line":75,"column":5,"nodeType":"299","messageId":"300","endLine":84,"endColumn":6},{"ruleId":"232","replacedBy":"301"},{"ruleId":"234","replacedBy":"302"},{"ruleId":"254","severity":1,"message":"255","line":1,"column":1,"nodeType":"256","messageId":"245","fix":"303"},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],["304"],["305"],["304"],["305"],["304"],["305"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onSave' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["306"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"307","text":"308"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'warningIcon' is defined but never used.",["304"],["305"],"'setCheckValue' is assigned a value but never used.","'setAutoDeleteTime' is assigned a value but never used.","'getConnectionId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'connection', 'setAlertsOnLogin', and 'showToast'. Either include them or remove the dependency array.",["309"],{"range":"310","text":"308"},["304"],["305"],"'Constant' is defined but never used.",{"range":"311","text":"308"},"React Hook useEffect has missing dependencies: 'showToast' and 'token'. Either include them or remove the dependency array.",["312"],"'updateTask' is assigned a value but never used.",{"range":"313","text":"308"},"React Hook useEffect has missing dependencies: 'filterAndMap' and 'tasks'. Either include them or remove the dependency array. If 'setEvents' needs the current value of 'tasks', you can also switch to useReducer instead of useState and read 'tasks' in the reducer.",["314"],"React Hook useEffect has a missing dependency: 'filterAndMap'. Either include it or remove the dependency array.",["315"],"'setToken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["316"],["304"],["305"],{"range":"317","text":"308"},"'Table' is defined but never used.","'useState' is defined but never used.",{"range":"318","text":"308"},"'coolColor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'token?.token'. Either include them or remove the dependency array.",["319"],"React Hook useCallback has an unnecessary dependency: 'pageNumber'. Either exclude it or remove the dependency array.",["320"],{"range":"321","text":"308"},"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode",["304"],["305"],{"range":"322","text":"308"},"no-global-assign","no-unsafe-negation",{"desc":"323","fix":"324"},[-1,0],"",{"desc":"325","fix":"326"},[-1,0],[-1,0],{"desc":"327","fix":"328"},[-1,0],{"desc":"329","fix":"330"},{"desc":"329","fix":"331"},{"desc":"332","fix":"333"},[-1,0],[-1,0],{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},[-1,0],[-1,0],"Update the dependencies array to be: [onSave, token]",{"range":"338","text":"339"},"Update the dependencies array to be: [connection, setAlertsOnLogin, showToast, token]",{"range":"340","text":"341"},"Update the dependencies array to be: [showToast, token]",{"range":"342","text":"343"},"Update the dependencies array to be: [filterAndMap, tasks]",{"range":"344","text":"345"},{"range":"346","text":"345"},"Update the dependencies array to be: [token]",{"range":"347","text":"348"},"Update the dependencies array to be: [id, token?.token]",{"range":"349","text":"350"},"Update the dependencies array to be: [hasMore]",{"range":"351","text":"352"},[1531,1533],"[onSave, token]",[5765,5772],"[connection, setAlertsOnLogin, showToast, token]",[1757,1759],"[showToast, token]",[2093,2095],"[filterAndMap, tasks]",[2184,2191],[1130,1132],"[token]",[2064,2066],"[id, token?.token]",[1444,1465],"[hasMore]"]