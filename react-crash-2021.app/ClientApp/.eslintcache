[{"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js":"1","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Downloader.js":"2","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js":"3","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js":"4","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js":"5","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js":"6","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js":"7","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js":"8","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js":"9","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js":"10","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js":"11","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js":"12","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js":"13","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\CoolColor.js":"14","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js":"15","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryCrudOperations.js":"16","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js":"17","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\Colors.js":"18","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\AddCategory.js":"19","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js":"20","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js":"21","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js":"22","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js":"23","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryContainer.js":"24"},{"size":942,"mtime":1621200205191,"results":"25","hashOfConfig":"26"},{"size":1789,"mtime":1618592233098,"results":"27","hashOfConfig":"28"},{"size":1019,"mtime":1621200205361,"results":"29","hashOfConfig":"26"},{"size":1558,"mtime":1621200205131,"results":"30","hashOfConfig":"26"},{"size":280,"mtime":1614736916063,"results":"31","hashOfConfig":"26"},{"size":1672,"mtime":1621200205252,"results":"32","hashOfConfig":"26"},{"size":699,"mtime":1616002415575,"results":"33","hashOfConfig":"26"},{"size":232,"mtime":1614736916073,"results":"34","hashOfConfig":"26"},{"size":371,"mtime":1616002415429,"results":"35","hashOfConfig":"26"},{"size":2966,"mtime":1616002415447,"results":"36","hashOfConfig":"26"},{"size":378,"mtime":1621200205270,"results":"37","hashOfConfig":"26"},{"size":3602,"mtime":1621221679674,"results":"38","hashOfConfig":"26"},{"size":1826,"mtime":1621222534647,"results":"39","hashOfConfig":"26"},{"size":307,"mtime":1621200205325,"results":"40","hashOfConfig":"26"},{"size":7479,"mtime":1621200205264,"results":"41","hashOfConfig":"26"},{"size":1011,"mtime":1621282472676,"results":"42","hashOfConfig":"26"},{"size":1106,"mtime":1621200205243,"results":"43","hashOfConfig":"26"},{"size":378,"mtime":1621266723288,"results":"44","hashOfConfig":"26"},{"size":1874,"mtime":1621284147266,"results":"45","hashOfConfig":"26"},{"size":375,"mtime":1614736916191,"results":"46","hashOfConfig":"26"},{"size":359,"mtime":1615654121229,"results":"47","hashOfConfig":"26"},{"size":531,"mtime":1621200205299,"results":"48","hashOfConfig":"26"},{"size":2884,"mtime":1621268643630,"results":"49","hashOfConfig":"26"},{"size":862,"mtime":1621283917989,"results":"50","hashOfConfig":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1esi5ev",{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"ea2nox",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Footer.js",[],["110","111"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Downloader.js",["112","113","114","115"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\index.js",[],["116","117"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\AlertCenter.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\About.js",[],["118","119"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserFunctions.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\RegisterAndLoginRoutes.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\Constant.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comments.js",["120","121"],"import Table from 'react-bootstrap/Table'\r\nimport { useState } from 'react'\r\nimport Comment from \"./Comment\"\r\n\r\nconst Comments = ({ comments }) => {\r\n    //console.log(comments)\r\n   \r\n    return (\r\n        <>\r\n            {comments.map((c, index) => (\r\n                <Comment key={index} comment={c} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comments",["122","123"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\toast\\ToastContext.js",["124"],"import React, { useContext, useState } from 'react'\r\nimport checkIcon from '../../assets/check.svg';\r\nimport errorIcon from '../../assets/error.svg';\r\nimport infoIcon from '../../assets/info.svg';\r\nimport warningIcon from '../../assets/warning.svg';\r\n\r\n\r\nconst ToastListContext = React.createContext()\r\nconst ShowToastContext = React.createContext()\r\n\r\nexport function useToast() {\r\n    return useContext(ToastListContext)\r\n}\r\n\r\nexport function useShowToast() {\r\n    return useContext(ShowToastContext)\r\n}\r\n\r\nexport function ToastProvider({ children }) {\r\n    const [list, setList] = useState([])\r\n\r\n    const showToast = (type, text) => {\r\n        let toastProperties = null\r\n        const id = Math.floor((Math.random() * 100) + 1)\r\n        //console.log('type: ' + type)\r\n        switch (type) {\r\n            case 'error':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Error!',\r\n                    description: `${text}`,\r\n                    backgroundColor: 'salmon',\r\n                    icon: errorIcon\r\n                }\r\n                break\r\n            case 'success':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Success!',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5cb85c',\r\n                    icon: checkIcon\r\n                }\r\n                break\r\n            case 'info':\r\n                toastProperties = {\r\n                    id,\r\n                    title: 'Info',\r\n                    description: `${text}`,\r\n                    backgroundColor: '#5bc0de',\r\n                    icon: infoIcon\r\n                }\r\n                break\r\n\r\n            default:\r\n                setList([])\r\n        }\r\n        setList([...list, toastProperties])\r\n    }\r\n    //const testList = [\r\n    //    {\r\n    //        id: 1,\r\n    //        title: 'Success',\r\n    //        description: 'This is a success toast component',\r\n    //        backgroundColor: '#5cb85c',\r\n    //        icon: checkIcon\r\n    //    },\r\n    //    {\r\n    //        id: 2,\r\n    //        title: 'Danger',\r\n    //        description: 'This is an error toast component',\r\n    //        backgroundColor: '#d9534f',\r\n    //        icon: errorIcon\r\n    //    },\r\n    //    {\r\n    //        id: 3,\r\n    //        title: 'Info',\r\n    //        description: 'This is an info toast component',\r\n    //        backgroundColor: '#5bc0de',\r\n    //        icon: infoIcon\r\n    //    },\r\n    //    {\r\n    //        id: 4,\r\n    //        title: 'Warning',\r\n    //        description: 'This is a warning toast component',\r\n    //        backgroundColor: '#f0ad4e',\r\n    //        icon: warningIcon\r\n    //    }\r\n    //]\r\n    return (\r\n        <ToastListContext.Provider value={list}>\r\n            <ShowToastContext.Provider value={showToast}>\r\n                {children}\r\n            </ShowToastContext.Provider>\r\n        </ToastListContext.Provider>\r\n    )\r\n}",["125","126"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\Comment.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Tasks.js",["127"],"import Task from './Task'\r\nimport { useState, useRef, useCallback, useEffect } from 'react'\r\nimport Toggle from 'react-toggle'\r\nimport \"react-toggle/style.css\"\r\n//import CoolColor from './CoolColor'\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\r\n\r\n//.map() takes in  a function\r\nconst Tasks = ({ tasks, onDelete, onToggle, onGoToDetail }) => {\r\n    const [showCompleted, setShowCompleted] = useState(true)\r\n    //whether or not there are more tasks to render\r\n    const [hasMore, setHasMore] = useState(true)\r\n    //the way inifitinte scroll works is it will query the rest of the tasks and append them\r\n    //to the list of tasks to show\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    //the gets set by the callback of last task ref\r\n    const observer = useRef()\r\n    //node is the element with lastTaskRef as the ref\r\n    const lastTaskRef = useCallback(node => {\r\n        if (observer.current) observer.current.disconnect()\r\n        //https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\r\n        //gist is it finds if the node is in the view of the window\r\n        observer.current = new IntersectionObserver(entries => {\r\n            //check if has more is true so we dont paginate forever\r\n            if (entries[0].isIntersecting && hasMore) {\r\n                setPageNumber(prev => prev + 1)\r\n            }\r\n        })\r\n        if(node) observer.current.observe(node)\r\n    }, [hasMore, pageNumber])\r\n\r\n    useEffect(() => {\r\n        //console.log('tasks has rendered')\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!showCompleted) {\r\n            if (tasks.filter(t => !t.isCompleted).length <= pageNumber * 5) setHasMore(false)\r\n            else setHasMore(true)\r\n        }\r\n        else {\r\n\r\n            if (tasks.length <= pageNumber * 5) setHasMore(false)\r\n            else setHasMore(true)\r\n        }\r\n\r\n    }, [pageNumber, tasks, showCompleted])\r\n\r\n  function toggleShowCompleted(e) {\r\n    e.currentTarget.blur()\r\n    setShowCompleted(!showCompleted)  \r\n  }\r\n\r\n    const getSlicedTasks = () => {\r\n      let arr = showCompleted ? tasks.slice(0, (pageNumber * 5)) : tasks.filter(t => !t.isCompleted).slice(0, (pageNumber * 5))\r\n\r\n        let tasksToDisplay = arr.map((task, index) => {\r\n            return (arr.length === index + 1) ?\r\n                (<div key={task.id} ref={lastTaskRef}>\r\n                    <Task\r\n                        key={index}\r\n                        task={task}\r\n                        onDelete={onDelete}\r\n                        onToggle={onToggle}\r\n                        onGoToDetail={onGoToDetail}\r\n                    />\r\n                </div>) :\r\n                (<div key={task.id}>\r\n                    <Task\r\n                        key={index}\r\n                        task={task}\r\n                        onDelete={onDelete}\r\n                        onToggle={onToggle}\r\n                        onGoToDetail={onGoToDetail}\r\n                    />\r\n                </div>)\r\n        })\r\n\r\n        return tasksToDisplay\r\n    }\r\n      \r\n    return (\r\n        <>\r\n            <label>\r\n                <Toggle\r\n                    id='toggleShowCompleted'\r\n                    defaultChecked={showCompleted}\r\n                    onChange={toggleShowCompleted}\r\n                />\r\n                <span>Show Completed Tasks?</span>\r\n            </label>                \r\n            <ReactCSSTransitionGroup transitionName=\"example\">\r\n                {getSlicedTasks()}\r\n            </ReactCSSTransitionGroup>                              \r\n        </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\Task.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-tracker\\CoolColor.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserManager.js",["128","129","130","131"],"import { useState, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Constant from '../Constant'\r\nimport userFunctions from './UserFunctions'\r\nimport { useShowToast } from '../toast/ToastContext'\r\nimport { useToken } from './UserContext'\r\nimport Helpers from '../../Helpers'\r\n\r\n\r\nconst UserManager = ({ handleLogout }) => {\r\n    //console.log(`id: ${id}`)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [user, setUser] = useState()\r\n    const [showDeleteForm, setShowDeleteForm] = useState(false)\r\n    const [deleteDisabled, setDeleteDisabled] = useState(false)\r\n    const [submitDisabled, setSubmitDisabled] = useState(false)\r\n    const { token } = useToken()\r\n\r\n    const onSave = useShowToast()\r\n    //https://stackoverflow.com/questions/53120972/how-to-call-loading-function-with-react-useeffect-only-once\r\n\r\n    useEffect(() => {\r\n\r\n        const getUser = async () => {\r\n            try {\r\n                //\r\n                //(CrudOperations)                               \r\n\r\n                //console.log('getting user')\r\n                //console.log(`user = ${userId}`)\r\n                if (token != undefined) {\r\n                    const userData = await userFunctions.getUser(token?.id, token?.token)\r\n                    setUser(userData)\r\n                    setIsLoading(false)\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n                onSave('error', error)\r\n            }\r\n        }\r\n\r\n        getUser()\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        return function cleanup() {\r\n            //console.log('clean up')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //console.log('user use effect')\r\n        //if (isChecked != undefined) {\r\n        //    //const updatedUser = await userFunctions.saveUser({ user, id, token })        \r\n        //}\r\n        //else {\r\n        //    console.log('first time')\r\n        //}\r\n        //console.log('set')\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        console.log('isLoading use effect')\r\n    }, [isLoading])\r\n\r\n    \r\n\r\n\r\n    async function updateUser(appUser) {\r\n        \r\n        return fetch(`${Constant()}/api/users/${token?.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token?.token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(appUser),\r\n        })\r\n            .then(function (data) {\r\n               onSave('success', 'Your changes have been saved')\r\n               return data.json()\r\n            })\r\n            .catch((error) => {\r\n               onSave('error', error)\r\n            })\r\n    }\r\n\r\n    const sleep = (milliseconds) => {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        setSubmitDisabled(true)\r\n        let res = await updateUser(user)  \r\n        await sleep(1000)\r\n        setSubmitDisabled(false)\r\n    }\r\n\r\n    const onSubmitDelete = async e => {\r\n        e.preventDefault()\r\n        setDeleteDisabled(true)\r\n        setShowDeleteForm(true)\r\n        //handleLogout(e)\r\n        //let res = await deleteAccount(id)\r\n    }\r\n\r\n    const onDelete = async e => {\r\n        e.preventDefault()\r\n        handleLogout(e)\r\n        let res = await deleteAccount()\r\n    }\r\n\r\n    async function deleteAccount() {\r\n        return fetch(`${Constant()}/api/users/${token?.id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token?.token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ userId: token?.id }),\r\n        })\r\n        .then(data => data.json())\r\n        .catch((error) => {\r\n            console.error('Fetch Error:', error);\r\n        });\r\n    }  \r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <p>Loading...</p>\r\n            ):\r\n                (<div>\r\n                    {showDeleteForm && (\r\n                        <div className='popup'>\r\n                            <div className='popupForm'>\r\n                                <form>\r\n                                    <label for=\"\">Are you sure?</label>\r\n                                    <br />\r\n                                    <button\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'green' }}\r\n                                        onClick={onDelete}\r\n                                    >\r\n                                        Yes\r\n                                    </button>\r\n                                    <button\r\n                                        type='submit'\r\n                                        className='btn'\r\n                                        style={{ backgroundColor: 'red' }}\r\n                                        onClick={function () {\r\n                                            setDeleteDisabled(false)\r\n                                            setShowDeleteForm(false)\r\n                                        }}\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n\r\n                                </form>\r\n                            </div>                          \r\n                        </div>\r\n                    )}\r\n                    <Form onSubmit={onSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Open To Collaboration?: \"\r\n                                checked={user.isOpenToCollaboration}\r\n                                onChange={(e) => setUser({ ...user, isOpenToCollaboration: e.currentTarget.checked })} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>\r\n                                Bio: \r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=''\r\n                                value={Helpers.replaceNullWithEmptyString(user?.bio)}\r\n                                onChange={(e) => setUser({ ...user, bio: e.target.value })}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <button\r\n                            type='submit'\r\n                            className='btn btn-block'\r\n                            style={{ backgroundColor: 'green' }}\r\n                            disabled={submitDisabled}\r\n                        >\r\n                            Save Changes\r\n                        </button>\r\n                    </Form>\r\n\r\n                    <form onSubmit={onSubmitDelete}>\r\n                        <button\r\n                            type='submit'\r\n                            className='btn'\r\n                            style={{ backgroundColor: 'red' }}\r\n                            disabled={deleteDisabled}\r\n                        >\r\n                            Delete Account\r\n                        </button>\r\n                    </form >                 \r\n                    \r\n                </div>)}\r\n            \r\n        </>\r\n   )\r\n}\r\n\r\nexport default UserManager","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryCrudOperations.js",["132"],"﻿import Constant from '../Constant'\r\n\r\nconst CategoryCrudOperations = {\r\n\r\n    'getCategoriesByUser': async (id, token) => {\r\n        //console.log('getting user data')\r\n        const res = await fetch(Constant() + `/api/users/${id}/Categories`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n        const categories = await res.json()\r\n\r\n        return categories\r\n    },\r\n    'postCategory': async (token, category) => {\r\n        return await fetch(Constant() + `/api/Categories`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(category)\r\n        })\r\n        .then(data => data.json())\r\n        .catch((error) => console.error('Fetch Error:', error))\r\n    }\r\n\r\n}\r\n\r\nexport default CategoryCrudOperations","C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\api-authorization\\UserContext.js",[],["133","134"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\Colors.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\AddCategory.js",["135"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\reportWebVitals.js",[],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\DeleteTask.js",["136"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\task-crud-operations\\CreateTask.js",["137"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\comment-components\\CommentForm.js",["138","139","140"],"C:\\Users\\lritter\\Source\\Repos\\react-crash-2021\\react-crash-2021.app\\ClientApp\\src\\components\\categories\\CategoryContainer.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":1,"nodeType":"147","messageId":"148","fix":"149"},{"ruleId":"150","severity":1,"message":"151","line":19,"column":5,"nodeType":"152","endLine":19,"endColumn":7,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":51,"column":13,"nodeType":"156","endLine":51,"endColumn":41},{"ruleId":"157","severity":1,"message":"158","line":51,"column":13,"nodeType":"156","endLine":51,"endColumn":41},{"ruleId":"141","replacedBy":"159"},{"ruleId":"143","replacedBy":"160"},{"ruleId":"141","replacedBy":"161"},{"ruleId":"143","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"163","severity":1,"message":"167","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":18},{"ruleId":"141","replacedBy":"168"},{"ruleId":"143","replacedBy":"169"},{"ruleId":"163","severity":1,"message":"170","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":19},{"ruleId":"141","replacedBy":"171"},{"ruleId":"143","replacedBy":"172"},{"ruleId":"150","severity":1,"message":"173","line":30,"column":8,"nodeType":"152","endLine":30,"endColumn":29,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":31,"column":27,"nodeType":"177","messageId":"148","endLine":31,"endColumn":29},{"ruleId":"150","severity":1,"message":"178","line":45,"column":8,"nodeType":"152","endLine":45,"endColumn":10,"suggestions":"179"},{"ruleId":"163","severity":1,"message":"180","line":97,"column":13,"nodeType":"165","messageId":"166","endLine":97,"endColumn":16},{"ruleId":"163","severity":1,"message":"180","line":113,"column":13,"nodeType":"165","messageId":"166","endLine":113,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":1,"column":1,"nodeType":"147","messageId":"148","fix":"181"},{"ruleId":"141","replacedBy":"182"},{"ruleId":"143","replacedBy":"183"},{"ruleId":"163","severity":1,"message":"184","line":10,"column":20,"nodeType":"165","messageId":"166","endLine":10,"endColumn":28},{"ruleId":"145","severity":1,"message":"146","line":1,"column":1,"nodeType":"147","messageId":"148","fix":"185"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":1,"nodeType":"147","messageId":"148","fix":"186"},{"ruleId":"163","severity":1,"message":"184","line":9,"column":20,"nodeType":"165","messageId":"166","endLine":9,"endColumn":28},{"ruleId":"175","severity":1,"message":"176","line":21,"column":27,"nodeType":"177","messageId":"148","endLine":21,"endColumn":29},{"ruleId":"150","severity":1,"message":"187","line":34,"column":8,"nodeType":"152","endLine":34,"endColumn":10,"suggestions":"188"},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"191","text":"192"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'exportTaskToiCal' and 'task.day'. Either include them or remove the dependency array.","ArrayExpression",["193"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["189"],["190"],["189"],["190"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["189"],["190"],"'warningIcon' is defined but never used.",["189"],["190"],"React Hook useCallback has an unnecessary dependency: 'pageNumber'. Either exclude it or remove the dependency array.",["194"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","React Hook useEffect has missing dependencies: 'onSave' and 'token'. Either include them or remove the dependency array.",["195"],"'res' is assigned a value but never used.",{"range":"196","text":"192"},["189"],["190"],"'setToken' is assigned a value but never used.",{"range":"197","text":"192"},{"range":"198","text":"192"},"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["199"],"no-global-assign","no-unsafe-negation",[-1,0],"",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},[-1,0],[-1,0],[-1,0],{"desc":"206","fix":"207"},"Update the dependencies array to be: [exportTaskToiCal, task.day]",{"range":"208","text":"209"},"Update the dependencies array to be: [hasMore]",{"range":"210","text":"211"},"Update the dependencies array to be: [onSave, token]",{"range":"212","text":"213"},"Update the dependencies array to be: [token]",{"range":"214","text":"215"},[531,533],"[exportTaskToiCal, task.day]",[1446,1467],"[hasMore]",[1531,1533],"[onSave, token]",[1130,1132],"[token]"]